BEGIN ~Baldurdash Fix Pack for SoA-ToB, v1.76 WeiDU~

PRINT ~Core Baldurdash Fixes (by Kevin Dorner)~

//PRINT ~Throne of Bhaal Extender (TobEx) v0026 (by Ascension64)~

//OUTER_SPRINT TOBEX_MOD_DIRECTORY "./NeJE"
//LOAD_TRA "%TOBEX_MOD_DIRECTORY%/TobEx_redist/TobEx.tra"
//ACTION_INCLUDE "%TOBEX_MOD_DIRECTORY%/TobEx_redist/TobEx.tpa"

COPY ~NeJE\bdash\copy_2da~ ~override~
COPY ~NeJE\bdash\copy_bcs~ ~override~
COPY ~NeJE\bdash\copy_cre~ ~override~
COPY ~NeJE\bdash\copy_eff~ ~override~
COPY ~NeJE\bdash\copy_ids~ ~override~
COPY ~NeJE\bdash\copy_itm~ ~override~
COPY ~NeJE\bdash\copy_spl~ ~override~
COPY ~NeJE\bdash\copy_sto~ ~override~
COPY ~NeJE\bdash\copy_wav~ ~override~

//COPY ~NeJE\bdash\ionstone~ ~override~
//New animation for water element
COPY ~NeJE\bdash\new_wat~ ~override~


//Fixing AreaType - thanks to Ardanis
//alter missing areatype check to match banter trigger
//for example, Minsc in Umar Hills reminder, Nalia-Edwina banter
COPY_EXISTING ~aerie.bcs~ ~override~
              ~anomen.bcs~ ~override~
              ~minsc.bcs~ ~override~
              ~nalia.bcs~ ~override~
              ~yoshimo.bcs~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~AreaType(0)~ ~AreaType(OUTDOOR)~
    END
BUT_ONLY

//Fixing Imoen's banters
COPY_EXISTING ~interdia.2da~ ~override~
    SET_2DA_ENTRY 17 1 2 ~BIMOEN2~
BUT_ONLY

//NPC adding to areas
COPY_EXISTING ~AR0604.bcs~ ~override~
    EXTEND_TOP ~AR0604.bcs~ ~NeJE\bdash\npc\eAR0604.baf~

COPY_EXISTING ~AR0701.bcs~ ~override~
    EXTEND_TOP ~AR0701.bcs~ ~NeJE\bdash\npc\eAR0701.baf~

COPY_EXISTING ~AR1000.bcs~ ~override~
    EXTEND_TOP ~AR1000.bcs~ ~NeJE\bdash\npc\eAR1000.baf~

COPY_EXISTING ~AR0304.bcs~ ~override~
    EXTEND_TOP ~AR0304.bcs~ ~NeJE\bdash\npc\eAR0304.baf~

COPY_EXISTING ~AR0406.bcs~ ~override~
    EXTEND_TOP ~AR0406.bcs~ ~NeJE\bdash\npc\eAR0406.baf~

ACTION_IF FILE_EXISTS ~AR1101.bcs~ THEN BEGIN
    COPY_EXISTING ~AR1101.bcs~ ~override~
        EXTEND_BOTTOM ~AR1101.bcs~ ~NeJE\bdash\npc\AR1101.baf~
    END ELSE BEGIN
        COMPILE ~NeJE\bdash\npc\AR1101.baf~
    END

//***********************************************************************************************
//   RULESETS
//***********************************************************************************************

PRINT ~Patching rulestes(.2DA)...~

//Alignment By Class Table Fix
//-------------------------------------------------------------------------
// all multi-class thieves were restricted from all Lawful Alignments (Lawful Good\Neutral\Evil)
// rather than just from that of Lawful Good, as per AD&D standards.
// Single-class thieves were correctly restricted only from Lawful Good alignment.
//-------------------------------------------------------------------------
COPY_EXISTING ~ALIGNMNT.2DA~ ~override~
    COUNT_2DA_ROWS 10 "rows_cnt"
    FOR (cnt=0; cnt<"%rows_cnt%"; cnt=cnt+1) BEGIN
        READ_2DA_ENTRY cnt 0 10 "row_name"
        PATCH_IF((("%row_name%" STRING_COMPARE_CASE "FIGHTER_THIEF") = 0)
        OR (("%row_name%" STRING_COMPARE_CASE "FIGHTER_MAGE_THIEF") = 0)
        OR (("%row_name%" STRING_COMPARE_CASE "MAGE_THIEF") = 0)
        OR (("%row_name%" STRING_COMPARE_CASE "CLERIC_THIEF") = 0)) BEGIN
            SET_2DA_ENTRY cnt 2 10 ~1~
            SET_2DA_ENTRY cnt 3 10 ~1~
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Triple-Class Mages Missing High-Level Spell Slots Abilities Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~Luabbr.2da~ ~override~
    COUNT_2DA_ROWS 2 "rows_cnt"
    FOR (cnt=0; cnt<"%rows_cnt%"; cnt=cnt+1) BEGIN
        READ_2DA_ENTRY cnt 0 2 "row_name"
        PATCH_IF (("%row_name%" STRING_COMPARE_CASE "FIGHTER_MAGE_THIEF") = 0) BEGIN
            SET_2DA_ENTRY cnt 1 2 ~FMT~
        END
        PATCH_IF (("%row_name%" STRING_COMPARE_CASE "FIGHTER_MAGE_CLERIC") = 0) BEGIN
            SET_2DA_ENTRY cnt 1 2 ~FMC~
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Multiclass Thieves' Multiple Assassination Abilities Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~LUBA1.2DA~ ~override~
              ~LUTH2.2DA~ ~override~
    COUNT_2DA_ROWS 9 "rows_cnt"
    FOR (cnt=0; cnt<"%rows_cnt%"; cnt=cnt+1) BEGIN
        READ_2DA_ENTRY cnt 1 9 "row_name"
        PATCH_IF (("%row_name%" STRING_COMPARE_CASE "GA_SPCL916") = 0) BEGIN
            SET_2DA_ENTRY cnt 7 9 ~GA_SPCL916~
        END
    END
BUT_ONLY


COPY_EXISTING ~LUBA2.2DA~ ~override~
              ~LUBA3.2DA~ ~override~
              ~LUTH3.2DA~ ~override~
    COUNT_2DA_ROWS 9 "rows_cnt"
    FOR (cnt = 0 ; cnt < "%rows_cnt%" ; cnt=cnt + 1) BEGIN
        READ_2DA_ENTRY cnt 1 9 "row_name"
        PATCH_IF( ("%row_name%" STRING_COMPARE_CASE "GA_SPCL916")=0 ) BEGIN
            SET_2DA_ENTRY cnt 8 9 ~GA_SPCL916~
        END
    END
BUT_ONLY


COPY_EXISTING ~LUCT0.2DA~ ~override~
              ~LUMT0.2DA~ ~override~
    COUNT_2DA_ROWS 10 "rows_cnt"
    FOR (cnt=0 ; cnt < "%rows_cnt%"; cnt = cnt + 1) BEGIN
        READ_2DA_ENTRY cnt 1 10 "row_name"
        PATCH_IF( ("%row_name%" STRING_COMPARE_CASE "GA_SPCL916")=0 ) BEGIN
            SET_2DA_ENTRY cnt 8 10 ~GA_SPCL916~
        END
    END
BUT_ONLY


COPY_EXISTING ~LUFT0.2DA~ ~override~
    COUNT_2DA_ROWS 10 "rows_cnt"
    FOR( cnt=0; cnt<"%rows_cnt%"; cnt=cnt+1 ) BEGIN
        READ_2DA_ENTRY cnt 1 10 "row_name"
        PATCH_IF( ("%row_name%" STRING_COMPARE_CASE "GA_SPCL917")=0 ) BEGIN
            SET_2DA_ENTRY cnt 8 10 ~GA_SPCL916~
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Raise Dead Temple Prices Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~RAISDEAD.2DA~ ~override~
    COUNT_2DA_ROWS 2 "rows_cnt"
    FOR( cnt=0; cnt<"%rows_cnt%"; cnt=cnt+1 ) BEGIN
        READ_2DA_ENTRY cnt 0 2 "row_num"
        PATCH_IF( ("%row_num%" STRING_COMPARE_CASE "29")=0 ) BEGIN
            SET_2DA_ENTRY cnt 1 2 ~12500~
        END
        PATCH_IF( ("%row_num%" STRING_COMPARE_CASE "30")=0 ) BEGIN
            SET_2DA_ENTRY cnt 1 2 ~13000~
        END
        PATCH_IF( ("%row_num%" STRING_COMPARE_CASE "32")=0 ) BEGIN
            SET_2DA_ENTRY cnt 1 2 ~14000~
        END
        PATCH_IF( ("%row_num%" STRING_COMPARE_CASE "34")=0 ) BEGIN
            SET_2DA_ENTRY cnt 1 2 ~15000~
        END
        PATCH_IF( ("%row_num%" STRING_COMPARE_CASE "36")=0 ) BEGIN
            SET_2DA_ENTRY cnt 1 2 ~16000~
        END
        PATCH_IF( ("%row_num%" STRING_COMPARE_CASE "38")=0 ) BEGIN
            SET_2DA_ENTRY cnt 1 2 ~17000~
        END
        PATCH_IF( ("%row_num%" STRING_COMPARE_CASE "40")=0 ) BEGIN
            SET_2DA_ENTRY cnt 1 2 ~18000~
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Rogue & Wizard Saving Throw Tables Fixes
//-------------------------------------------------------------------------

COPY_EXISTING ~SAVEROG.2DA~ ~override~
    COUNT_2DA_ROWS 41 "rows_cnt"
    FOR( cnt=0; cnt<"%rows_cnt%"; cnt=cnt+1 ) BEGIN
        READ_2DA_ENTRY cnt 0 41 "row_name"
        PATCH_IF( ("%row_name%" STRING_COMPARE_CASE "DEATH")=0 ) BEGIN
            FOR( cell=21; cell<41; cell=cell+1 ) BEGIN
                SET_2DA_ENTRY cnt cell 41 ~8~
            END
        END
        PATCH_IF( ("%row_name%" STRING_COMPARE_CASE "WANDS")=0 ) BEGIN
            FOR( cell=21; cell<41; cell=cell+1 ) BEGIN
                SET_2DA_ENTRY cnt cell 41 ~4~
            END
        END
        PATCH_IF( ("%row_name%" STRING_COMPARE_CASE "POLY")=0 ) BEGIN
            FOR( cell=21; cell<41; cell=cell+1 ) BEGIN
                SET_2DA_ENTRY cnt cell 41 ~7~
            END
        END
        PATCH_IF( ("%row_name%" STRING_COMPARE_CASE "BREATH")=0 ) BEGIN
            FOR( cell=21; cell<41; cell=cell+1 ) BEGIN
                SET_2DA_ENTRY cnt cell 41 ~11~
            END
        END
        PATCH_IF( ("%row_name%" STRING_COMPARE_CASE "SPELL")=0 ) BEGIN
            FOR( cell=21; cell<41; cell=cell+1 ) BEGIN
                SET_2DA_ENTRY cnt cell 41 ~5~
            END
        END
    END
BUT_ONLY

COPY_EXISTING ~SAVEWIZ.2DA~ ~override~
    COUNT_2DA_ROWS 41 "rows_cnt"
    FOR( cnt=0; cnt<"%rows_cnt%"; cnt=cnt+1 ) BEGIN
        READ_2DA_ENTRY cnt 0 41 "row_name"
        PATCH_IF( ("%row_name%" STRING_COMPARE_CASE "DEATH")=0 ) BEGIN
            FOR( cell=21; cell<41; cell=cell+1 ) BEGIN
                SET_2DA_ENTRY cnt cell 41 ~8 ~
            END
        END
        PATCH_IF( ("%row_name%" STRING_COMPARE_CASE "WANDS")=0 ) BEGIN
            FOR( cell=21; cell<41; cell=cell+1 ) BEGIN
                SET_2DA_ENTRY cnt cell 41 ~3~
            END
        END
        PATCH_IF( ("%row_name%" STRING_COMPARE_CASE "POLY")=0 ) BEGIN
            FOR( cell=21; cell<41; cell=cell+1 ) BEGIN
                SET_2DA_ENTRY cnt cell 41 ~5~
            END
        END
        PATCH_IF( ("%row_name%" STRING_COMPARE_CASE "BREATH")=0 ) BEGIN
            FOR( cell=21; cell<41; cell=cell+1 ) BEGIN
                SET_2DA_ENTRY cnt cell 41 ~7~
            END
        END
        PATCH_IF( ("%row_name%" STRING_COMPARE_CASE "SPELL")=0 ) BEGIN
            FOR( cell=21; cell<41; cell=cell+1 ) BEGIN
                SET_2DA_ENTRY cnt cell 41 ~4~
            END
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Echoey Waukeen's Promenade Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~SndResRf.2da~ ~override~
    COUNT_2DA_ROWS 2 "rows_cnt"
    FOR( cnt=0; cnt<"%rows_cnt%"; cnt=cnt+1 ) BEGIN
        READ_2DA_ENTRY cnt 0 2 "row_name"
        PATCH_IF( ("%row_name%" STRING_COMPARE_CASE "AR0700")=0 ) BEGIN
            SET_2DA_ENTRY cnt 0 2 ~AR3001~ //just make a duplicated STONE0-style entry
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//No failure and no limitation in spell memorisation
//-------------------------------------------------------------------------

COPY_EXISTING ~intmod.2da~ ~override~
    COUNT_2DA_ROWS ~5~ "rows"
    FOR (index = 3; index < rows ; index = index + 1) BEGIN
        SET_2DA_ENTRY_LATER ~intmod~ index 1 ~150~
        SET_2DA_ENTRY_LATER ~intmod~ index 2 ~9~
        SET_2DA_ENTRY_LATER ~intmod~ index 3 ~99~
    END
    SET_2DA_ENTRIES_NOW ~intmod~ 1
BUT_ONLY

//-------------------------------------------------------------------------
//Throne Of Bhaal Weapons Proficiency Table Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~WEAPPROF.2DA~ ~override\WEAPPROF.2DA~
    SET C_T_column=1000
    SET F_M_C_column=1000
    SET C_R_column=1000
    SET F_D_column=1000
    COUNT_2DA_ROWS 40 "rows_cnt"
    FOR( cnt=0; cnt<"%rows_cnt%"; cnt=cnt+1 ) BEGIN
        READ_2DA_ENTRY 0 cnt 40 "col_name"
        PATCH_IF( ("%col_name%" STRING_COMPARE_CASE "CLERIC_THIEF")=0 ) BEGIN
            SET C_T_column=cnt+1
        END
        PATCH_IF( ("%col_name%" STRING_COMPARE_CASE "FIGHTER_DRUID")=0 ) BEGIN
            SET F_D_column=cnt+1
        END
        PATCH_IF( ("%col_name%" STRING_COMPARE_CASE "FIGHTER_MAGE_CLERIC")=0 ) BEGIN
            SET F_M_C_column=cnt+1
        END
        PATCH_IF( ("%col_name%" STRING_COMPARE_CASE "CLERIC_RANGER")=0 ) BEGIN
            SET C_R_column=cnt+1
        END
    END
    FOR( cnt=0; cnt<"%rows_cnt%"; cnt=cnt+1 ) BEGIN
        READ_2DA_ENTRY cnt 0 40 "row_name"
        PATCH_IF( ("%row_name%" STRING_COMPARE_CASE "DART")=0 AND C_T_column<1000 ) BEGIN
            SET_2DA_ENTRY cnt C_T_column 40 ~0~
        END
        PATCH_IF( ("%row_name%" STRING_COMPARE_CASE "2WEAPON")=0 ) BEGIN
            PATCH_IF( F_D_column<1000 ) BEGIN
                SET_2DA_ENTRY cnt F_D_column 40 ~3~
            END
            PATCH_IF( F_M_C_column<1000 ) BEGIN
                SET_2DA_ENTRY cnt F_M_C_column 40 ~3~
            END
            PATCH_IF( C_R_column<1000 ) BEGIN
                SET_2DA_ENTRY cnt C_R_column 40 ~3~
            END
        END
        PATCH_IF( ("%row_name%" STRING_COMPARE_CASE "2HANDED")=0 ) BEGIN
            PATCH_IF( F_M_C_column<1000 ) BEGIN
                SET_2DA_ENTRY cnt F_M_C_column 40 ~2~
            END
            PATCH_IF( C_R_column<1000 ) BEGIN
                SET_2DA_ENTRY cnt C_R_column 40 ~2~
            END
        END
    END
BUT_ONLY

COPY_EXISTING ~WEAPPROF.2DA~ ~override~
    FOR (column = 12; column < 21; column = column + 1) BEGIN
        FOR (row = 11; row < 31; row = row + 1) BEGIN
            READ_2DA_ENTRY row column 1 vp_point
            PATCH_IF (vp_point > 1) BEGIN
                SET_2DA_ENTRY_LATER ~GranMast~ row column ~5~
            END
        END
    END
    SET_2DA_ENTRIES_NOW ~GranMast~ 1
BUT_ONLY

//-------------------------------------------------------------------------
//Gromnir Il-Khan Quest Experience Reward Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~XPLIST.2DA~ ~override~
    COUNT_2DA_ROWS 40 "rows_cnt"
    FOR( cnt=0; cnt<"%rows_cnt%"; cnt=cnt+1 ) BEGIN
        READ_2DA_ENTRY cnt 0 40 "row_name"
        PATCH_IF( ("%row_name%" STRING_COMPARE_CASE "GROMNIR")=0 ) BEGIN
            SET_2DA_ENTRY cnt 36 40 ~-1          -1          -1          -1~
        END
    END
BUT_ONLY

//***********************************************************************************************
//   AREAS
//***********************************************************************************************

PRINT ~Patching areas(.ARE) ...~

//-------------------------------------------------------------------------
//Outdoor Encounter Areas Flags Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~AR0041.ARE~ ~override~
              ~AR0042.ARE~ ~override~
              ~AR0044.ARE~ ~override~
              ~AR0045.ARE~ ~override~
              ~AR1607.ARE~ ~override~
    READ_SHORT  0x48 "flags"
    WRITE_SHORT 0x48 ("%flags%" BOR 0x0001)   //Setting Outdoor flag
BUT_ONLY

//-------------------------------------------------------------------------
//Area Type Flag Various Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~AR0303.ARE~ ~override~
              ~AR0305.ARE~ ~override~
              ~AR0307.ARE~ ~override~
              ~AR0308.ARE~ ~override~
              ~AR0309.ARE~ ~override~
              ~AR0311.ARE~ ~override~
              ~AR0312.ARE~ ~override~
              ~AR0315.ARE~ ~override~
              ~AR0316.ARE~ ~override~
              ~AR0317.ARE~ ~override~
              ~AR0501.ARE~ ~override~
              ~AR0504.ARE~ ~override~
              ~AR0505.ARE~ ~override~
              ~AR0506.ARE~ ~override~
              ~AR0507.ARE~ ~override~
              ~AR0508.ARE~ ~override~
              ~AR0512.ARE~ ~override~
              ~AR0706.ARE~ ~override~
    READ_SHORT  0x48 "flags"
    WRITE_SHORT 0x48 ("%flags%" BAND 0xfff7)  //Resetting City flag
BUT_ONLY

COPY_EXISTING ~AR0310.ARE~ ~override~
              ~AR0331.ARE~ ~override~
              ~AR0418.ARE~ ~override~
              ~AR0521.ARE~ ~override~
              ~AR0526.ARE~ ~override~
              ~AR0601.ARE~ ~override~
              ~AR0606.ARE~ ~override~
              ~AR0804.ARE~ ~override~
              ~AR1106.ARE~ ~override~
              ~AR1203.ARE~ ~override~
              ~AR1402.ARE~ ~override~
              ~AR1501.ARE~ ~override~
              ~AR1608.ARE~ ~override~
              ~AR1610.ARE~ ~override~
              ~AR2901.ARE~ ~override~
              ~AR2902.ARE~ ~override~
              ~AR2903.ARE~ ~override~
              ~AR2905.ARE~ ~override~
    READ_SHORT  0x48 "flags"
    WRITE_SHORT 0x48 ("%flags%" BOR 0x0020)  //Setting Dungeon flag
BUT_ONLY

COPY_EXISTING ~AR1002.ARE~ ~override~
    READ_SHORT  0x48 "flags"
    WRITE_SHORT 0x48 ("%flags%" BOR 0x0008)  //Setting City flag
BUT_ONLY

COPY_EXISTING ~AR1101.ARE~ ~override~
    READ_SHORT  0x48 "flags"
    WRITE_SHORT 0x48 ("%flags%" BAND 0xffdf)  //Resetting Dungeon flag
BUT_ONLY

COPY_EXISTING ~AR2002.ARE~ ~override~
    READ_LONG   0x5c "ip_offset"
    READ_LONG   ("%ip_offset%"+0x60) "ip_flags"
    WRITE_LONG  ("%ip_offset%"+0x60) ("%ip_flags%" BAND 0xfffb) //Resetting Party Required flag for travel trigger
BUT_ONLY

COPY_EXISTING ~AR2603.ARE~ ~override~
    READ_SHORT  0x48 "flags"
    WRITE_SHORT 0x48 ("%flags%" BAND 0xffdf)  //Resetting Dungeon flag
    READ_LONG   0x5c "ip_offset"
    READ_LONG   ("%ip_offset%"+0x60) "ip_flags"
    WRITE_LONG  ("%ip_offset%"+0x60) ("%ip_flags%" BAND 0xfffb) //Resetting Party Required flag for travel trigger
BUT_ONLY

//-------------------------------------------------------------------------
//Thieves' Guild Stronghold Outdoor Flags & Resting Fixes
//-------------------------------------------------------------------------

COPY_EXISTING ~AR0321.ARE~ ~override~
    READ_SHORT  0x48 "flags"
    WRITE_SHORT 0x48 ("%flags%" BAND 0xfffe)  //Resetting Outdoor flag
    WRITE_ASCII 0x94 ~AR0321~                 //setting area script
    WRITE_BYTE (0x94+6) 0                    //terminating 0
BUT_ONLY

COPY_EXISTING ~AR0322.ARE~ ~override~
    READ_SHORT  0x48 "flags"
    WRITE_SHORT 0x48 ("%flags%" BAND 0xfffe)  //Resetting Outdoor flag
BUT_ONLY

COPY_EXISTING ~AR0323.ARE~ ~override~
    READ_SHORT  0x48 "flags"
    WRITE_SHORT 0x48 ("%flags%" BAND 0xfffe)  //Resetting Outdoor flag
    WRITE_ASCII 0x94 ~AR0323~                 //setting area script
    WRITE_BYTE (0x94+6) 0                    //terminating 0
BUT_ONLY

COPY_EXISTING ~AR0324.ARE~ ~override~
    WRITE_ASCII 0x94 ~AR0324~                 //setting area script
    WRITE_BYTE (0x94+6) 0                    //terminating 0
BUT_ONLY

COPY_EXISTING ~ar0321.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xAR0321.BAF~ ~NeJE\bdash\BAF_r\rAR0321.BAF~

EXTEND_BOTTOM ~ar0322.bcs~ ~NeJE\bdash\BAF_b\bAR0322.BAF~

COPY_EXISTING ~ar0323.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xAR0323.BAF~ ~NeJE\bdash\BAF_r\rAR0323.BAF~

COPY_EXISTING ~ar0324.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xAR0324.BAF~ ~NeJE\bdash\BAF_r\rAR0324.BAF~

//-------------------------------------------------------------------------
//Watcher's Keep Lowest Level Outdoor Area Trigger Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~AR3000.ARE~ ~override~
    READ_SHORT 0x5a  "infotrig_num"
    READ_LONG  0x5c  "infotrig_offset"
    READ_LONG  0x7c  "vert_offset"
    FOR( cnt=0; cnt<"%infotrig_num%"; cnt=cnt+1 ) BEGIN               //infotriggers loop
        READ_ASCII ("%infotrig_offset%"+0xc4*cnt)       "info_name"
        PATCH_IF (("%info_name%" STRING_COMPARE_CASE "Tran3020")=0) BEGIN
            WRITE_SHORT ("%infotrig_offset%"+0xc4*cnt+0x22+6) 2038        //Trigger's bounding_box.bottom
            READ_LONG ("%infotrig_offset%"+0xc4*cnt+0x2c) "first_vertex"
            WRITE_SHORT ("%vert_offset%"+"%first_vertex%"*4 + 2)     1995 //0 vertex Y
            WRITE_SHORT ("%vert_offset%"+("%first_vertex%"+3)*4 + 2) 2038 //3 vertex Y
        END
    END
BUT_ONLY

//***********************************************************************************************
//   Scripts
//***********************************************************************************************

PRINT ~Patching script-based issues...~

//-------------------------------------------------------------------------
//Anomen Title Lost In Throne Of Bhaal and Wisdom In Red Fixes
//-------------------------------------------------------------------------

EXTEND_TOP ~Anom25.bcs~ ~NeJE\bdash\BAF_t\tANOM25.BAF~

COPY_EXISTING ~SPIN678.SPL~ ~override~
    READ_LONG  0x64 "ability_offset"
    READ_SHORT 0x68 "abil_cnt"
    READ_LONG  0x6a "eff_offset"
    FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
        READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
        PATCH_IF("%type%"=1) BEGIN                                           //Melee
            READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
            READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
            FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
                READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
                PATCH_IF( "%eff_type%" = 49 ) BEGIN                          //wisdom bonus
                    WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0c) 1   //instant\permanent
                END
            END
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Unseeing Eye Not Appearing Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~ar0205.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xAR0205.BAF~ ~NeJE\bdash\BAF_r\rAR0205.BAF~

//-------------------------------------------------------------------------
//Planar Sphere Assassins Not Appearing Fix + rMGTEOS1.D
//-------------------------------------------------------------------------

COPY_EXISTING ~ar0411.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xAR0411.BAF~ ~NeJE\bdash\BAF_r\rAR0411.BAF~
    EXTEND_BOTTOM ~ar0411.bcs~ ~NeJE\bdash\BAF_b\bAR0411.BAF~

//-------------------------------------------------------------------------
//Paladin Tyrianna Assassin Quest Fixes
//-------------------------------------------------------------------------

COPY_EXISTING ~ar0415.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xAR0415.BAF~ ~NeJE\bdash\BAF_r\rAR0415.BAF~

COPY_EXISTING ~PLGIRL01.CRE~ ~override~
    WRITE_ASCII 0x248 "None"             //removing override script
    WRITE_BYTE (0x248+4) 0              //terminating 0
BUT_ONLY

//-------------------------------------------------------------------------
//Bodhi's Lair Inaccessible Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~ar0800.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xAR0800.BAF~ ~NeJE\bdash\BAF_r\rAR0800.BAF~

//-------------------------------------------------------------------------
//Unstakable Vampires Fix
//-------------------------------------------------------------------------

EXTEND_BOTTOM ~ar0801.bcs~ ~NeJE\bdash\BAF_b\bAR0801.BAF~

//-------------------------------------------------------------------------
//Paladin Resting In Stronghold Fix
//-------------------------------------------------------------------------

EXTEND_TOP ~ar0903.bcs~ ~NeJE\bdash\BAF_t\tAR0903.BAF~

//-------------------------------------------------------------------------
//Trapped In Twisted Rune Lair Fix
//-------------------------------------------------------------------------

EXTEND_BOTTOM ~ar1008.bcs~ ~NeJE\bdash\BAF_b\bAR1008.BAF~

//-------------------------------------------------------------------------
//Captain Arat Dialog Fixes + rKPCAPT1.D
//-------------------------------------------------------------------------

EXTEND_BOTTOM ~ar1300.bcs~ ~NeJE\bdash\BAF_b\bAR1300.BAF~

//-------------------------------------------------------------------------
//Tombelthen's Journal Fix
//-------------------------------------------------------------------------

EXTEND_TOP ~ar1401.bcs~ ~NeJE\bdash\BAF_t\tAR1401.BAF~

//-------------------------------------------------------------------------
//Spellhold Asylum Entry Trap & Sequence Looping Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~ar1515.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\x1AR1515.BAF~ ~NeJE\bdash\BAF_r\r1AR1515.BAF~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\x2AR1515.BAF~ ~NeJE\bdash\BAF_r\r2AR1515.BAF~

//-------------------------------------------------------------------------
//Sime Dialog Loop Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~ar1600.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xAR1600.BAF~ ~NeJE\bdash\BAF_r\rAR1600.BAF~

//-------------------------------------------------------------------------
//Druid Multi\Dual-Class Stronghold Fix + rCECHALL.D
//-------------------------------------------------------------------------
COPY_EXISTING ~ar1901.bcs~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~CreateCreatureObjectEffect("Drshsp01","SPFLESHS",Player1)~ ~CreateCreatureObject("Drshsp01",Player1,0,0,0)~
        REPLACE_TEXTUALLY ~CreateCreatureObjectEffect("TREVIL03","SPDIMNDR",Player1)~ ~CreateCreatureObject("TREVIL03",Player1,0,0,0)~
    END
    EXTEND_BOTTOM ~ar1901.bcs~ ~NeJE\bdash\BAF_b\bAR1901.BAF~

//-------------------------------------------------------------------------
//Drow Longsword Protagonist Check Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~ar2500.bcs~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~CreateCreatureObjectEffect("c6elvenw","spportal",Player1)~ ~CreateCreatureObject("c6elvenw",Player1,0,0,0)~
        REPLACE_TEXTUALLY ~DWCSW1H01~ ~DWSW1H01~
    END

//-------------------------------------------------------------------------
//Tears Of Bhaal Fear & Selfish Test Results and Already-Evil Alignment-Shifting Fixes
//-------------------------------------------------------------------------

COPY_EXISTING ~ar2900.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xAR2900.BAF~ ~NeJE\bdash\BAF_r\rAR2900.BAF~

COPY_EXISTING ~Teardoor.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xTEARD1.BAF~ ~NeJE\bdash\BAF_r\rTEARD1.BAF~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xTEARD2.BAF~ ~NeJE\bdash\BAF_r\rTEARD2.BAF~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xTEARD3.BAF~ ~NeJE\bdash\BAF_r\rTEARD3.BAF~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xTEARD4.BAF~ ~NeJE\bdash\BAF_r\rTEARD4.BAF~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xTEARD5.BAF~ ~NeJE\bdash\BAF_r\rTEARD5.BAF~

COPY_EXISTING ~SPIN747.SPL~ ~override~
              ~SPIN749.SPL~ ~override~
              ~SPIN751.SPL~ ~override~
              ~SPIN753.SPL~ ~override~
              ~SPIN755.SPL~ ~override~
    READ_LONG  0x64 "ability_offset"
    READ_SHORT 0x68 "abil_cnt"
    READ_LONG  0x6a "eff_offset"
    FOR (cnt = 0 ; cnt < "%abil_cnt%" ; cnt = cnt + 1) BEGIN
        READ_BYTE ("%ability_offset%"+cnt*0x28) "type"
        PATCH_IF("%type%"=1) BEGIN                                     //Melee ability
            READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
            READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
            SET offset=0
            FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
                READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx)) "eff_type"
                PATCH_IF( "%eff_type%" = 57 ) BEGIN                        //we should delete change alignment effect
                    offset = ("%eff_offset%"+0x30*(cnt2+eff_idx))
                END
            END
        END
        PATCH_IF (offset > 0) BEGIN
            DELETE_BYTES offset 0x30
            WRITE_SHORT ("%ability_offset%"+0x28*cnt+0x1e) eff_number+0xffffffff // eff_number-1
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Tears Of Bhaal Tests Paladin & Ranger Falling Fixes
//-------------------------------------------------------------------------

EXTEND_BOTTOM ~ar2901.bcs~ ~NeJE\bdash\BAF_b\bAR2901.BAF~
EXTEND_BOTTOM ~ar2902.bcs~ ~NeJE\bdash\BAF_b\bAR2902.BAF~
EXTEND_BOTTOM ~ar2903.bcs~ ~NeJE\bdash\BAF_b\bAR2903.BAF~

COPY_EXISTING ~ar2904.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xAR2904.BAF~ ~NeJE\bdash\BAF_r\rAR2904.BAF~

EXTEND_BOTTOM ~ar2905.bcs~ ~NeJE\bdash\BAF_b\bAR2905.BAF~

//-------------------------------------------------------------------------
//Drow Item\Avatar Fixes
//-------------------------------------------------------------------------

COPY_EXISTING ~baldur.bcs~ ~override~
    EXTEND_TOP ~baldur.bcs~ ~NeJE\bdash\BAF_t\tBALDUR.BAF~

//-------------------------------------------------------------------------
//Spellhold Return Invisiblity & Bhaalpower Loss Notification Fixes
//-------------------------------------------------------------------------

COPY_EXISTING ~Cut41i.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xCUT41I.BAF~ ~NeJE\bdash\BAF_r\rCUT41I.BAF~

COPY_EXISTING ~Cut41j.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xCUT41J.BAF~ ~NeJE\bdash\BAF_r\rCUT41J.BAF~

//-------------------------------------------------------------------------
//Edwin's Nether Scroll Quest Fixes + rEDWINJ.D
//-------------------------------------------------------------------------

COPY_EXISTING ~Edwin.bcs~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~SetPlayerSound(Myself,30716,SELECT_ACTION4)~ ~SetPlayerSound(Myself,30715,SELECT_ACTION4)~
        REPLACE_TEXTUALLY ~SetPlayerSound(Myself,30717,SELECT_ACTION5)~ ~SetPlayerSound(Myself,3984,SELECT_ACTION5)~
        REPLACE_TEXTUALLY ~SetPlayerSound(Myself,30718,SELECT_ACTION6)~ ~SetPlayerSound(Myself,3985,SELECT_ACTION6)~
        REPLACE_TEXTUALLY ~SetPlayerSound(Myself,30719,SELECT_ACTION7)~ ~SetPlayerSound(Myself,3986,SELECT_ACTION7)~
    END
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xEDWIN.BAF~ ~NeJE\bdash\BAF_r\rEDWIN.BAF~

COPY_EXISTING ~SPIN661.SPL~ ~override~
    READ_LONG  0x64 "ability_offset"
    READ_SHORT 0x68 "abil_cnt"
    READ_LONG  0x6a "eff_offset"
    SET exists=0
    SET offset=0
    SET abil_off=0
    SET numm=0
    FOR (cnt = 0; cnt<"%abil_cnt%"; cnt = cnt + 1) BEGIN
        READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
        PATCH_IF("%type%"=1) BEGIN        //Melee
            READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
            READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
            abil_off = "%ability_offset%"+0x28*cnt
            FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
                READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
                READ_BYTE  ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0c) "duration"
                offset = ("%eff_offset%"+0x30*(cnt2+eff_idx+1))
                numm = eff_number+1
                PATCH_IF( ("%eff_type%"=71) AND ("%duration%"=0) ) BEGIN  //change sex
                    exists=1
                END
            END
        END
    END
    PATCH_IF( exists=0 ) BEGIN
        WRITE_SHORT (abil_off+0x1e) numm
        INSERT_FILE offset ~NeJE\BDash\BIN\SPIN661.SP_~
    END
BUT_ONLY

COPY_EXISTING ~SPIN662.SPL~ ~override~
    READ_LONG  0x64 "ability_offset"
    READ_SHORT 0x68 "abil_cnt"
    READ_LONG  0x6a "eff_offset"
    SET exists = 0
    SET offset = 0
    SET abil_off = 0
    SET numm = 0
    FOR(cnt = 0; cnt < "%abil_cnt%"; cnt = cnt + 1) BEGIN
        READ_BYTE ("%ability_offset%" + cnt * 0x28) "type"
        PATCH_IF ("%type%" = 1) BEGIN        //Melee
            READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e) eff_number
            READ_SHORT ("%ability_offset%"+0x28*cnt+0x20) eff_idx
            abil_off = "%ability_offset%"+0x28*cnt
            FOR(cnt2=0; cnt2<eff_number; cnt2=cnt2+1) BEGIN
                READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))"eff_type"
                READ_BYTE  ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0c) "duration"
                offset = ("%eff_offset%"+0x30*(cnt2+eff_idx+1))
                numm = eff_number+1
                PATCH_IF( ("%eff_type%"=71) AND ("%duration%"=0) ) BEGIN  //change sex
                    exists=1
                END
            END
        END
    END
    PATCH_IF( exists=0 ) BEGIN
        WRITE_SHORT (abil_off+0x1e)  numm
        INSERT_FILE offset ~NeJE\BDash\BIN\SPIN662.SP_~
    END
BUT_ONLY

COPY_EXISTING ~SPIN664.SPL~ ~override~
    READ_LONG  0x64 "ability_offset"
    READ_SHORT 0x68 "abil_cnt"
    READ_LONG  0x6a "eff_offset"
    FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
        READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
        PATCH_IF("%type%"=1) BEGIN        //Melee
            READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
            READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
            FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
                READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
                PATCH_IF( "%eff_type%"=174 ) BEGIN  //change sex
                    WRITE_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x24)  0  //savetype was vs. death\poison
                END
            END
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Throne Of Bhaal Jaheira Romance Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~Jahe25.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xJAHE25.BAF~ ~NeJE\bdash\BAF_r\rJAHE25.BAF~

//-------------------------------------------------------------------------
//Mazzy & Valygar Enemies When One Charmed Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~Mazzy.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\x1MAZZY.BAF~ ~NeJE\bdash\BAF_r\r1MAZZY.BAF~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\x2MAZZY.BAF~ ~NeJE\bdash\BAF_r\r2MAZZY.BAF~

COPY_EXISTING ~Valygar.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xVALYGAR.BAF~ ~NeJE\bdash\BAF_r\rVALYGAR.BAF~

//-------------------------------------------------------------------------
//Arkanis Gath Infinite Spawn & Spawn When Workng For Bodhi Bugs
//-------------------------------------------------------------------------

COPY_EXISTING ~Mvally.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xMVALLY.BAF~ ~NeJE\bdash\BAF_r\rMVALLY.BAF~

COPY_EXISTING ~Mvally2.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xMVALLY2.BAF~ ~NeJE\bdash\BAF_r\rMVALLY2.BAF~

COPY_EXISTING ~STDEATH.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xSTDEATH.BAF~ ~NeJE\bdash\BAF_r\rSTDEATH.BAF~

//-------------------------------------------------------------------------
//Drow Egg Guards Make Ust Natha Hostile Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~Udeggs.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xUDEGGS.BAF~ ~NeJE\bdash\BAF_r\rUDEGGS.BAF~

//-------------------------------------------------------------------------
//17-06-2005  -  incorrect drow items disintegration sequence (KD)
//-------------------------------------------------------------------------

COPY_EXISTING ~AR4500.BCS~ ~override~
              ~AR6100.BCS~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~InMyArea(Player1)~ ~~
        REPLACE_TEXTUALLY ~InMyArea(Player2)~ ~~
        REPLACE_TEXTUALLY ~InMyArea(Player3)~ ~~
        REPLACE_TEXTUALLY ~InMyArea(Player4)~ ~~
        REPLACE_TEXTUALLY ~InMyArea(Player5)~ ~~
        REPLACE_TEXTUALLY ~InMyArea(Player6)~ ~~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player1,0,0,0)[^!]* TakePartyItemAll("DWCHAN01")~ ~TakeItemReplace("DWDUST","DWCHAN01",Player1)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player2,0,0,0)[^!]* TakePartyItemAll("DWCHAN01")~ ~TakeItemReplace("DWDUST","DWCHAN01",Player2)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player3,0,0,0)[^!]* TakePartyItemAll("DWCHAN01")~ ~TakeItemReplace("DWDUST","DWCHAN01",Player3)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player4,0,0,0)[^!]* TakePartyItemAll("DWCHAN01")~ ~TakeItemReplace("DWDUST","DWCHAN01",Player4)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player5,0,0,0)[^!]* TakePartyItemAll("DWCHAN01")~ ~TakeItemReplace("DWDUST","DWCHAN01",Player5)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player6,0,0,0)[^!]* TakePartyItemAll("DWCHAN01")~ ~TakeItemReplace("DWDUST","DWCHAN01",Player6)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player1,0,0,0)[^!]* TakePartyItemAll("DWCHAN02")~ ~TakeItemReplace("DWDUST","DWCHAN02",Player1)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player2,0,0,0)[^!]* TakePartyItemAll("DWCHAN02")~ ~TakeItemReplace("DWDUST","DWCHAN02",Player2)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player3,0,0,0)[^!]* TakePartyItemAll("DWCHAN02")~ ~TakeItemReplace("DWDUST","DWCHAN02",Player3)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player4,0,0,0)[^!]* TakePartyItemAll("DWCHAN02")~ ~TakeItemReplace("DWDUST","DWCHAN02",Player4)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player5,0,0,0)[^!]* TakePartyItemAll("DWCHAN02")~ ~TakeItemReplace("DWDUST","DWCHAN02",Player5)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player6,0,0,0)[^!]* TakePartyItemAll("DWCHAN02")~ ~TakeItemReplace("DWDUST","DWCHAN02",Player6)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player1,0,0,0)[^!]* TakePartyItemAll("DWSW1H01")~ ~TakeItemReplace("DWDUST","DWSW1H01",Player1)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player2,0,0,0)[^!]* TakePartyItemAll("DWSW1H01")~ ~TakeItemReplace("DWDUST","DWSW1H01",Player2)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player3,0,0,0)[^!]* TakePartyItemAll("DWSW1H01")~ ~TakeItemReplace("DWDUST","DWSW1H01",Player3)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player4,0,0,0)[^!]* TakePartyItemAll("DWSW1H01")~ ~TakeItemReplace("DWDUST","DWSW1H01",Player4)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player5,0,0,0)[^!]* TakePartyItemAll("DWSW1H01")~ ~TakeItemReplace("DWDUST","DWSW1H01",Player5)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player6,0,0,0)[^!]* TakePartyItemAll("DWSW1H01")~ ~TakeItemReplace("DWDUST","DWSW1H01",Player6)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player1,0,0,0)[^!]* TakePartyItemAll("DWSW1H02")~ ~TakeItemReplace("DWDUST","DWSW1H02",Player1)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player2,0,0,0)[^!]* TakePartyItemAll("DWSW1H02")~ ~TakeItemReplace("DWDUST","DWSW1H02",Player2)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player3,0,0,0)[^!]* TakePartyItemAll("DWSW1H02")~ ~TakeItemReplace("DWDUST","DWSW1H02",Player3)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player4,0,0,0)[^!]* TakePartyItemAll("DWSW1H02")~ ~TakeItemReplace("DWDUST","DWSW1H02",Player4)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player5,0,0,0)[^!]* TakePartyItemAll("DWSW1H02")~ ~TakeItemReplace("DWDUST","DWSW1H02",Player5)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player6,0,0,0)[^!]* TakePartyItemAll("DWSW1H02")~ ~TakeItemReplace("DWDUST","DWSW1H02",Player6)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player1,0,0,0)[^!]* TakePartyItemAll("DWBLUN01")~ ~TakeItemReplace("DWDUST","DWBLUN01",Player1)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player2,0,0,0)[^!]* TakePartyItemAll("DWBLUN01")~ ~TakeItemReplace("DWDUST","DWBLUN01",Player2)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player3,0,0,0)[^!]* TakePartyItemAll("DWBLUN01")~ ~TakeItemReplace("DWDUST","DWBLUN01",Player3)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player4,0,0,0)[^!]* TakePartyItemAll("DWBLUN01")~ ~TakeItemReplace("DWDUST","DWBLUN01",Player4)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player5,0,0,0)[^!]* TakePartyItemAll("DWBLUN01")~ ~TakeItemReplace("DWDUST","DWBLUN01",Player5)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player6,0,0,0)[^!]* TakePartyItemAll("DWBLUN01")~ ~TakeItemReplace("DWDUST","DWBLUN01",Player6)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player1,0,0,0)[^!]* TakePartyItemAll("DWHALB01")~ ~TakeItemReplace("DWDUST","DWHALB01",Player1)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player2,0,0,0)[^!]* TakePartyItemAll("DWHALB01")~ ~TakeItemReplace("DWDUST","DWHALB01",Player2)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player3,0,0,0)[^!]* TakePartyItemAll("DWHALB01")~ ~TakeItemReplace("DWDUST","DWHALB01",Player3)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player4,0,0,0)[^!]* TakePartyItemAll("DWHALB01")~ ~TakeItemReplace("DWDUST","DWHALB01",Player4)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player5,0,0,0)[^!]* TakePartyItemAll("DWHALB01")~ ~TakeItemReplace("DWDUST","DWHALB01",Player5)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player6,0,0,0)[^!]* TakePartyItemAll("DWHALB01")~ ~TakeItemReplace("DWDUST","DWHALB01",Player6)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player1,0,0,0)[^!]* TakePartyItemAll("DWSPER01")~ ~TakeItemReplace("DWDUST","DWSPER01",Player1)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player2,0,0,0)[^!]* TakePartyItemAll("DWSPER01")~ ~TakeItemReplace("DWDUST","DWSPER01",Player2)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player3,0,0,0)[^!]* TakePartyItemAll("DWSPER01")~ ~TakeItemReplace("DWDUST","DWSPER01",Player3)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player4,0,0,0)[^!]* TakePartyItemAll("DWSPER01")~ ~TakeItemReplace("DWDUST","DWSPER01",Player4)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player5,0,0,0)[^!]* TakePartyItemAll("DWSPER01")~ ~TakeItemReplace("DWDUST","DWSPER01",Player5)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player6,0,0,0)[^!]* TakePartyItemAll("DWSPER01")~ ~TakeItemReplace("DWDUST","DWSPER01",Player6)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player1,0,0,0)[^!]* TakePartyItemAll("DWXBOW01")~ ~TakeItemReplace("DWDUST","DWXBOW01",Player1)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player2,0,0,0)[^!]* TakePartyItemAll("DWXBOW01")~ ~TakeItemReplace("DWDUST","DWXBOW01",Player2)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player3,0,0,0)[^!]* TakePartyItemAll("DWXBOW01")~ ~TakeItemReplace("DWDUST","DWXBOW01",Player3)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player4,0,0,0)[^!]* TakePartyItemAll("DWXBOW01")~ ~TakeItemReplace("DWDUST","DWXBOW01",Player4)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player5,0,0,0)[^!]* TakePartyItemAll("DWXBOW01")~ ~TakeItemReplace("DWDUST","DWXBOW01",Player5)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player6,0,0,0)[^!]* TakePartyItemAll("DWXBOW01")~ ~TakeItemReplace("DWDUST","DWXBOW01",Player6)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player1,0,0,0)[^!]* TakePartyItemAll("DWSHLD01")~ ~TakeItemReplace("DWDUST","DWSHLD01",Player1)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player2,0,0,0)[^!]* TakePartyItemAll("DWSHLD01")~ ~TakeItemReplace("DWDUST","DWSHLD01",Player2)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player3,0,0,0)[^!]* TakePartyItemAll("DWSHLD01")~ ~TakeItemReplace("DWDUST","DWSHLD01",Player3)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player4,0,0,0)[^!]* TakePartyItemAll("DWSHLD01")~ ~TakeItemReplace("DWDUST","DWSHLD01",Player4)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player5,0,0,0)[^!]* TakePartyItemAll("DWSHLD01")~ ~TakeItemReplace("DWDUST","DWSHLD01",Player5)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player6,0,0,0)[^!]* TakePartyItemAll("DWSHLD01")~ ~TakeItemReplace("DWDUST","DWSHLD01",Player6)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player1,0,0,0)[^!]* TakePartyItemAll("DWCLCK01")~ ~TakeItemReplace("DWDUST","DWCLCK01",Player1)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player2,0,0,0)[^!]* TakePartyItemAll("DWCLCK01")~ ~TakeItemReplace("DWDUST","DWCLCK01",Player2)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player3,0,0,0)[^!]* TakePartyItemAll("DWCLCK01")~ ~TakeItemReplace("DWDUST","DWCLCK01",Player3)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player4,0,0,0)[^!]* TakePartyItemAll("DWCLCK01")~ ~TakeItemReplace("DWDUST","DWCLCK01",Player4)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player5,0,0,0)[^!]* TakePartyItemAll("DWCLCK01")~ ~TakeItemReplace("DWDUST","DWCLCK01",Player5)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player6,0,0,0)[^!]* TakePartyItemAll("DWCLCK01")~ ~TakeItemReplace("DWDUST","DWCLCK01",Player6)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player1,0,0,0)[^!]* TakePartyItemAll("DWBOLT01")~ ~TakeItemReplace("DWDUST","DWBOLT01",Player1)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player2,0,0,0)[^!]* TakePartyItemAll("DWBOLT01")~ ~TakeItemReplace("DWDUST","DWBOLT01",Player2)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player3,0,0,0)[^!]* TakePartyItemAll("DWBOLT01")~ ~TakeItemReplace("DWDUST","DWBOLT01",Player3)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player4,0,0,0)[^!]* TakePartyItemAll("DWBOLT01")~ ~TakeItemReplace("DWDUST","DWBOLT01",Player4)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player5,0,0,0)[^!]* TakePartyItemAll("DWBOLT01")~ ~TakeItemReplace("DWDUST","DWBOLT01",Player5)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player6,0,0,0)[^!]* TakePartyItemAll("DWBOLT01")~ ~TakeItemReplace("DWDUST","DWBOLT01",Player6)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player1,0,0,0)[^!]* TakePartyItemAll("DWBOLT02")~ ~TakeItemReplace("DWDUST","DWBOLT02",Player1)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player2,0,0,0)[^!]* TakePartyItemAll("DWBOLT02")~ ~TakeItemReplace("DWDUST","DWBOLT02",Player2)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player3,0,0,0)[^!]* TakePartyItemAll("DWBOLT02")~ ~TakeItemReplace("DWDUST","DWBOLT02",Player3)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player4,0,0,0)[^!]* TakePartyItemAll("DWBOLT02")~ ~TakeItemReplace("DWDUST","DWBOLT02",Player4)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player5,0,0,0)[^!]* TakePartyItemAll("DWBOLT02")~ ~TakeItemReplace("DWDUST","DWBOLT02",Player5)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player6,0,0,0)[^!]* TakePartyItemAll("DWBOLT02")~ ~TakeItemReplace("DWDUST","DWBOLT02",Player6)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player1,0,0,0)[^!]* TakePartyItemAll("DWBOLT03")~ ~TakeItemReplace("DWDUST","DWBOLT03",Player1)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player2,0,0,0)[^!]* TakePartyItemAll("DWBOLT03")~ ~TakeItemReplace("DWDUST","DWBOLT03",Player2)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player3,0,0,0)[^!]* TakePartyItemAll("DWBOLT03")~ ~TakeItemReplace("DWDUST","DWBOLT03",Player3)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player4,0,0,0)[^!]* TakePartyItemAll("DWBOLT03")~ ~TakeItemReplace("DWDUST","DWBOLT03",Player4)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player5,0,0,0)[^!]* TakePartyItemAll("DWBOLT03")~ ~TakeItemReplace("DWDUST","DWBOLT03",Player5)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player6,0,0,0)[^!]* TakePartyItemAll("DWBOLT03")~ ~TakeItemReplace("DWDUST","DWBOLT03",Player6)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player1,0,0,0)[^!]* TakePartyItemAll("DWPLAT01")~ ~TakeItemReplace("DWDUST","DWPLAT01",Player1)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player2,0,0,0)[^!]* TakePartyItemAll("DWPLAT01")~ ~TakeItemReplace("DWDUST","DWPLAT01",Player2)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player3,0,0,0)[^!]* TakePartyItemAll("DWPLAT01")~ ~TakeItemReplace("DWDUST","DWPLAT01",Player3)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player4,0,0,0)[^!]* TakePartyItemAll("DWPLAT01")~ ~TakeItemReplace("DWDUST","DWPLAT01",Player4)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player5,0,0,0)[^!]* TakePartyItemAll("DWPLAT01")~ ~TakeItemReplace("DWDUST","DWPLAT01",Player5)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player6,0,0,0)[^!]* TakePartyItemAll("DWPLAT01")~ ~TakeItemReplace("DWDUST","DWPLAT01",Player6)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player1,0,0,0)[^!]* TakePartyItemAll("MISC9W")~ ~TakeItemReplace("DWDUST","MISC9W",Player1)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player2,0,0,0)[^!]* TakePartyItemAll("MISC9W")~ ~TakeItemReplace("DWDUST","MISC9W",Player2)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player3,0,0,0)[^!]* TakePartyItemAll("MISC9W")~ ~TakeItemReplace("DWDUST","MISC9W",Player3)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player4,0,0,0)[^!]* TakePartyItemAll("MISC9W")~ ~TakeItemReplace("DWDUST","MISC9W",Player4)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player5,0,0,0)[^!]* TakePartyItemAll("MISC9W")~ ~TakeItemReplace("DWDUST","MISC9W",Player5)~
        REPLACE_TEXTUALLY ~GiveItemCreate("DWDUST",Player6,0,0,0)[^!]* TakePartyItemAll("MISC9W")~ ~TakeItemReplace("DWDUST","MISC9W",Player6)~
    END

COPY_EXISTING ~AR4000.BCS~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWCHAN01",Player1)~ ~TakeItemReplace("DWDUST","DWCHAN01",Player1) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWCHAN01",Player2)~ ~TakeItemReplace("DWDUST","DWCHAN01",Player2) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWCHAN01",Player3)~ ~TakeItemReplace("DWDUST","DWCHAN01",Player3) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWCHAN01",Player4)~ ~TakeItemReplace("DWDUST","DWCHAN01",Player4) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWCHAN01",Player5)~ ~TakeItemReplace("DWDUST","DWCHAN01",Player5) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWCHAN01",Player6)~ ~TakeItemReplace("DWDUST","DWCHAN01",Player6) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWCHAN02",Player1)~ ~TakeItemReplace("DWDUST","DWCHAN02",Player1) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWCHAN02",Player2)~ ~TakeItemReplace("DWDUST","DWCHAN02",Player2) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWCHAN02",Player3)~ ~TakeItemReplace("DWDUST","DWCHAN02",Player3) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWCHAN02",Player4)~ ~TakeItemReplace("DWDUST","DWCHAN02",Player4) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWCHAN02",Player5)~ ~TakeItemReplace("DWDUST","DWCHAN02",Player5) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWCHAN02",Player6)~ ~TakeItemReplace("DWDUST","DWCHAN02",Player6) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSW1H01",Player1)~ ~TakeItemReplace("DWDUST","DWSW1H01",Player1) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSW1H01",Player2)~ ~TakeItemReplace("DWDUST","DWSW1H01",Player2) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSW1H01",Player3)~ ~TakeItemReplace("DWDUST","DWSW1H01",Player3) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSW1H01",Player4)~ ~TakeItemReplace("DWDUST","DWSW1H01",Player4) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSW1H01",Player5)~ ~TakeItemReplace("DWDUST","DWSW1H01",Player5) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSW1H01",Player6)~ ~TakeItemReplace("DWDUST","DWSW1H01",Player6) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSW1H02",Player1)~ ~TakeItemReplace("DWDUST","DWSW1H02",Player1) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSW1H02",Player2)~ ~TakeItemReplace("DWDUST","DWSW1H02",Player2) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSW1H02",Player3)~ ~TakeItemReplace("DWDUST","DWSW1H02",Player3) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSW1H02",Player4)~ ~TakeItemReplace("DWDUST","DWSW1H02",Player4) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSW1H02",Player5)~ ~TakeItemReplace("DWDUST","DWSW1H02",Player5) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSW1H02",Player6)~ ~TakeItemReplace("DWDUST","DWSW1H02",Player6) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBLUN01",Player1)~ ~TakeItemReplace("DWDUST","DWBLUN01",Player1) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBLUN01",Player2)~ ~TakeItemReplace("DWDUST","DWBLUN01",Player2) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBLUN01",Player3)~ ~TakeItemReplace("DWDUST","DWBLUN01",Player3) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBLUN01",Player4)~ ~TakeItemReplace("DWDUST","DWBLUN01",Player4) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBLUN01",Player5)~ ~TakeItemReplace("DWDUST","DWBLUN01",Player5) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBLUN01",Player6)~ ~TakeItemReplace("DWDUST","DWBLUN01",Player6) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWHALB01",Player1)~ ~TakeItemReplace("DWDUST","DWHALB01",Player1) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWHALB01",Player2)~ ~TakeItemReplace("DWDUST","DWHALB01",Player2) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWHALB01",Player3)~ ~TakeItemReplace("DWDUST","DWHALB01",Player3) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWHALB01",Player4)~ ~TakeItemReplace("DWDUST","DWHALB01",Player4) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWHALB01",Player5)~ ~TakeItemReplace("DWDUST","DWHALB01",Player5) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWHALB01",Player6)~ ~TakeItemReplace("DWDUST","DWHALB01",Player6) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSPER01",Player1)~ ~TakeItemReplace("DWDUST","DWSPER01",Player1) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSPER01",Player2)~ ~TakeItemReplace("DWDUST","DWSPER01",Player2) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSPER01",Player3)~ ~TakeItemReplace("DWDUST","DWSPER01",Player3) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSPER01",Player4)~ ~TakeItemReplace("DWDUST","DWSPER01",Player4) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSPER01",Player5)~ ~TakeItemReplace("DWDUST","DWSPER01",Player5) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSPER01",Player6)~ ~TakeItemReplace("DWDUST","DWSPER01",Player6) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWXBOW01",Player1)~ ~TakeItemReplace("DWDUST","DWXBOW01",Player1) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWXBOW01",Player2)~ ~TakeItemReplace("DWDUST","DWXBOW01",Player2) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWXBOW01",Player3)~ ~TakeItemReplace("DWDUST","DWXBOW01",Player3) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWXBOW01",Player4)~ ~TakeItemReplace("DWDUST","DWXBOW01",Player4) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWXBOW01",Player5)~ ~TakeItemReplace("DWDUST","DWXBOW01",Player5) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWXBOW01",Player6)~ ~TakeItemReplace("DWDUST","DWXBOW01",Player6) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSHLD01",Player1)~ ~TakeItemReplace("DWDUST","DWSHLD01",Player1) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSHLD01",Player2)~ ~TakeItemReplace("DWDUST","DWSHLD01",Player2) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSHLD01",Player3)~ ~TakeItemReplace("DWDUST","DWSHLD01",Player3) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSHLD01",Player4)~ ~TakeItemReplace("DWDUST","DWSHLD01",Player4) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSHLD01",Player5)~ ~TakeItemReplace("DWDUST","DWSHLD01",Player5) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWSHLD01",Player6)~ ~TakeItemReplace("DWDUST","DWSHLD01",Player6) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWCLCK01",Player1)~ ~TakeItemReplace("DWDUST","DWCLCK01",Player1) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWCLCK01",Player2)~ ~TakeItemReplace("DWDUST","DWCLCK01",Player2) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWCLCK01",Player3)~ ~TakeItemReplace("DWDUST","DWCLCK01",Player3) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWCLCK01",Player4)~ ~TakeItemReplace("DWDUST","DWCLCK01",Player4) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWCLCK01",Player5)~ ~TakeItemReplace("DWDUST","DWCLCK01",Player5) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWCLCK01",Player6)~ ~TakeItemReplace("DWDUST","DWCLCK01",Player6) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBOLT01",Player1)~ ~TakeItemReplace("DWDUST","DWBOLT01",Player1) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBOLT01",Player2)~ ~TakeItemReplace("DWDUST","DWBOLT01",Player2) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBOLT01",Player3)~ ~TakeItemReplace("DWDUST","DWBOLT01",Player3) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBOLT01",Player4)~ ~TakeItemReplace("DWDUST","DWBOLT01",Player4) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBOLT01",Player5)~ ~TakeItemReplace("DWDUST","DWBOLT01",Player5) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBOLT01",Player6)~ ~TakeItemReplace("DWDUST","DWBOLT01",Player6) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBOLT02",Player1)~ ~TakeItemReplace("DWDUST","DWBOLT02",Player1) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBOLT02",Player2)~ ~TakeItemReplace("DWDUST","DWBOLT02",Player2) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBOLT02",Player3)~ ~TakeItemReplace("DWDUST","DWBOLT02",Player3) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBOLT02",Player4)~ ~TakeItemReplace("DWDUST","DWBOLT02",Player4) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBOLT02",Player5)~ ~TakeItemReplace("DWDUST","DWBOLT02",Player5) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBOLT02",Player6)~ ~TakeItemReplace("DWDUST","DWBOLT02",Player6) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBOLT03",Player1)~ ~TakeItemReplace("DWDUST","DWBOLT03",Player1) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBOLT03",Player2)~ ~TakeItemReplace("DWDUST","DWBOLT03",Player2) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBOLT03",Player3)~ ~TakeItemReplace("DWDUST","DWBOLT03",Player3) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBOLT03",Player4)~ ~TakeItemReplace("DWDUST","DWBOLT03",Player4) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBOLT03",Player5)~ ~TakeItemReplace("DWDUST","DWBOLT03",Player5) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWBOLT03",Player6)~ ~TakeItemReplace("DWDUST","DWBOLT03",Player6) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWPLAT01",Player1)~ ~TakeItemReplace("DWDUST","DWPLAT01",Player1) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWPLAT01",Player2)~ ~TakeItemReplace("DWDUST","DWPLAT01",Player2) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWPLAT01",Player3)~ ~TakeItemReplace("DWDUST","DWPLAT01",Player3) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWPLAT01",Player4)~ ~TakeItemReplace("DWDUST","DWPLAT01",Player4) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWPLAT01",Player5)~ ~TakeItemReplace("DWDUST","DWPLAT01",Player5) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","DWPLAT01",Player6)~ ~TakeItemReplace("DWDUST","DWPLAT01",Player6) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","MISC9W",Player1)~ ~TakeItemReplace("DWDUST","MISC9W",Player1) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","MISC9W",Player2)~ ~TakeItemReplace("DWDUST","MISC9W",Player2) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","MISC9W",Player3)~ ~TakeItemReplace("DWDUST","MISC9W",Player3) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","MISC9W",Player4)~ ~TakeItemReplace("DWDUST","MISC9W",Player4) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","MISC9W",Player5)~ ~TakeItemReplace("DWDUST","MISC9W",Player5) Continue()~
        REPLACE_TEXTUALLY ~TakeItemReplace("DWDUST","MISC9W",Player6)~ ~TakeItemReplace("DWDUST","MISC9W",Player6) Continue()~
    END

//***********************************************************************************************
//   Creatures
//***********************************************************************************************

PRINT ~Patching creatures and related issues...~

//-------------------------------------------------------------------------
//North Forest Skeleton Warrior Avatar Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~AR18SKEL.CRE~ ~override~
    WRITE_SHORT 0x28 60176   //Animation changing to IC_SKELETONA
BUT_ONLY

//-------------------------------------------------------------------------
//Summoning Limit Exploit Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~BEARBLSU.CRE~ ~override~
              ~BEARGRSU.CRE~ ~override~  //KD
              ~ELEARSU.CRE~ ~override~   //KD
              ~ETTERCSU.CRE~ ~override~
              ~GHOULSU.CRE~ ~override~   //KD
              ~SUMDJINN.CRE~ ~override~
              ~SWORD02.CRE~ ~override~
              ~WORGSU.CRE~ ~override~
              ~XVARTSU.CRE~ ~override~    //KD
    WRITE_BYTE 0x0275 6                     //SUMMONED gender

//-------------------------------------------------------------------------
//Paladin Harbinger Drives Away Allies In Bodhi Battle Fix + MISC83BD.ITM
//-------------------------------------------------------------------------

COPY_EXISTING ~C6ERIC.CRE~ ~override~
              ~C6ERIC3.CRE~ ~override~
    WRITE_BYTE 0x0238 15     //strength
    WRITE_BYTE 0x023b 16     //wisdom
    WRITE_BYTE 0x023d 12     //constitution
    WRITE_BYTE 0x023e 18     //charisma
    WRITE_BYTE 0x027b 17     //LAWFULL_GOOD
    READ_LONG 0x2b8 "slots_off"
    READ_LONG 0x2bc "it_off"
    READ_LONG 0x2c0 "it_cnt"
    SET index=0
    SET exists=0
    FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
        READ_ASCII ("%it_off%"+0x14*cnt) "name"
        PATCH_IF (("%name%" STRING_COMPARE_CASE "SW2H07")=0) BEGIN
            SET index=cnt                       //find Harbinger's index in items list
        END
        PATCH_IF (("%name%" STRING_COMPARE_CASE "MISC83BD")=0) BEGIN
            exists=1                           //if already exists
        END
    END
        PATCH_IF( exists=0 ) BEGIN
        FOR( cnt=0; cnt<38; cnt=cnt+1 ) BEGIN
            READ_SHORT ("%slots_off%"+2*cnt) nnn
            PATCH_IF (nnn=index) BEGIN
                WRITE_SHORT ("%slots_off%"+2*cnt) 0xffff //remove Harbinger from any slot
            END
        END
        WRITE_SHORT ("%slots_off%"+2*3) index   //put Harbinger to Gloves slot
        WRITE_SHORT ("%slots_off%"+0x4c) 0      //if EQUIP doesn't work - select Weap Slot 1 manually here
        ADD_CRE_ITEM ~MISC83BD~ #0 #0 #0 ~NONE~ ~WEAPON1~ EQUIP
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Lady Delicia Caan Dialog Interruption Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~DELCIA.CRE~ ~override~
    WRITE_ASCII 0x260 ~None~             //drop General Script
    WRITE_BYTE (0x260+4) 0              //terminating 0
BUT_ONLY

//-------------------------------------------------------------------------
//Druid Messenger 'No Valid Replies Or Links' Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~DRUIDAD.CRE~ ~override~
    WRITE_ASCII 0x248 ~DRUIDAD~          //set new scripts
    WRITE_BYTE (0x248+7) 0              //terminating 0
    WRITE_ASCII 0x250 ~INITDLG~
    WRITE_BYTE (0x250+7) 0              //terminating 0
BUT_ONLY

//-------------------------------------------------------------------------
//Edwin's Initial Spell Slots Fixes
//-------------------------------------------------------------------------

COPY_EXISTING ~EDWIN7.CRE~ ~override~
    READ_LONG  0x02a8  "sp_offset"
    WRITE_SHORT ("%sp_offset%"+7*16+2) 5   //memorizable spells count
    WRITE_SHORT ("%sp_offset%"+7*16+4) 5
    WRITE_SHORT ("%sp_offset%"+8*16+2) 4
    WRITE_SHORT ("%sp_offset%"+8*16+4) 4
    WRITE_SHORT ("%sp_offset%"+9*16+2) 4
    WRITE_SHORT ("%sp_offset%"+9*16+4) 4
    WRITE_SHORT ("%sp_offset%"+10*16+2) 3
    WRITE_SHORT ("%sp_offset%"+10*16+4) 3
    WRITE_SHORT ("%sp_offset%"+11*16+2) 2
    WRITE_SHORT ("%sp_offset%"+11*16+4) 2
BUT_ONLY

COPY_EXISTING ~EDWIN9.CRE~ ~override~
    READ_LONG  0x02a8  "sp_offset"
    WRITE_SHORT ("%sp_offset%"+9*16+2) 4   //memorizable spells count
    WRITE_SHORT ("%sp_offset%"+9*16+4) 4
    WRITE_SHORT ("%sp_offset%"+10*16+2) 3
    WRITE_SHORT ("%sp_offset%"+10*16+4) 3
    WRITE_SHORT ("%sp_offset%"+11*16+2) 2
    WRITE_SHORT ("%sp_offset%"+11*16+4) 2
BUT_ONLY

COPY_EXISTING ~EDWIN11.CRE~ ~override~
    READ_LONG  0x02a8  "sp_offset"
    WRITE_SHORT ("%sp_offset%"+7*16+2) 5   //memorizable spells count
    WRITE_SHORT ("%sp_offset%"+7*16+4) 5
    WRITE_SHORT ("%sp_offset%"+8*16+2) 5
    WRITE_SHORT ("%sp_offset%"+8*16+4) 5
    WRITE_SHORT ("%sp_offset%"+9*16+2) 5
    WRITE_SHORT ("%sp_offset%"+9*16+4) 5
    WRITE_SHORT ("%sp_offset%"+10*16+2) 4
    WRITE_SHORT ("%sp_offset%"+10*16+4) 4
    WRITE_SHORT ("%sp_offset%"+11*16+2) 4
    WRITE_SHORT ("%sp_offset%"+11*16+4) 4
BUT_ONLY

COPY_EXISTING ~EDWIN12.CRE~ ~override~
    READ_LONG  0x02a8  "sp_offset"
    WRITE_SHORT ("%sp_offset%"+7*16+2) 5   //memorizable spells count
    WRITE_SHORT ("%sp_offset%"+7*16+4) 5
    WRITE_SHORT ("%sp_offset%"+8*16+2) 5
    WRITE_SHORT ("%sp_offset%"+8*16+4) 5
    WRITE_SHORT ("%sp_offset%"+9*16+2) 5
    WRITE_SHORT ("%sp_offset%"+9*16+4) 5
    WRITE_SHORT ("%sp_offset%"+10*16+2) 5
    WRITE_SHORT ("%sp_offset%"+10*16+4) 5
    WRITE_SHORT ("%sp_offset%"+11*16+2) 5
    WRITE_SHORT ("%sp_offset%"+11*16+4) 5
    WRITE_SHORT ("%sp_offset%"+12*16+2) 2
    WRITE_SHORT ("%sp_offset%"+12*16+4) 2
BUT_ONLY

COPY_EXISTING ~EDWIN13.CRE~ ~override~
    READ_LONG  0x02a8  "sp_offset"
    WRITE_SHORT ("%sp_offset%"+7*16+2) 6   //memorizable spells count
    WRITE_SHORT ("%sp_offset%"+7*16+4) 6
    WRITE_SHORT ("%sp_offset%"+8*16+2) 6
    WRITE_SHORT ("%sp_offset%"+8*16+4) 6
    WRITE_SHORT ("%sp_offset%"+9*16+2) 6
    WRITE_SHORT ("%sp_offset%"+9*16+4) 6
    WRITE_SHORT ("%sp_offset%"+10*16+2) 5
    WRITE_SHORT ("%sp_offset%"+10*16+4) 5
    WRITE_SHORT ("%sp_offset%"+11*16+2) 5
    WRITE_SHORT ("%sp_offset%"+11*16+4) 5
    WRITE_SHORT ("%sp_offset%"+12*16+2) 3
    WRITE_SHORT ("%sp_offset%"+12*16+4) 3
BUT_ONLY

//-------------------------------------------------------------------------
//Fairy Dragon Familiar HP\Resistances Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~FAMFAI25.CRE~ ~override~
    WRITE_SHORT 0x24 48     //HP
    WRITE_SHORT 0x26 48
    WRITE_BYTE 0x59 100    //Res Fire
    WRITE_BYTE 0x5b 125    //Res Elect
    WRITE_BYTE 0x5e 100    //Res Magic Fire
BUT_ONLY

//-------------------------------------------------------------------------
//Pseudo-Dragon Familiar Magic Resistance Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~FAMPSD.CRE~ ~override~
    WRITE_BYTE 0x5d 50     //Res Magic
BUT_ONLY

//-------------------------------------------------------------------------
//Quasit Familiar Blur Ability & Melee Attack Fixes
//-------------------------------------------------------------------------

COPY_EXISTING ~FAMQUAS.CRE~ ~override~
    READ_LONG   0x02a0  "known_sp_offset"
    READ_LONG   0x02a8  "sp_offset"
    WRITE_BYTE 0x273 1     //MAGE class
    WRITE_SHORT ("%known_sp_offset%"+8) 1  //Blur is a 1st level spell
    WRITE_SHORT ("%sp_offset%"+8*16+2) 2   //memorizable spells count
    WRITE_SHORT ("%sp_offset%"+8*16+4) 2
    WRITE_SHORT ("%sp_offset%"+8*16+0x0c) 2
    WRITE_SHORT ("%sp_offset%"+9*16+2) 0
    WRITE_SHORT ("%sp_offset%"+9*16+4) 0
    WRITE_SHORT ("%sp_offset%"+9*16+8) 2
    WRITE_SHORT ("%sp_offset%"+9*16+0x0c) 0
BUT_ONLY

COPY_EXISTING ~IMPQUA.ITM~ ~override~
    READ_LONG 0x64 "ability_offset"
    READ_SHORT 0x68 "ability_cnt"
    FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
        READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
        PATCH_IF ("%type%"=1) BEGIN      //Melee
            WRITE_SHORT ("%ability_offset%"+0x38*cnt+0x1e)  0  //removing wrong poison effect
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Imnesvale Chicken Pickpocket Exploit Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~GEMCH02.CRE~ ~override~
    READ_LONG 0x2b8 "slots_off"
    READ_LONG 0x2bc "it_off"
    READ_LONG 0x2c0 "it_cnt"
    SET index=0
    FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
        READ_ASCII ("%it_off%"+0x14*cnt) "name"
        PATCH_IF (("%name%" STRING_COMPARE_CASE "MISC6Z")=0) BEGIN
            SET index=cnt                            //find Beljuril's index in items list
        END
    END
    FOR( cnt=0; cnt<38; cnt=cnt+1 ) BEGIN
        READ_SHORT ("%slots_off%"+2*cnt) nnn
        PATCH_IF (nnn=index) BEGIN
            WRITE_SHORT ("%slots_off%"+2*cnt) 0xffff //remove Beljuril from any slot
        END
    END
    WRITE_SHORT ("%slots_off%"+2*3) index        //put Beljuril to Gloves slot to avoid pickpocketing
BUT_ONLY

//-------------------------------------------------------------------------
//Watcher's Keep Temple Level 'Stolen' Halberd Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~GORSTA09.CRE~ ~override~
    READ_LONG 0x02bc "items_offset"
    READ_LONG 0x02c0 "items_cnt"
    SET "cnt" = 0
    WHILE( "%cnt%" < "%items_cnt%" ) BEGIN     //remove Stolen flags from items
        READ_LONG ("%items_offset%"+"%cnt%"*20+0x10) "flags"
        WRITE_LONG ("%items_offset%"+"%cnt%"*20+0x10) ("%flags%" BAND 0xfffb)
        SET "%cnt%" = "%cnt%"+1
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Haer'Dalis Pickpocketing & Spells Fixes
//-------------------------------------------------------------------------

COPY_EXISTING ~HAER10.CRE~ ~override~
    WRITE_BYTE 0x59  0    //Res Fire
    WRITE_BYTE 0x5a  0    //Res Cold
    WRITE_BYTE 0x5b  0    //Res Electr
    WRITE_BYTE 0x5e  0    //Res Magic Fire
    WRITE_BYTE 0x5f  0    //Res Magic Cold
    WRITE_BYTE 0x60  0    //Res Slashing
    WRITE_BYTE 0x61  0    //Res Crushing
    WRITE_BYTE 0x62  0    //Res Piercing
    WRITE_BYTE 0x63  0    //Res Missile
    WRITE_BYTE 0x6a  25   //Pickpocketing
BUT_ONLY

COPY_EXISTING ~HAER11.CRE~ ~override~
    WRITE_BYTE 0x59  0    //Res Fire
    WRITE_BYTE 0x5a  0    //Res Cold
    WRITE_BYTE 0x5b  0    //Res Electr
    WRITE_BYTE 0x5e  0    //Res Magic Fire
    WRITE_BYTE 0x5f  0    //Res Magic Cold
    WRITE_BYTE 0x60  0    //Res Slashing
    WRITE_BYTE 0x61  0    //Res Crushing
    WRITE_BYTE 0x62  0    //Res Piercing
    WRITE_BYTE 0x63  0    //Res Missile
    WRITE_BYTE 0x6a  30   //Pickpocketing
BUT_ONLY

COPY_EXISTING ~HAER13.CRE~ ~override~
    WRITE_BYTE 0x59  0    //Res Fire
    WRITE_BYTE 0x5a  0    //Res Cold
    WRITE_BYTE 0x5b  0    //Res Electr
    WRITE_BYTE 0x5e  0    //Res Magic Fire
    WRITE_BYTE 0x5f  0    //Res Magic Cold
    WRITE_BYTE 0x60  0    //Res Slashing
    WRITE_BYTE 0x61  0    //Res Crushing
    WRITE_BYTE 0x62  0    //Res Piercing
    WRITE_BYTE 0x63  0    //Res Missile
    WRITE_BYTE 0x6a  40   //Pickpocketing
BUT_ONLY

COPY_EXISTING ~HAER15.CRE~ ~override~
    WRITE_BYTE 0x59  0    //Res Fire
    WRITE_BYTE 0x5a  0    //Res Cold
    WRITE_BYTE 0x5b  0    //Res Electr
    WRITE_BYTE 0x5e  0    //Res Magic Fire
    WRITE_BYTE 0x5f  0    //Res Magic Cold
    WRITE_BYTE 0x60  0    //Res Slashing
    WRITE_BYTE 0x61  0    //Res Crushing
    WRITE_BYTE 0x62  0    //Res Piercing
    WRITE_BYTE 0x63  0    //Res Missile
    WRITE_BYTE 0x6a  50   //Pickpocketing
    READ_LONG 0x2a4 "n_spells"
    PATCH_IF ("%n_spells%"=0) BEGIN
        READ_LONG 0x02a8 "sp_offset"
        WRITE_SHORT ("%sp_offset%"+7*16+2) 3   //memorizable spells count
        WRITE_SHORT ("%sp_offset%"+7*16+4) 3
        WRITE_SHORT ("%sp_offset%"+8*16+2) 3
        WRITE_SHORT ("%sp_offset%"+8*16+4) 3
        WRITE_SHORT ("%sp_offset%"+9*16+2) 3
        WRITE_SHORT ("%sp_offset%"+9*16+4) 3
        WRITE_SHORT ("%sp_offset%"+10*16+2) 3
        WRITE_SHORT ("%sp_offset%"+10*16+4) 3
        WRITE_SHORT ("%sp_offset%"+11*16+2) 2
        WRITE_SHORT ("%sp_offset%"+11*16+4) 2
        ADD_KNOWN_SPELL ~SPWI106~ #0 ~wizard~
        ADD_KNOWN_SPELL ~SPWI112~ #0 ~wizard~
        ADD_KNOWN_SPELL ~SPWI113~ #0 ~wizard~
        ADD_KNOWN_SPELL ~SPWI116~ #0 ~wizard~
        ADD_KNOWN_SPELL ~SPWI201~ #1 ~wizard~
        ADD_KNOWN_SPELL ~SPWI206~ #1 ~wizard~
        ADD_KNOWN_SPELL ~SPWI209~ #1 ~wizard~
        ADD_KNOWN_SPELL ~SPWI212~ #1 ~wizard~
        ADD_KNOWN_SPELL ~SPWI303~ #2 ~wizard~
        ADD_KNOWN_SPELL ~SPWI305~ #2 ~wizard~
        ADD_KNOWN_SPELL ~SPWI312~ #2 ~wizard~
        ADD_KNOWN_SPELL ~SPWI401~ #3 ~wizard~
        ADD_KNOWN_SPELL ~SPWI406~ #3 ~wizard~
        ADD_KNOWN_SPELL ~SPWI408~ #3 ~wizard~
        ADD_KNOWN_SPELL ~SPWI508~ #4 ~wizard~
        ADD_KNOWN_SPELL ~SPWI514~ #4 ~wizard~
        ADD_KNOWN_SPELL ~SPWI510~ #4 ~wizard~ //but he still need to reselect spells & rest to memorize everything
    END
    READ_LONG 0x2c4 "eff_offset"
    READ_LONG 0x2c8 "eff_num"
    FOR( cnt=0; cnt<"%eff_num%"; cnt=cnt+1 ) BEGIN
        READ_LONG ("%eff_offset%"+cnt*0x108+0x18) "prof"
        PATCH_IF ("%prof%"=90 ) BEGIN           //LONGSWORD proficiency
            WRITE_LONG ("%eff_offset%"+cnt*0x108+0x14) 1
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Enslaved Genie Pickpocket Exploit & Journal Entry Fixes + rHELLGEN.D
//-------------------------------------------------------------------------

COPY_EXISTING ~HELLGEN.CRE~ ~override~
    READ_LONG 0x2b8 "slots_off"
    READ_LONG 0x2bc "it_off"
    READ_LONG 0x2c0 "it_cnt"
    SET index=0
    FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
        READ_ASCII ("%it_off%"+0x14*cnt) "name"
        PATCH_IF (("%name%" STRING_COMPARE_CASE "MISCB7")=0) BEGIN
            SET index=cnt                             //find Tears of Bhaal's index in items list
        END
    END
    FOR( cnt=0; cnt<38; cnt=cnt+1 ) BEGIN
        READ_SHORT ("%slots_off%"+2*cnt) nnn
        PATCH_IF (nnn=index) BEGIN
            WRITE_SHORT ("%slots_off%"+2*cnt) 0xffff //remove Tears of Bhaal from any slot
        END
    END
    WRITE_SHORT ("%slots_off%"+2*3) index        //put Tears of Bhaal to Gloves slot to avoid pickpocketing
BUT_ONLY

//-------------------------------------------------------------------------
//Kangaxx Ring of Gaxx Pickpocket Exploit Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~HLKANG.CRE~ ~override~
    READ_LONG 0x2b8 "slots_off"
    READ_LONG 0x2bc "it_off"
    READ_LONG 0x2c0 "it_cnt"
    SET index=0
    FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
        READ_ASCII ("%it_off%"+0x14*cnt) "name"
        PATCH_IF (("%name%" STRING_COMPARE_CASE "RING39")=0) BEGIN
            SET index=cnt                       //find Ring of Gaxx's index in items list
        END
    END
    FOR( cnt=0; cnt<38; cnt=cnt+1 ) BEGIN
        READ_SHORT ("%slots_off%"+2*cnt) nnn
        PATCH_IF (nnn=index) BEGIN
            WRITE_SHORT ("%slots_off%"+2*cnt) 0xffff //remove Ring of Gaxx from any slot
        END
    END
    WRITE_SHORT ("%slots_off%"+2*3) index        //put Ring of Gaxx to Gloves slot to avoid pickpocketing
BUT_ONLY

//-------------------------------------------------------------------------
//Imoen's Thieving Skills Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~IMOEN10.CRE~ ~override~
              ~IMOEN15.CRE~ ~override~
              ~IMOEN211.CRE~ ~override~
              ~IMOEN213.CRE~ ~override~
    READ_BYTE 0x273 "class"
    READ_LONG 0x244 "kit"
    READ_BYTE 0x234 "level1"
    PATCH_IF( ("%class%"=13) AND ("%kit%"=0) ) BEGIN
        WRITE_BYTE 0x67 75   //Open Locks
        WRITE_BYTE 0x69 85   //Find\Disarm
        WRITE_BYTE 0x6a 10   //Pickpocket
    END
    PATCH_IF( "%level1%"=8 ) BEGIN
        WRITE_BYTE 0x52 17   //THAC0
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Mazzy Level 9 & 12 Weapon Proficiencies Fixes
//-------------------------------------------------------------------------

COPY_EXISTING ~MAZZY9.CRE~ ~override~
    READ_LONG 0x2c4 "eff_offset"
    READ_LONG 0x2c8 "eff_num"
    FOR( cnt=0; cnt<"%eff_num%"; cnt=cnt+1 ) BEGIN
        READ_LONG ("%eff_offset%"+cnt*0x108+0x18) "prof"
        PATCH_IF ("%prof%"=91 ) BEGIN           //SHORTSWORD proficiency
            WRITE_LONG ("%eff_offset%"+cnt*0x108+0x14) 2
        END
    END
BUT_ONLY

COPY_EXISTING ~MAZZY12.CRE~ ~override~
    READ_LONG 0x2c4 "eff_offset"
    READ_LONG 0x2c8 "eff_num"
    FOR( cnt=0; cnt<"%eff_num%"; cnt=cnt+1 ) BEGIN
        READ_LONG ("%eff_offset%"+cnt*0x108+0x18) "prof"
        PATCH_IF ("%prof%"=91 ) BEGIN           //SHORTSWORD proficiency
            WRITE_LONG ("%eff_offset%"+cnt*0x108+0x14) 3
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Minsc Missing Spells Onjoin Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~MINSC8.CRE~ ~override~
    READ_LONG 0x2a4 "n_spells"
    PATCH_IF ("%n_spells%"=1) BEGIN
        READ_LONG 0x02a8 "sp_offset"
        WRITE_SHORT ("%sp_offset%"+0*16+2) 1   //memorizable spells count
        WRITE_SHORT ("%sp_offset%"+0*16+4) 1
        ADD_KNOWN_SPELL ~SPPR111~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR101~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR103~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR104~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR113~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR105~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR110~ #0 ~priest~
    END
BUT_ONLY

COPY_EXISTING ~MINSC9.CRE~ ~override~
    READ_LONG 0x2a4 "n_spells"
    PATCH_IF ("%n_spells%"=1) BEGIN
        READ_LONG 0x02a8 "sp_offset"
        WRITE_SHORT ("%sp_offset%"+0*16+2) 2   //memorizable spells count
        WRITE_SHORT ("%sp_offset%"+0*16+4) 2
        ADD_KNOWN_SPELL ~SPPR111~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR101~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR103~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR104~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR113~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR105~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR110~ #0 ~priest~
    END
BUT_ONLY

COPY_EXISTING ~MINSC10.CRE~ ~override~
    READ_LONG 0x2a4 "n_spells"
    PATCH_IF ("%n_spells%"=1) BEGIN
        READ_LONG 0x02a8 "sp_offset"
        WRITE_SHORT ("%sp_offset%"+0*16+2) 2   //memorizable spells count
        WRITE_SHORT ("%sp_offset%"+0*16+4) 2
        WRITE_SHORT ("%sp_offset%"+1*16+2) 1   //memorizable spells count
        WRITE_SHORT ("%sp_offset%"+1*16+4) 1
        ADD_KNOWN_SPELL ~SPPR111~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR101~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR103~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR104~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR113~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR105~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR110~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR202~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR204~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR205~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR206~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR207~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR209~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR210~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR212~ #1 ~priest~
    END
BUT_ONLY

COPY_EXISTING ~MINSC12.CRE~ ~override~
    READ_LONG 0x2a4 "n_spells"
    PATCH_IF ("%n_spells%"=1) BEGIN
        READ_LONG 0x02a8 "sp_offset"
        WRITE_SHORT ("%sp_offset%"+0*16+2) 2   //memorizable spells count
        WRITE_SHORT ("%sp_offset%"+0*16+4) 2
        WRITE_SHORT ("%sp_offset%"+1*16+2) 2   //memorizable spells count
        WRITE_SHORT ("%sp_offset%"+1*16+4) 2
        WRITE_SHORT ("%sp_offset%"+2*16+2) 1   //memorizable spells count
        WRITE_SHORT ("%sp_offset%"+2*16+4) 1
        ADD_KNOWN_SPELL ~SPPR111~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR101~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR103~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR104~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR113~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR105~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR110~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR202~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR204~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR205~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR206~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR207~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR209~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR210~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR212~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR302~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR317~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR315~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR303~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR305~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR309~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR310~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR306~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR311~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR312~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR319~ #2 ~priest~
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Planetar Summon Fixes
//-------------------------------------------------------------------------

COPY_EXISTING ~PLANEVIL.CRE~ ~override~
    WRITE_BYTE 0x273  3    //CLERIC class
    READ_LONG  0x2a0  "known_sp_off"
    READ_LONG  0x2a4  "known_sp_cnt"
    READ_LONG  0x2b0  "mem_sp_off"
    READ_LONG  0x2b4  "mem_sp_cnt"
    FOR( cnt=0; cnt<"%known_sp_cnt%"; cnt=cnt+1 ) BEGIN      //known spells
        READ_ASCII ("%known_sp_off%"+0x0c*cnt) "name"
        PATCH_IF (("%name%" STRING_COMPARE_CASE "SPPR307")=0) BEGIN
            WRITE_ASCII ("%known_sp_off%"+0x0c*cnt) "SPPR303"     //Remove Curse -> Dispell Magic
        END
        PATCH_IF (("%name%" STRING_COMPARE_CASE "SPPR710")=0) BEGIN
            WRITE_ASCII ("%known_sp_off%"+0x0c*cnt) "SPPR715"     //Holy Word -> Unholy Word
        END
    END
    FOR( cnt=0; cnt<"%mem_sp_cnt%"; cnt=cnt+1 ) BEGIN       //memorized spells
        READ_ASCII ("%mem_sp_off%"+0x0c*cnt) "name"
        PATCH_IF (("%name%" STRING_COMPARE_CASE "SPPR307")=0) BEGIN
            WRITE_ASCII ("%mem_sp_off%"+0x0c*cnt) "SPPR303"     //Remove Curse -> Dispell Magic
        END
        PATCH_IF (("%name%" STRING_COMPARE_CASE "SPPR710")=0) BEGIN
            WRITE_ASCII ("%mem_sp_off%"+0x0c*cnt) "SPPR715"     //Holy Word -> Unholy Word
        END
        PATCH_IF (("%name%" STRING_COMPARE_CASE "SPWI405")=0) BEGIN
            WRITE_SHORT ("%mem_sp_off%"+0x0c*cnt+8)  1  //Improved Invis Cast flag correction to Memorized
        END
    END
BUT_ONLY

COPY_EXISTING ~PLANGOOD.CRE~ ~override~
    WRITE_BYTE 0x271  5    //GIANTHUMANOID class
    WRITE_BYTE 0x273  3    //CLERIC class
    READ_LONG  0x2c4 "eff_off"
    READ_LONG  0x2c8 "eff_cnt"
    FOR( cnt=0; cnt<"%eff_cnt%"; cnt=cnt+1 ) BEGIN
        READ_LONG ("%eff_off%"+0x108*cnt+8) "type"
        PATCH_IF ("%type%"=98) BEGIN
            WRITE_LONG ("%eff_off%"+0x108*cnt+0x14) 4     //Regeneration value
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Spellhold Irenicus Fixes
//-------------------------------------------------------------------------

COPY_EXISTING ~PPIRENI1.CRE~ ~override~
              ~PPIRENI2.CRE~ ~override~
    WRITE_BYTE 0x272  2     //ELF race
    WRITE_BYTE 0x27b  35    //NEUTRAL_EVIL
    READ_LONG 0x2bc "it_off"
    READ_LONG 0x2c0 "it_cnt"
    FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
        READ_ASCII ("%it_off%"+0x14*cnt) "name"
        PATCH_IF (("%name%" STRING_COMPARE_CASE "JONHP1")=0) BEGIN //replace one ring with another with better spell protection
            WRITE_ASCII ("%it_off%"+0x14*cnt) "MINHP1"
            WRITE_BYTE ("%it_off%"+0x14*cnt+6) 0
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Arbane's Short Sword Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~RESUNA.CRE~ ~override~
    READ_LONG 0x2bc "it_off"
    READ_LONG 0x2c0 "it_cnt"
    SET index=0
    FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
        READ_ASCII ("%it_off%"+0x14*cnt) "name"
        PATCH_IF (("%name%" STRING_COMPARE_CASE "SW1H27")=0) BEGIN //find Arbane's Sword and add 1 charge to it
            WRITE_SHORT ("%it_off%"+0x14*cnt+0xc) 1
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Botomless Bag of Holding
//-------------------------------------------------------------------------

/*
COPY_EXISTING_REGEXP GLOB ~^.+\.sto$~ ~override~
    READ_LONG 0x08 "itemtype" ELSE 0
    PATCH_IF ("%itemtype%" = 5) BEGIN
        WRITE_SHORT 0x22 999
    END
BUT_ONLY
*/

//-------------------------------------------------------------------------
//Stackable items
//-------------------------------------------------------------------------

//Potions
COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
    READ_SHORT  0x1C "type" ELSE 0
    PATCH_IF ("%type%" = 9) BEGIN
        WRITE_SHORT 0x38 999
    END
BUT_ONLY

//Scrolls
COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
    READ_SHORT  0x1C "type" ELSE 0
    PATCH_IF ("%type%" = 11) BEGIN
        WRITE_SHORT 0x38 999
    END
BUT_ONLY

//Ammo (arrows, bullets, daggers, bolts, darts and axes)
COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
    READ_SHORT  0x1C "type" ELSE 0
    READ_SHORT  0x38 "max"  ELSE 0
    PATCH_IF (
        ("%max%" > 1) AND
        (
            ("%type%" =  5) OR
            ("%type%" = 14) OR
            ("%type%" = 16) OR
            ("%type%" = 31) OR
            ("%type%" = 24) OR
            ("%type%" = 25)
        )
    ) BEGIN
        WRITE_SHORT 0x38 999
    END
BUT_ONLY

//Amulets, rings, coins and gems
COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
    PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN
        READ_SHORT 0x1c "type"     ELSE 0
        READ_SHORT 0x68 "max_abil" ELSE 0
        READ_SHORT 0x70 "max_fx"   ELSE 0
        PATCH_IF (
            ("%max_abil%" = 0) AND
            ("%max_fx%" = 0) AND
            (
                ("%type%" =  1) OR
                ("%type%" = 10) OR
                ("%type%" = 33) OR
                ("%type%" = 34)
            )
        ) BEGIN
        WRITE_SHORT 0x38 999
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Errard Alignment Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~SARMAG01.CRE~ ~override~
    WRITE_BYTE 0x27b  17 //LAWFUL_GOOD
BUT_ONLY

//-------------------------------------------------------------------------
//Suldanessellar Irenicus Fixes
//-------------------------------------------------------------------------

COPY_EXISTING ~SUJON.CRE~ ~override~
              ~SUJON2.CRE~ ~override~
    WRITE_BYTE 0x272  2     //ELF race
    WRITE_BYTE 0x27b  35    //NEUTRAL_EVIL
BUT_ONLY

//-------------------------------------------------------------------------
//Ihtafeer Pickpocket Exploit Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~TRRAK01.CRE~ ~override~
    READ_LONG 0x2b8 "slots_off"
    READ_LONG 0x2bc "it_off"
    READ_LONG 0x2c0 "it_cnt"
    SET index=0
    FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
        READ_ASCII ("%it_off%"+0x14*cnt) "name"
        PATCH_IF (("%name%" STRING_COMPARE_CASE "MISC8K")=0) BEGIN
            SET index=cnt                       //find Head's index in items list
        END
    END
    FOR( cnt=0; cnt<38; cnt=cnt+1 ) BEGIN
        READ_SHORT ("%slots_off%"+2*cnt) nnn
        PATCH_IF (nnn=index) BEGIN
            WRITE_SHORT ("%slots_off%"+2*cnt) 0xffff //remove Head from any slot
        END
    END
    WRITE_SHORT ("%slots_off%"+2*3) index   //put Head to Gloves slot to avoid pickpocketing
BUT_ONLY

//-------------------------------------------------------------------------
//Kuo-Toan Prince Pickpocket Exploit Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~UDPRINCE.CRE~ ~override~
    READ_LONG 0x2b8 "slots_off"
    READ_LONG 0x2bc "it_off"
    READ_LONG 0x2c0 "it_cnt"
    SET index=0
    FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
        READ_ASCII ("%it_off%"+0x14*cnt) "name"
        PATCH_IF (("%name%" STRING_COMPARE_CASE "MISCA7")=0) BEGIN
            SET index=cnt                       //find Blood's index in items list
        END
    END
    FOR( cnt=0; cnt<38; cnt=cnt+1 ) BEGIN
        READ_SHORT ("%slots_off%"+2*cnt) nnn
        PATCH_IF (nnn=index) BEGIN
            WRITE_SHORT ("%slots_off%"+2*cnt) 0xffff //remove Blood from any slot
        END
    END
    WRITE_SHORT ("%slots_off%"+2*18) index   //put Blood to Quick1 slot to avoid pickpocketing
BUT_ONLY

//-------------------------------------------------------------------------
//Viconia Weapon Proficiencies Fix
//-------------------------------------------------------------------------

//proficiency effects added so can't do anything beside direct copy
//until WeiDU will be capable to add effects as well - cre_copy


//-------------------------------------------------------------------------
//Aerie\Quayle Dialog Loop Fix - AERIEJ.D
//Aran Linvail Chapter 7 Return To Spellhold & Reputation Check Fix - ARAN.D
//Aerie\Anomen Dialog Loop Fix - BAERIE.D
//Yakman 'No Valid Replies Or Links' Fix - GORMAD1.D
//Brother Odren 'No Valid Replies Or Links' & Experience\Reputation Exploit Fixes - GORODR1.D
//Haer'dalis Rescue From Mekrath Fix - HAERDA.D
//Tears Of Bhaal Selfish Test Bypass Exploit Fix - HELLSLF.D

//-------------------------------------------------------------------------
//Fix to Nalia's dialogue after releasing her from the prison (Vlad) - nNalia.D
//+
//Also fixing the rare issue when the group brings Lavok out of the sphere and
//simulateneously Nalia's script creates Isaea and his guards for her abduction
//-------------------------------------------------------------------------

COPY_EXISTING ~NALIA.bcs~ ~override/NALIA.bcs~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY
        ~GlobalTimerExpired("IsaeaArrestTimer","GLOBAL")~
        ~GlobalTimerExpired("IsaeaArrestTimer","GLOBAL")
        !See("lavok02")~
    END

//-------------------------------------------------------------------------
//Ellie The Festhall Cook XP Exploit- RPICOR5.D
//Countess Santele Betrayal Anomen Reaction Fix - SARCNT1.D
//Ust Natha Trapping Player & Beholder Quest Fixes - UDPHAE1.D
//Solaufein Phaere Rescue Fix - UDSOLA1.D
//Valygar Ranger Ally Unprovoked Attack- VALRAN1.D
//Mazzy party leaving dialog typo - MAZZYP.D

COPY_EXISTING ~AERIE.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~StartDialogueNoSet()~ ~StartDialogueNoSet([PC])~
    END
BUT_ONLY

COPY_EXISTING ~AERIEJ.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~OUTSIDE~ ~OUTDOOR~
    END
BUT_ONLY

COPY_EXISTING ~AMMAN02.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~ApplySpell("runrun",Myself)~ ~ApplySpellRES("runrun",Myself)~
    END
BUT_ONLY

COPY_EXISTING ~BAERIE.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~MoveGlobal("AR0607","Aerie",\[1034.1034\],0)~ ~MoveGlobal("AR0607","Aerie",[1034.1034])~
    END
BUT_ONLY

COPY_EXISTING ~BANOMEN.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~OUTSIDE~ ~OUTDOOR~
        REPLACE_TEXTUALLY ~ReactionGT(Player1,NEUTRAL_UPPER))~ ~ReactionGT(Player1,NEUTRAL_UPPER)~
    END
BUT_ONLY

COPY_EXISTING ~BDACT05.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~MoveToPoint(1384.420\])~ ~MoveToPoint([1384.420])~
    END
BUT_ONLY

COPY_EXISTING ~BDACT06.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~StartCutScene("Cut31L)~ ~StartCutScene("Cut31L")~
    END
BUT_ONLY

COPY_EXISTING ~BHGAAL01.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~SetGlobal("UnseeingEye,"GLOBAL",1)~ ~SetGlobal("UnseeingEye","GLOBAL",1)~
    END
BUT_ONLY

COPY_EXISTING ~BOUNHA.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~"GLOBAL,~ ~"GLOBAL",~
    END
BUT_ONLY

COPY_EXISTING ~BREG01.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~CheckStatGT(LastTalkedToBy,CHR,14)~ ~CheckStatGT(LastTalkedToBy,14,CHR)~
        REPLACE_TEXTUALLY ~CheckStatLT(LastTalkedToBy,CHR,15)~ ~CheckStatLT(LastTalkedToBy,15,CHR)~
    END
BUT_ONLY

COPY_EXISTING ~BURCH2.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~"InteractEdwin,~ ~"InteractEdwin",~
    END
BUT_ONLY

COPY_EXISTING ~COR.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~"AnomenDecide,~ ~"AnomenDecide",~
    END
BUT_ONLY

COPY_EXISTING ~DADROW16.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~"UmberSold,~ ~"UmberSold",~
    END
BUT_ONLY

COPY_EXISTING ~DADROW17.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~SetGlobal("GhaunTimer","GLOBAL",ONE_DAY)~ ~SetGlobalTimer("GhaunTimer","GLOBAL",ONE_DAY)~
    END
BUT_ONLY

COPY_EXISTING ~DMARK1.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~True(0)~ ~True()~
    END
BUT_ONLY

COPY_EXISTING ~DREAM4.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~StartDialogueNoSet(Player1))~ ~StartDialogueNoSet(Player1)~
    END
BUT_ONLY

COPY_EXISTING ~DRSHSP01.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~SPENTAXI~ ~SPENTANG~
        REPLACE_TEXTUALLY ~"DruidQuest2,~ ~"DruidQuest2",~
    END
BUT_ONLY

COPY_EXISTING ~FAMIL125.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~CLERIC_CURE_MODERATE_WOUNDS~ ~CLERIC_CURE_MEDIUM_WOUNDS~
    END
BUT_ONLY

COPY_EXISTING ~FAMIL225.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~CLERIC_CURE_MODERATE_WOUNDS~ ~CLERIC_CURE_MEDIUM_WOUNDS~
    END
BUT_ONLY

COPY_EXISTING ~FAMIL325.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~CLERIC_CURE_MODERATE_WOUNDS~ ~CLERIC_CURE_MEDIUM_WOUNDS~
    END
BUT_ONLY

COPY_EXISTING ~FFACTOR1.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~"HaerDalis)~ ~"HaerDalis")~
    END
BUT_ONLY

COPY_EXISTING ~FFBIFF01.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~\[Player1\]~ ~Player1~
    END
BUT_ONLY

COPY_EXISTING ~FIRBAN02.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~"GLOBAL'~ ~"GLOBAL"~
    END
BUT_ONLY

COPY_EXISTING ~FIRTRL01.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~Dead(firorc01)~ ~Dead("firorc01")~
    END
BUT_ONLY

COPY_EXISTING ~FSSPIR3.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~ApplyDamage(Myself,25.ACID))~ ~ApplyDamage(Myself,25,ACID)~
    END
BUT_ONLY

COPY_EXISTING ~FUMIN.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~!Gabber(~ ~!IsGabber(~
    END
BUT_ONLY

COPY_EXISTING ~GORF1.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~"GLOBAL",6")~ ~"GLOBAL",6)~
    END
BUT_ONLY

COPY_EXISTING ~HAMEK.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~Set("Mekrath"~ ~SetGlobal("Mekrath"~
    END
BUT_ONLY

COPY_EXISTING ~HELLSARE.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~"GLOBAL,~ ~"GLOBAL",~
    END
BUT_ONLY

COPY_EXISTING ~HGNYA01.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~SPIMPPT~ ~SPIMPFR~
    END
BUT_ONLY

COPY_EXISTING ~IDRYAD1.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~GLBOAL~ ~GLOBAL~
    END
BUT_ONLY

COPY_EXISTING ~IDRYAD2.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~GLBOAL~ ~GLOBAL~
    END
BUT_ONLY

COPY_EXISTING ~IDRYAD3.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~GLBOAL~ ~GLOBAL~
    END
BUT_ONLY

COPY_EXISTING ~IMOEMJ.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~GiveItemCreate("Misc4e",Myself,1)~ ~GiveItemCreate("Misc4e",Myself,1,0,0)~
    END
BUT_ONLY

COPY_EXISTING ~JAHEIJ.DLG~ ~override~  //it's not in use actually
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~KhalidP~ ~KhaliP~
    END
BUT_ONLY

COPY_EXISTING ~KALAH2.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~ActionOverride("Aerie",StartDialogueNoSet())~ ~ActionOverride("Aerie",StartDialogueNoSet([PC]))~
    END
BUT_ONLY

COPY_EXISTING ~KELDORJ.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~THREE_DAYS")~ ~THREE_DAYS)~
    END
BUT_ONLY

COPY_EXISTING ~KPCAPT02.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~!InPartySlot(LastTalkedToBy,"Nalia")~ ~!InPartySlot("Nalia",0)~
        REPLACE_TEXTUALLY ~SetGlobal("KeepPlot","GLOBAL",11)
        ActionOverride("kpsold03",MoveToPoint(\[1549.1192\])
        ActionOverride("kpsold04",MoveToPoint(\[1480.1235\])
        ActionOverride("kpsold03",EscapeArea())~
        ~SetGlobal("KeepPlot","GLOBAL",11)
        ActionOverride("kpsold03",MoveToPoint([1549.1192]))
        ActionOverride("kpsold04",MoveToPoint([1480.1235]))~
    END
BUT_ONLY

COPY_EXISTING ~KPMAID01.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~ActionOverride("kprang01",MoveToPoint(\[1549.1192\])
        ActionOverride("kprang01",EscapeArea())
        ActionOverride("kprang02",MoveToPoint(\[1480.1235\])
        ActionOverride("kprang02",EscapeArea())~
        ~ActionOverride("kprang01",MoveToPoint([1549.1192]))
        ActionOverride("kprang01",EscapeArea())
        ActionOverride("kprang02",MoveToPoint([1480.1235]))
        ActionOverride("kprang02",EscapeArea())~
    END
BUT_ONLY

COPY_EXISTING ~KPRANG02.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~ActionOverride("kprang01",MoveToPoint(\[1549.1192\])
        ActionOverride("kprang01",EscapeArea())
        ActionOverride("kpmaid01",MoveToPoint(\[1499.1196\])
        ActionOverride("kpmaid01",EscapeArea())~
        ~ActionOverride("kprang01",MoveToPoint([1549.1192]))
        ActionOverride("kprang01",EscapeArea())
        ActionOverride("kpmaid01",MoveToPoint([1499.1196]))
        ActionOverride("kpmaid01",EscapeArea())~
    END
BUT_ONLY

COPY_EXISTING ~MARCUS.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~,HALFELF~ ~,HALF_ELF~
    END
BUT_ONLY

COPY_EXISTING ~MAZZY4.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~Enemt()~ ~Enemy()~
    END
BUT_ONLY

COPY_EXISTING ~MEKRATH.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~Set("Mekrath","GLOBAL",2)~ ~SetGlobal("Mekrath","GLOBAL",2)~
    END
BUT_ONLY

COPY_EXISTING ~MGAPPR02.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~PartyGoldGT(1999(~ ~PartyGoldGT(1999)~
    END
BUT_ONLY

COPY_EXISTING ~MGAPPR03.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~CreateItem("dagg19")
        GiveItem("dagg19",Player1)~
        ~GiveItemCreate("dagg19",Player1,0,0,0)~
    END
BUT_ONLY

COPY_EXISTING ~MINSCJ.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~OUTSIDE~ ~OUTDOOR~
    END
BUT_ONLY

COPY_EXISTING ~NOBLEM3.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~NUETRAL_LOWER~ ~NEUTRAL_LOWER~
    END
BUT_ONLY

COPY_EXISTING ~OBSHAL01.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~\[ENEMY\]~ ~ENEMY~
    END
BUT_ONLY

COPY_EXISTING ~OBSHAL03.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~\[ENEMY\]~ ~ENEMY~
    END
BUT_ONLY

COPY_EXISTING ~OBSSOL01.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~Player,MAGE_ALL~ ~Player1,MAGE_ALL~
    END
BUT_ONLY

COPY_EXISTING ~PELANNA.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~ActionOverride("arntra03",MoveToPointNoInterrupt(\[2192.1535\])
        ActionOverride("arntra03",DestroySelf())~
        ~ActionOverride("arntra03",MoveToPointNoInterrupt([2192.1535]))
        ActionOverride("arntra03",DestroySelf())~
    END
BUT_ONLY

COPY_EXISTING ~PPDESH.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~"YOSHIMO)~ ~"YOSHIMO")~
    END
BUT_ONLY

COPY_EXISTING ~PPGUY01.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~"GLOBAL,~ ~"GLOBAL",~
    END
BUT_ONLY

COPY_EXISTING ~PPIRENI1.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~Open("Door06")~ ~OpenDoor("Door06")~
    END
BUT_ONLY

COPY_EXISTING ~PPSAEM3.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~EraseJournalEntry(7075)
        EraseJournalEntry(16563)
        GiveItem(\[PC\],"misc8u")~ ~EraseJournalEntry(7075)
        EraseJournalEntry(16563)~
    END
BUT_ONLY

COPY_EXISTING ~RUFPAL2.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~SetGlobal("PitFight",AR0406",3)~ ~SetGlobal("PitFight","AR0406",3)~
    END
BUT_ONLY

COPY_EXISTING ~RUMORA.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~,GLOBAL",~ ~,"GLOBAL",~
    END
BUT_ONLY

COPY_EXISTING ~SAHIMP02.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~"SPSTRENH,~ ~"SPSTRENH",~
    END
BUT_ONLY

COPY_EXISTING ~SARBOY01.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~"Boytalk,~ ~"Boytalk",~
    END
BUT_ONLY

COPY_EXISTING ~SARBUL04.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~,GLOBAL,~ ~,"GLOBAL",~
    END
BUT_ONLY

COPY_EXISTING ~SARGRL01.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~"Girltalk,~ ~"Girltalk",~
    END
BUT_ONLY

COPY_EXISTING ~SARMEL01.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~"FALSE"~ ~FALSE~
    END
BUT_ONLY

COPY_EXISTING ~SARPRO01.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~FadeFromColor(\[20.0),0\]~ ~FadeFromColor([20.0],0)~
    END
BUT_ONLY

COPY_EXISTING ~SARVOLO.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~,GLOBAL,~ ~,"GLOBAL",~
    END
BUT_ONLY

COPY_EXISTING ~SHAPE.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~,"1)~ ~,1)~
        REPLACE_TEXTUALLY ~Polymorph(RAKHASA)~ ~Polymorph(RAKSHASA)~
    END
BUT_ONLY

COPY_EXISTING ~TRGYP03.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~Name(LastTalkedToBy,"Mazzy")~ ~Name("Mazzy",LastTalkedToBy)~
        REPLACE_TEXTUALLY ~Name(LastTalkedToBy,"Edwin")~ ~Name("Edwin",LastTalkedToBy)~
        REPLACE_TEXTUALLY ~Name(LastTalkedToBy,"Viconia")~ ~Name("Viconia",LastTalkedToBy)~
        REPLACE_TEXTUALLY ~Name(LastTalkedToBy,"Aerie")~ ~Name("Aerie",LastTalkedToBy)~
    END
BUT_ONLY

COPY_EXISTING ~TRTHF02.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~,"THIEF")~ ~,THIEF)~
    END
BUT_ONLY

COPY_EXISTING ~YOSHJ.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~OUTSIDE~ ~OUTDOOR~
    END
BUT_ONLY

COPY_EXISTING ~UDPHAE01.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~GLBOAL~ ~GLOBAL~
        REPLACE_TEXTUALLY ~EscapeArea("Tran2200")~ ~EscapeArea()~
    END
BUT_ONLY

COPY_EXISTING ~UDVITH.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~"dwVith,~ ~"dwVith",~
    END
BUT_ONLY

COPY_EXISTING ~UHINN01.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~Dead("uhinn02')~ ~Dead("uhinn02")~
    END
BUT_ONLY

COPY_EXISTING ~VALYGARJ.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~ActionOverride("Viconia",LeaveParty()
        Attack("Viconia")~
        ~ActionOverride("Viconia",LeaveParty())
        Attack("Viconia")~
    END
BUT_ONLY

//HERE

//***********************************************************************************************
//   Items
//***********************************************************************************************

PRINT ~Patching items...~

//-------------------------------------------------------------------------
//Amulet Of Power Usability Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~Amul21.itm~ ~override~
    WRITE_BYTE 0x1e 0     //unusability
    WRITE_BYTE 0x1f 0x08  //fighters(F)
    WRITE_BYTE 0x20 0x42  //FT and T
    WRITE_BYTE 0x21 0x20  //monks
    WRITE_BYTE 0x29 0x40  //unusable by barbarians
BUT_ONLY

//-------------------------------------------------------------------------
//Shadows Of Amn Fixes Imported Unchanged From Previous FixPacks
//-------------------------------------------------------------------------
//Flash Master Bruiser Mate Enchantment Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~AROW04.ITM~ ~override~
              ~BOLT07.ITM~ ~override~
    WRITE_LONG 0x60 1     //enchanted +1
BUT_ONLY

//-------------------------------------------------------------------------
//Amkethran Smuggler Duplicated Gem Bags Fix
//-------------------------------------------------------------------------
//Bag02j.itm and bag02j.STO in itm_copy

COPY_EXISTING ~AMSMUG01.STO~ ~override~
    READ_LONG  0x34 "items_offset"
    READ_LONG  0x38 "items_cnt"
    FOR( cnt=0; cnt<"%items_cnt%"; cnt=cnt+1 ) BEGIN
        READ_ASCII ("%items_offset%"+cnt*0x1c)  "name"
        PATCH_IF(("%name%" STRING_COMPARE_CASE "BAG02D")=0) BEGIN
            WRITE_ASCII ("%items_offset%"+cnt*0x1c) "BAG02I"
            WRITE_BYTE ("%items_offset%"+cnt*0x1c+6) 0
        END
    END
BUT_ONLY

COPY_EXISTING ~AMSMUG02.STO~ ~override~
    READ_LONG  0x34 "items_offset"
    READ_LONG  0x38 "items_cnt"
    FOR( cnt=0; cnt<"%items_cnt%"; cnt=cnt+1 ) BEGIN
        READ_ASCII ("%items_offset%"+cnt*0x1c)  "name"
        PATCH_IF(("%name%" STRING_COMPARE_CASE "BAG02I")=0) BEGIN
            WRITE_ASCII ("%items_offset%"+cnt*0x1c) "BAG02J"
            WRITE_BYTE ("%items_offset%"+cnt*0x1c+6) 0
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Boots Of Speed Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~BOOT01.ITM~ ~override~
    WRITE_LONG 0x1e 0    //usable by all
    READ_LONG  0x6a "eff_offset"
    READ_SHORT 0x70 "eff_cnt"
    FOR( cnt=0; cnt<"%eff_cnt%"; cnt=cnt+1 ) BEGIN
        READ_SHORT ("%eff_offset%"+0x30*cnt) "type"
        PATCH_IF( "%type%" = 16 ) BEGIN  //Haste -> Movementrate bonus
            WRITE_SHORT ("%eff_offset%"+0x30*cnt)    126
            WRITE_LONG ("%eff_offset%"+0x30*cnt+4)   200    //Value
            WRITE_LONG ("%eff_offset%"+0x30*cnt+8)   2      //set % of
            WRITE_BYTE ("%eff_offset%"+0x30*cnt+0xd) 0
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Heartseeker Bow THAC0 Bonus Exploit Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~BOW10.ITM~ ~override~
    READ_LONG 0x64 "ability_offset"
    READ_SHORT 0x68 "ability_cnt"
    READ_LONG 0x6a "eff_offset"
    SET eff_number=0
    SET eff_idx=0
    FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
        READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
        PATCH_IF ("%type%"=3) BEGIN      //Magical
            READ_SHORT ("%ability_offset%"+0x38*cnt+0x1e)  eff_number
            READ_SHORT ("%ability_offset%"+0x38*cnt+0x20)  eff_idx
        END
    END
    PATCH_IF( eff_number>0 ) BEGIN
        FOR( cnt=0; cnt<eff_number; cnt=cnt+1 ) BEGIN
            READ_SHORT ("%eff_offset%"+0x30*(cnt+eff_idx)) "eff_type"
            PATCH_IF( "%eff_type%" = 54 ) BEGIN  //THAC0 Bonus -> Missile THAC0 Bonus
                WRITE_LONG ("%eff_offset%"+0x30*(cnt+eff_idx)) 167
            END
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Gauntlets Of Ogre Power Usability Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~BRAC06.ITM~ ~override~
    READ_LONG  0x1e "unus"
    WRITE_LONG 0x1e ("%unus%" BAND 0xffffffbf)  //resetting unusable flag for bards
BUT_ONLY

//-------------------------------------------------------------------------
//Gauntlets Of Crushing Usability Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~BRAC19.ITM~ ~override~
    WRITE_LONG 0x1e 0     //usable for all
    WRITE_BYTE 0x2f 0x06  //unusable for wizardslayer & kensai
BUT_ONLY

//-------------------------------------------------------------------------
//Gauntlets Of Extraordinary Specialization Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~BRAC21.ITM~ ~override~
    READ_LONG  0x1e "unus"
    WRITE_LONG 0x1e ("%unus%" BOR 0x20000000)  //setting unusable flag for monks
    READ_BYTE  0x2b "unus2"
    WRITE_BYTE 0x2b ("%unus2%" BAND 0xf3)     //resetting unusable assasins & bounty hunters
BUT_ONLY

//-------------------------------------------------------------------------
//White Dragon Scale Armour Usability Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~CHAN20.ITM~ ~override~
    READ_LONG  0x1e "unus"
    WRITE_LONG 0x1e ("%unus%" BAND 0xfff7ffff) //resetting unusable flag for mage-thief
    WRITE_BYTE 0x29 0x30                       //setting unusable SS & Aveng
BUT_ONLY

//-------------------------------------------------------------------------
//Crimson Dart Kensai Usage Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~DART08.ITM~ ~override~
    WRITE_BYTE 0x2f 0x0c     //setting unusable cavs & kensai
BUT_ONLY

//-------------------------------------------------------------------------
//Drow Item Usability (and other) Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~DWBLUN01.ITM~ ~override~
              ~DWSPER01.ITM~ ~override~
              ~DWSW1H02.ITM~ ~override~
    WRITE_BYTE 0x2b 0x02     //setting unusable beastmaster
BUT_ONLY

COPY_EXISTING ~DWCHAN01.ITM~ ~override~
              ~DWCHAN02.ITM~ ~override~
    WRITE_BYTE 0x2b 0x03     //setting unusable beastmaster & stalker
    WRITE_BYTE 0x2d 0x80     //setting unusable archer
BUT_ONLY

COPY_EXISTING ~DWCLCK01.ITM~ ~override~
    WRITE_BYTE 0x2b 0x02     //setting unusable beastmaster
    WRITE_BYTE 0x2f 0x02     //setting unusable wizardslayer
BUT_ONLY

COPY_EXISTING ~DWHALB01.ITM~ ~override~
    WRITE_BYTE 0x2b 0x02     //setting unusable beastmaster
    READ_LONG  0x6a "eff_offset"
    READ_SHORT 0x70 "eff_cnt"
    FOR( cnt=0; cnt<"%eff_cnt%"; cnt=cnt+1 ) BEGIN
        READ_SHORT ("%eff_offset%"+0x30*cnt) "type"
        READ_LONG ("%eff_offset%"+0x30*cnt+8) "location"
        PATCH_IF( ("%type%" = 7) AND ("%location%"=16) ) BEGIN  //color effect
            WRITE_BYTE ("%eff_offset%"+0x30*cnt+12)    2   //Instant\equipp
        END
    END
BUT_ONLY

COPY_EXISTING ~DWPLAT01.ITM~ ~override~
    WRITE_BYTE 0x29 0x50     //setting unusable SS & barbar
    WRITE_BYTE 0x2b 0x03     //setting unusable beastmaster & stalker
    WRITE_BYTE 0x2d 0x80     //setting unusable archer
BUT_ONLY

COPY_EXISTING ~DWSHLD01.ITM~ ~override~
    READ_LONG  0x1e "unus"
    WRITE_LONG 0x1e ("%unus%" BOR 0x20000000)  //setting unusable flag for monks
BUT_ONLY

COPY_EXISTING ~DWXBOW01.ITM~ ~override~
    WRITE_BYTE 0x2f 0x0c     //setting unusable cavs & kensai
BUT_ONLY

//-------------------------------------------------------------------------
//Cat Familiar No Attacks Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~HASTRING.ITM~ ~override~
    READ_LONG  0x6a "eff_offset"
    READ_SHORT 0x70 "eff_cnt"
    FOR( cnt=0; cnt<"%eff_cnt%"; cnt=cnt+1 ) BEGIN
        READ_SHORT ("%eff_offset%"+0x30*cnt) "type"
        PATCH_IF( "%type%" = 1 ) BEGIN  //attacks per round
            WRITE_LONG ("%eff_offset%"+0x30*cnt+4)    1   //Value
            WRITE_LONG ("%eff_offset%"+0x30*cnt+8)    0   //Inc\Dec
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Helm Of Brilliane Magic Resistance Failure
//-------------------------------------------------------------------------

COPY_EXISTING ~HELM16.ITM~ ~override~
    READ_LONG 0x64 "ability_offset"
    READ_SHORT 0x68 "ability_cnt"
    READ_LONG 0x6a "eff_offset"
    FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
        READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
        PATCH_IF ("%type%"=3) BEGIN      //Magical
            READ_SHORT ("%ability_offset%"+0x38*cnt+0x1e)  eff_number
            READ_SHORT ("%ability_offset%"+0x38*cnt+0x20)  eff_idx
            READ_SHORT ("%eff_offset%"+0x30*eff_idx) "eff_type"
            PATCH_IF( ("%eff_type%" = 148) OR ("%eff_type%" = 146) ) BEGIN  //cast spell effect
                WRITE_BYTE ("%eff_offset%"+0x30*eff_idx+0x0d) 0   //Bypass resistance
            END
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Imp Familiar Melee Attack Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~IMP.ITM~ ~override~
    READ_LONG 0x64 "ability_offset"
    READ_SHORT 0x68 "ability_cnt"
    FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
        READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
        PATCH_IF ("%type%"=1) BEGIN      //Melee
            WRITE_SHORT ("%ability_offset%"+0x38*cnt+0x1e)  0  //removing wrong poison effect
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Grandmaster's Armour Movement Rate Effect Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~LEAT24.ITM~ ~override~
    WRITE_LONG 0x1e 0    //usable by all
    READ_LONG  0x6a "eff_offset"
    READ_SHORT 0x70 "eff_cnt"
    FOR( cnt=0; cnt<"%eff_cnt%"; cnt=cnt+1 ) BEGIN
        READ_SHORT ("%eff_offset%"+0x30*cnt) "type"
        PATCH_IF( "%type%" = 16 ) BEGIN  //Haste -> Movementrate bonus
            WRITE_SHORT ("%eff_offset%"+0x30*cnt)    126
            WRITE_LONG ("%eff_offset%"+0x30*cnt+4)   200    //Value
            WRITE_LONG ("%eff_offset%"+0x30*cnt+8)   2      //set % of
            WRITE_BYTE ("%eff_offset%"+0x30*cnt+0xd) 0
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Disappearing Daily Use Figurines Fixes
//-------------------------------------------------------------------------

COPY_EXISTING ~MISC3D.ITM~ ~override~
              ~MISC3E.ITM~ ~override~
              ~MISC3F.ITM~ ~override~
              ~MISC7T.ITM~ ~override~
    READ_LONG  0x64 "ability_offset"
    READ_SHORT 0x68 "ability_cnt"
    READ_LONG  0x6a "eff_offset"
    FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
        READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
        PATCH_IF ("%type%"=3) BEGIN      //Magical
            READ_SHORT ("%ability_offset%"+0x38*cnt+0x1e)  "eff_num"
            READ_SHORT ("%ability_offset%"+0x38*cnt+0x20)  eff_idx
            SET flag=0
            SET offset=0
            FOR( eff=0; eff<"%eff_num%"; eff=eff+1 ) BEGIN
                PATCH_IF( flag=0 ) BEGIN
                    READ_SHORT ("%eff_offset%"+0x30*(eff_idx+eff))  "eff_type"
                    PATCH_IF( "%eff_type%"=122 ) BEGIN         //removing Create inventory item effect
                        SET flag = 1
                        SET offset = ("%eff_offset%"+0x30*(eff_idx+eff))
                    END
                END
            END
            PATCH_IF (offset > 0) BEGIN
                DELETE_BYTES offset 0x30
                SET "eff_num" = "%eff_num%"-1
                SET flag=0
                SET offset=0
            END
            FOR( eff=0; eff<eff_num; eff=eff+1 ) BEGIN
                PATCH_IF( flag=0 ) BEGIN
                    READ_SHORT ("%eff_offset%"+0x30*(eff_idx+eff))  "eff_type"
                    PATCH_IF( "%eff_type%"=123 ) BEGIN         //removing Remove inventory item effect
                        SET flag = 1
                        SET offset = ("%eff_offset%"+0x30*(eff_idx+eff))
                    END
                END
            END
            PATCH_IF( offset>0 ) BEGIN
                DELETE_BYTES offset 0x30
                SET "eff_num" = "%eff_num%"-1
                SET flag=0
                SET offset=0
            END
            FOR( eff=0; eff<eff_num; eff=eff+1 ) BEGIN
                PATCH_IF( flag=0 ) BEGIN
                    READ_SHORT ("%eff_offset%"+0x30*(eff_idx+eff))  "eff_type"
                    PATCH_IF( "%eff_type%"=139 ) BEGIN         //removing Display string effect
                        SET flag = 1
                        SET offset = ("%eff_offset%"+0x30*(eff_idx+eff))
                    END
                END
            END
            PATCH_IF( offset>0 ) BEGIN
                DELETE_BYTES offset 0x30
                SET "eff_num" = "%eff_num%"-1
                SET flag=0
                SET offset=0
            END
            WRITE_SHORT ("%ability_offset%"+0x38*cnt+0x1e) "%eff_num%"
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Harp Paladin Exploit Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~MISC3M.ITM~ ~override~
              ~MISC3O.ITM~ ~override~
    READ_LONG  0x1e "unus"
    WRITE_LONG 0x1e ("%unus%" BOR 0x00100000)  //setting unusable flag for paladins
BUT_ONLY

//-------------------------------------------------------------------------
//Minor Quest Item Weapon Usability Exploit Fixes
//-------------------------------------------------------------------------

COPY_EXISTING ~MISC4Q.ITM~ ~override~
    WRITE_BYTE 0x2b 0x02     //setting unusable beastmaster
BUT_ONLY

COPY_EXISTING ~MISC4U.ITM~ ~override~
    WRITE_BYTE 0x2b 0x02     //setting unusable beastmaster
    WRITE_BYTE 0x31 96       //proficiency - dagger
BUT_ONLY

//-------------------------------------------------------------------------
//Illithid Control Circlets Preventing Party Members Rejoining Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~MISC9X.ITM~ ~override~
    READ_LONG 0x64 "ability_offset"
    READ_SHORT 0x68 "ability_cnt"
    READ_LONG 0x6a "eff_offset"
    FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
        READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
        PATCH_IF ("%type%"=3) BEGIN      //Magical
            READ_SHORT ("%ability_offset%"+0x38*cnt+0x1e)  eff_number
            READ_SHORT ("%ability_offset%"+0x38*cnt+0x20)  eff_idx
            FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
                READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx)) "eff_type"
                WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0xd) 3      //Dispell\Bypass Resistance
                PATCH_IF( "%eff_type%" = 5 ) BEGIN  //charm creature
                    WRITE_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+0xe) 1800   //change duration
                END
            END
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Brine Potion Wizard Slayer Usability Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~MISC9Y.ITM~ ~override~
    WRITE_BYTE 0x2f 0x02     //setting unusable wizardslayer
BUT_ONLY

//-------------------------------------------------------------------------
//Svirfneblin Patrol Leader's Helmet Usability Exploit Fixes
//-------------------------------------------------------------------------

COPY_EXISTING ~MISCA6.ITM~ ~override~
    WRITE_LONG 0x1e 0x204c0040     //setting unusable flags
BUT_ONLY

//-------------------------------------------------------------------------
//Neb's Nasty Cutter Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~NEBDAG.ITM~ ~override~
    READ_LONG 0x64 "ability_offset"
    READ_SHORT 0x68 "ability_cnt"
    FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
        READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
        PATCH_IF ("%type%"=1) BEGIN      //Melee
            WRITE_SHORT ("%ability_offset%"+0x38*cnt+0x1e)  0  //removing effects
            WRITE_SHORT ("%ability_offset%"+0x38*cnt+0x20)  0  //removing effects
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Mazzy Weapon Usability Exploit Fixes
//-------------------------------------------------------------------------

COPY_EXISTING ~NPBOW.ITM~ ~override~
              ~NPSW01.ITM~ ~override~
    WRITE_LONG 0x1e 0xfbbdf7c0     //setting unusable flags
    WRITE_BYTE 0x2f 0x04           //setting unusable kensai
BUT_ONLY

//-------------------------------------------------------------------------
//Hallowed Redeemer Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~Keldorn.spl~ ~override~
    WRITE_SHORT 0x1c  2   //Priest spell
BUT_ONLY

//-------------------------------------------------------------------------
//Full Plate Armours THAC0 & Movement Rate Penalties
//-------------------------------------------------------------------------

COPY_EXISTING ~PLAT19.ITM~ ~override~ //effects removed
              ~PLAT22.ITM~ ~override~ //effects removed
              ~PLAT23.ITM~ ~override~ //effects removed
    READ_LONG  0x6a "eff_offset"
    READ_SHORT 0x70 "eff_num"
    SET flag=0
    SET offset=0
    FOR( cnt=0; cnt<"%eff_num%"; cnt=cnt+1 ) BEGIN
        READ_BYTE ("%eff_offset%"+0x30*cnt) "eff_type"
        PATCH_IF( flag=0 AND "%eff_type%"=126 ) BEGIN  //removing Movementrate bonus effect
            SET flag = 1
            SET offset = ("%eff_offset%"+0x30*cnt)
        END
    END
    PATCH_IF( offset>0 ) BEGIN
        DELETE_BYTES offset 0x30
        SET "eff_num" = "%eff_num%"-1
        SET flag=0
        SET offset=0
    END
    FOR( cnt=0; cnt<"%eff_num%"; cnt=cnt+1 ) BEGIN
        READ_BYTE ("%eff_offset%"+0x30*cnt) "eff_type"
        PATCH_IF( flag=0 AND "%eff_type%"=54 ) BEGIN  //removing THAC0 bonus effect
            SET flag = 1
            SET offset = ("%eff_offset%"+0x30*cnt)
        END
    END
    PATCH_IF( offset>0 ) BEGIN
        DELETE_BYTES offset 0x30
        SET "eff_num" = "%eff_num%"-1
        SET flag=0
        SET offset=0
    END
    WRITE_SHORT 0x70 "%eff_num%"
BUT_ONLY

//-------------------------------------------------------------------------
//Potion Of Storm Giant Strength Magic Resistance Failure Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~POTN07.ITM~ ~override~
    READ_LONG 0x64 "ability_offset"
    READ_SHORT 0x68 "ability_cnt"
    READ_LONG 0x6a "eff_offset"
    FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
        READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
        PATCH_IF ("%type%"=3) BEGIN      //Magical
            READ_SHORT ("%ability_offset%"+0x38*cnt+0x1e)  eff_number
            READ_SHORT ("%ability_offset%"+0x38*cnt+0x20)  eff_idx
            FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
                READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx)) "eff_type"
                PATCH_IF( "%eff_type%" = 44 ) BEGIN  //strength bonus
                    WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+2) 1   //TargetSelf
                END
            END
        END
    END
BUT_ONLY

//-----------------------------------------------------------------------
//Regis Amulet Usability Fix
//-----------------------------------------------------------------------

COPY_EXISTING ~REGISAMU.ITM~ ~override~
    WRITE_BYTE 0x2f 0x02        //WS
BUT_ONLY


//-------------------------------------------------------------------------
//Ring Of Gaxx Portrait Icons Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~RING39.ITM~ ~override~
    READ_LONG  0x6a  "eff_offset"
    READ_SHORT 0x70  "glob_eff_cnt"
    SET found=0
    FOR( cnt=0; cnt<"%glob_eff_cnt%"; cnt=cnt+1 ) BEGIN
        WRITE_BYTE ("%eff_offset%"+0x30*cnt+0xd) 0   //Not dispel\Bypass rsistance
        READ_SHORT ("%eff_offset%"+0x30*cnt) "type"
        PATCH_IF( "%type%" = 169 ) BEGIN             //remove portrait info
            SET found=1
        END
    END
    PATCH_IF( found=0 ) BEGIN
        SET offset = ("%eff_offset%"+0x30*"%glob_eff_cnt%")
        INSERT_BYTES offset    0x30*2
        WRITE_SHORT offset           169   //Remove portrait icon
        WRITE_BYTE  offset+2         1     //TargetSelf
        WRITE_LONG   offset+8         6     //Poisoned
        WRITE_BYTE  offset+12        2     //Instant\While equipped
        WRITE_BYTE  offset+13        0     //Not Dispell\Bypass Resistance
        WRITE_BYTE  offset+18        100   //Probability 1
        WRITE_SHORT offset+0x30      169   //Remove portrait icon
        WRITE_BYTE  offset+0x30+2    1     //TargetSelf
        WRITE_LONG   offset+0x30+8    7     //Nauseated
        WRITE_BYTE  offset+0x30+12   2     //Instant\While equipped
        WRITE_BYTE  offset+0x30+13   0     //Not Dispell\Bypass Resistance
        WRITE_BYTE  offset+0x30+18   100   //Probability 1
        WRITE_SHORT 0x70  "%glob_eff_cnt%"+2
        READ_LONG   0x64 "ability_offset"
        READ_SHORT  0x68 "ability_cnt"
        FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
            READ_SHORT  ("%ability_offset%"+0x38*cnt+0x20) idx
            WRITE_SHORT ("%ability_offset%"+0x38*cnt+0x20) idx+2
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Protection Scrolls Magic Resistance Failure Fixes + Wizardslayer usability
//-------------------------------------------------------------------------

COPY_EXISTING ~SCRL07.ITM~ ~override~
    WRITE_BYTE 0x2f 0x02
COPY_EXISTING ~SCRL10.ITM~ ~override~
    WRITE_BYTE 0x2f 0x02
COPY_EXISTING ~SCRL11.ITM~ ~override~
    WRITE_BYTE 0x2f 0x02
COPY_EXISTING ~SCRL12.ITM~ ~override~
    WRITE_BYTE 0x2f 0x02
COPY_EXISTING ~SCRL13.ITM~ ~override~
    WRITE_BYTE 0x2f 0x02
COPY_EXISTING ~SCRL14.ITM~ ~override~
    WRITE_BYTE 0x2f 0x02
COPY_EXISTING ~SCRL16.ITM~ ~override~
    WRITE_BYTE 0x2f 0x02

//-------------------------------------------------------------------------
//Monk Wizard Scroll Exploit Fixes
//-------------------------------------------------------------------------

COPY_EXISTING ~SCRL3G.ITM~ ~override~
              ~SCRL5G.ITM~ ~override~
              ~SCRL8B.ITM~ ~override~
              ~SCRL8C.ITM~ ~override~
    WRITE_LONG 0x1e 0x60725e80  //usability
BUT_ONLY

//-------------------------------------------------------------------------
//Cursed Scroll Of Ailment Offensive Use Exploit Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~SCRL17.ITM~ ~override~
    WRITE_BYTE 0x2f 0x02
    READ_LONG 0x64 "ability_offset"
    READ_SHORT 0x68 "ability_cnt"
    READ_LONG 0x6a "eff_offset"
    FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
        READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
        PATCH_IF ("%type%"=3) BEGIN      //Magical
            READ_SHORT ("%ability_offset%"+0x38*cnt+0x1e)  eff_number
            READ_SHORT ("%ability_offset%"+0x38*cnt+0x20)  eff_idx
            FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
                READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
                PATCH_IF( "%eff_type%" = 13 ) BEGIN  //kill target
                    WRITE_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+2) 1   //targetself
                END
            END
        END
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Pantaloons Rewards Usage Fixes
//-------------------------------------------------------------------------

COPY_EXISTING ~SECRET01.ITM~ ~override~
              ~SECRET02.ITM~ ~override~
              ~SECRET03.ITM~ ~override~
              ~SECRET04.ITM~ ~override~
    WRITE_LONG 0x1e 0  //usability
    WRITE_BYTE 0x29 0
    WRITE_BYTE 0x2a 0
    WRITE_BYTE 0x2b 0
    WRITE_BYTE 0x2d 0
    WRITE_BYTE 0x2f 0
BUT_ONLY

//-------------------------------------------------------------------------
//Shield Of Harmony Dispellable Protections Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~SHLD25.ITM~ ~override~
    READ_LONG  0x6a "eff_offset"
    READ_SHORT 0x70 "eff_cnt"
    FOR( cnt=0; cnt<"%eff_cnt%"; cnt=cnt+1 ) BEGIN
        WRITE_BYTE ("%eff_offset%"+0x30*cnt+13) 0   //bypass resistance for all effects
    END
BUT_ONLY

//-------------------------------------------------------------------------
//Staff Of The Magi Fix
//-------------------------------------------------------------------------

COPY_EXISTING ~STAF11.ITM~ ~override~
 READ_LONG  0x6a  "eff_offset"
 READ_SHORT 0x70  "glob_eff_cnt"
 SET found=0
 FOR( cnt=0; cnt<"%glob_eff_cnt%"; cnt=cnt+1 ) BEGIN
   WRITE_BYTE ("%eff_offset%"+0x30*cnt+13) 0   //Not dispel\bypass resistance
   READ_SHORT ("%eff_offset%"+0x30*cnt) "type"
   PATCH_IF( "%type%" = 100 ) BEGIN
     SET found=1
   END
 END
 PATCH_IF( found=0 ) THEN BEGIN
   SET offset = ("%eff_offset%"+0x30*"%glob_eff_cnt%")
   INSERT_BYTES offset    0x30*2
   WRITE_SHORT offset           100   //Prot. from creature type
   WRITE_BYTE  offset+2         1     //TargetSelf
   WRITE_LONG   offset+4         9     //
   WRITE_LONG   offset+8         7     //
   WRITE_BYTE  offset+12        2     //Instant\While equipped
   WRITE_BYTE  offset+13        0     //Not Dispell\Bypass Resistance
   WRITE_BYTE  offset+18        100   //Probability 1

   WRITE_SHORT offset+0x30      219   //
   WRITE_BYTE  offset+0x30+2    1     //TargetSelf
   WRITE_LONG   offset+0x30+4    3     //
   WRITE_LONG   offset+0x30+8    8     //
   WRITE_BYTE  offset+0x30+12   2     //Instant\While equipped
   WRITE_BYTE  offset+0x30+13   0     //Not Dispell\Bypass Resistance
   WRITE_BYTE  offset+0x30+18   100   //Probability 1

   WRITE_SHORT 0x70  "%glob_eff_cnt%"+2

   READ_LONG  0x64 "ability_offset"
   READ_SHORT 0x68 "ability_cnt"
   FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
     READ_SHORT  ("%ability_offset%"+0x38*cnt+0x20) idx
     WRITE_SHORT ("%ability_offset%"+0x38*cnt+0x20) idx+2
   END
 END

 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "ability_cnt"
 FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x38)  "type"
   PATCH_IF("%type%"=3) BEGIN        //Magical
     READ_SHORT ("%ability_offset%"+cnt*0x38+0x1e)  eff_cnt
     READ_SHORT ("%ability_offset%"+cnt*0x38+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_cnt; cnt2=cnt2+1 ) BEGIN
       WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+13) 0   //Not dispel\bypass resistance
     END
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Staff Of The Woodlands Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~STAF14.ITM~ ~override~
 READ_LONG  0x6a  "eff_offset"
 READ_SHORT 0x70  "glob_eff_cnt"
 SET found=0
 FOR( cnt=0; cnt<"%glob_eff_cnt%"; cnt=cnt+1 ) BEGIN
   READ_SHORT ("%eff_offset%"+0x30*cnt) "type"
   PATCH_IF( "%type%" = 0 ) BEGIN        //Bonus to AC
     WRITE_LONG ("%eff_offset%"+0x30*cnt+8) 0x00000010 //Base AC, not all weapons
   END
   PATCH_IF( "%type%" = 33 ) BEGIN
     SET found=1
   END
 END
 PATCH_IF( found=0 ) THEN BEGIN
   SET offset = ("%eff_offset%"+0x30*"%glob_eff_cnt%")
   INSERT_BYTES offset    0x30*4
   WRITE_SHORT offset           33    //Save vs death bonus
   WRITE_BYTE  offset+2         1     //TargetSelf
   WRITE_LONG   offset+4         1     //Value
   WRITE_BYTE  offset+12        2     //Instant\While equipped
   WRITE_BYTE  offset+13        0     //Not Dispell\Bypass Resistance
   WRITE_BYTE  offset+18        100   //Probability 1

   WRITE_SHORT offset+0x30      34    //Save vs wands bonus
   WRITE_BYTE  offset+0x30+2    1     //TargetSelf
   WRITE_LONG   offset+0x30+4    1     //Value
   WRITE_BYTE  offset+0x30+12   2     //Instant\While equipped
   WRITE_BYTE  offset+0x30+13   0     //Not Dispell\Bypass Resistance
   WRITE_BYTE  offset+0x30+18   100   //Probability 1

   WRITE_SHORT offset+0x30*2      35    //Save vs polymorph bonus
   WRITE_BYTE  offset+0x30*2+2    1     //TargetSelf
   WRITE_LONG   offset+0x30*2+4    1     //Value
   WRITE_BYTE  offset+0x30*2+12   2     //Instant\While equipped
   WRITE_BYTE  offset+0x30*2+13   0     //Not Dispell\Bypass Resistance
   WRITE_BYTE  offset+0x30*2+18   100   //Probability 1

   WRITE_SHORT offset+0x30*3      36    //Save vs breath bonus
   WRITE_BYTE  offset+0x30*3+2    1     //TargetSelf
   WRITE_LONG   offset+0x30*3+4    1     //Value
   WRITE_BYTE  offset+0x30*3+12   2     //Instant\While equipped
   WRITE_BYTE  offset+0x30*3+13   0     //Not Dispell\Bypass Resistance
   WRITE_BYTE  offset+0x30*3+18   100   //Probability 1

   WRITE_SHORT 0x70  "%glob_eff_cnt%"+4

   READ_LONG  0x64 "ability_offset"
   READ_SHORT 0x68 "ability_cnt"
   FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
     READ_SHORT  ("%ability_offset%"+0x38*cnt+0x1e) num
     PATCH_IF( num>0 ) BEGIN
       READ_SHORT  ("%ability_offset%"+0x38*cnt+0x20) idx
       WRITE_SHORT ("%ability_offset%"+0x38*cnt+0x20) idx+4
     END
   END
 END

 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "ability_cnt"
 FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x38)  "type"
   PATCH_IF("%type%"=3) BEGIN        //Magical
     READ_SHORT ("%ability_offset%"+cnt*0x38+0x1e)  eff_cnt
     READ_SHORT ("%ability_offset%"+cnt*0x38+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_cnt; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx)) "type2"
       PATCH_IF( "%type2%"=142 ) BEGIN                          //Display string
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+13) 1   //Dispel\Not bypass resistance
       END
     END
   END
 END
BUT_ONLY

COPY_EXISTING ~SW1H50.ITM~ ~override~
 WRITE_BYTE 0x2b 0x02   //beastmaster
 READ_LONG 0x64 "ability_offset"
 READ_SHORT 0x68 "ability_cnt"
 READ_LONG 0x6a "eff_offset"
 FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
   PATCH_IF ("%type%"=1) BEGIN      //Melee
     WRITE_SHORT ("%ability_offset%"+0x38*cnt+0x1a) 1 //damage bonus
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Habib's 'Mighty Scimitar' Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SW1H57.ITM~ ~override~
 READ_LONG 0x64 "ability_offset"
 READ_SHORT 0x68 "ability_cnt"
 READ_LONG 0x6a "eff_offset"
 FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
   PATCH_IF ("%type%"=2) BEGIN      //Ranged
     WRITE_SHORT ("%ability_offset%"+0x38*cnt+0x1e)  0  //drop wrong effect
   END
 END
BUT_ONLY


COPY_EXISTING ~SW1H63.ITM~ ~override~
 READ_LONG 0x64 "ability_offset"
 READ_SHORT 0x68 "ability_cnt"
 READ_LONG 0x6a "eff_offset"
 FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
   PATCH_IF ("%type%"=1) BEGIN      //Melee
     READ_SHORT ("%ability_offset%"+0x38*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x38*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( "%eff_type%" = 18 ) BEGIN  //max HP bonus
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+13) 3   //dispell\bypass resistance
       END
     END
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Soul Reaver THAC0 Drain Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SW2H08.ITM~ ~override~
 READ_LONG 0x64 "ability_offset"
 READ_SHORT 0x68 "ability_cnt"
 READ_LONG 0x6a "eff_offset"
 FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
   PATCH_IF ("%type%"=1) BEGIN      //Melee
     READ_SHORT ("%ability_offset%"+0x38*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x38*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( "%eff_type%" = 54 ) BEGIN  //THAC0 bonus
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+13) 0   //no dispell\bypass resistance
       END
     END
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Carsomyr Base Damage Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SW2H10.ITM~ ~override~
 READ_LONG 0x64 "ability_offset"
 READ_SHORT 0x68 "ability_cnt"
 READ_LONG 0x6a "eff_offset"
 FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
   PATCH_IF ("%type%"=1) BEGIN      //Melee
     WRITE_SHORT ("%ability_offset%"+0x38*cnt+0x16) 12  //dicesize
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Lilarcor Confusion Immunity Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SW2H14.ITM~ ~override~
 READ_LONG  0x6a "eff_offset"
 READ_SHORT 0x70 "eff_cnt"
 FOR( cnt=0; cnt<"%eff_cnt%"; cnt=cnt+1 ) BEGIN
   READ_SHORT ("%eff_offset%"+0x30*cnt) "type"
   PATCH_IF( "%type%" = 296 ) BEGIN  //immun. to spec. animations
     WRITE_BYTE ("%eff_offset%"+0x30*cnt+0xc) 2   //while equipped
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Healing Exploit Items Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~WA2AMU.ITM~ ~override~
 READ_LONG  0x6a "eff_offset"
 READ_SHORT 0x70 "eff_cnt"
 FOR( cnt=0; cnt<"%eff_cnt%"; cnt=cnt+1 ) BEGIN
   READ_SHORT ("%eff_offset%"+0x30*cnt) "type"
   PATCH_IF( "%type%" = 18 ) BEGIN  //max HP bonus
     WRITE_LONG ("%eff_offset%"+0x30*cnt+8) 3   //???
   END
 END
BUT_ONLY

COPY_EXISTING ~WASPEAR.ITM~ ~override~
 READ_LONG  0x6a "eff_offset"
 READ_SHORT 0x70 "eff_cnt"
 FOR( cnt=0; cnt<"%eff_cnt%"; cnt=cnt+1 ) BEGIN
   READ_SHORT ("%eff_offset%"+0x30*cnt) "type"
   PATCH_IF( "%type%" = 18 ) BEGIN  //max HP bonus
     WRITE_LONG ("%eff_offset%"+0x30*cnt+8) 3   //???
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Vhailor's Helm Simulacrum Magic Resistance Failure Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~WA2HELM.ITM~ ~override~
 READ_LONG 0x64 "ability_offset"
 READ_SHORT 0x68 "ability_cnt"
 READ_LONG 0x6a "eff_offset"
 FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
   PATCH_IF ("%type%"=3) BEGIN      //Magical
     READ_SHORT ("%ability_offset%"+0x38*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x38*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( "%eff_type%" = 146 ) BEGIN  //cast spell
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+12) 0   //instant\limited
       END
     END
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Sling Of Everard Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~WASLING.ITM~ ~override~
 WRITE_BYTE 0x2f 0x0c
 READ_LONG 0x64 "ability_offset"
 READ_SHORT 0x68 "ability_cnt"
 READ_LONG 0x6a "eff_offset"
 FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
   PATCH_IF ("%type%"=2) BEGIN      //Ranged
     WRITE_SHORT ("%ability_offset%"+0x38*cnt+0x1a) 3  //damagebonus
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Wands Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~WAND02.ITM~ ~override~
              ~WAND04.ITM~ ~override~
              ~WAND05.ITM~ ~override~
              ~WAND06.ITM~ ~override~
              ~WAND07.ITM~ ~override~
              ~WAND09.ITM~ ~override~
              ~WAND10.ITM~ ~override~
              ~WAND11.ITM~ ~override~
              ~WAND14.ITM~ ~override~
              ~WAND15.ITM~ ~override~
 WRITE_LONG 0x1e 0x20720800
BUT_ONLY

COPY_EXISTING ~WAND13.ITM~ ~override~
 WRITE_LONG 0x1e 0x20720800
 READ_LONG 0x64 "ability_offset"
 READ_SHORT 0x68 "ability_cnt"
 READ_LONG 0x6a "eff_offset"
 FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
   PATCH_IF ("%type%"=3) BEGIN      //Magical
     READ_SHORT ("%ability_offset%"+0x38*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x38*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( "%eff_type%" = 12 ) BEGIN  //damage
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+13) 1   //dispell\not bypass resistance
       END
     END
   END
 END
BUT_ONLY


//***********************************************************************************************
//   Stores
//***********************************************************************************************
PRINT ~Patching stores...~

COPY_EXISTING ~SAHPR1.STO~ ~override~
 WRITE_LONG 0x14 120  //sell markup
 WRITE_LONG 0x18 50   //buy markup
BUT_ONLY

//-------------------------------------------------------------------------
//Reirra Store Prices Exploit Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SUELF10.STO~ ~override~
 WRITE_LONG 0x14 120  //sell markup
 WRITE_LONG 0x18 50   //buy markup
BUT_ONLY


//***********************************************************************************************
//   Spells
//***********************************************************************************************
PRINT ~Patching spells...~

//-------------------------------------------------------------------------
//Detect Evil Magic Resistance Failure Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SPCL212.SPL~ ~override~   //Detect Evil Priest spell
              ~SPPR104.SPL~ ~override~   //Detect Evil Innate spell
              ~SPWI202.SPL~ ~override~   //Detect Evil Wizard spell - BP DETECTABLE SPELL
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( "%eff_type%" = 115 ) BEGIN  //detect alignment
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0c) 1   //instant\permanent
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0d) 3   //dispell\bypass resistance
       END
     END
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Cavalier Resist Fear Ability Magic Resistance Failure Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SPCL222.SPL~ ~override~   //Remove Fear spell
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( "%eff_type%" = 23 ) BEGIN   //remove fear
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0c) 0   //instant\limited
       END
       PATCH_IF( "%eff_type%" = 141 ) BEGIN  //lighting effect
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0c) 0   //instant\limited
       END
       PATCH_IF( "%eff_type%" = 161 ) BEGIN  //remove fear 2
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0c) 0   //instant\limited
       END
       PATCH_IF( "%eff_type%" = 240 ) BEGIN  //remove icon 2
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0c) 0   //instant\limited
       END
     END
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Inquisitor Hold Person Animation Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~Spcl233b.spl~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 SET eff_num_off=0
 SET exists=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     eff_num_off = ("%ability_offset%"+0x28*cnt+0x1e)
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( "%eff_type%" = 296 ) BEGIN  //Immunity to animation
         exists=1
       END
     END
   END
 END
 PATCH_IF( exists=0 ) BEGIN
   APPEND_FILE ~NeJE\bdash\BIN\Spcl233b.sp_~ //add Immunity to animation
   READ_SHORT eff_num_off  eff_number
   WRITE_SHORT eff_num_off  eff_number+1
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Cumulative Effect Spells and Abilities Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~SPCL907.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 SET eff_extra=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     eff_idx = eff_idx+eff_extra
     SET offset = 0
     SET notexist = 1
     SET abil_off=0
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14) "sp_name"
       PATCH_IF( "%eff_type%" = 206 ) BEGIN   //already exists?
         PATCH_IF( NOT("%sp_name%" STRING_COMPARE_CASE "SPCL907") ) BEGIN
           notexist = 0
         END
       END
       PATCH_IF( "%eff_type%" = 142 ) BEGIN                       //Display portr. icon
         offset = "%eff_offset%"+0x30*(cnt2+eff_idx+1)            //insert right after it
         abil_off = "%ability_offset%"+0x28*cnt
       END
     END

     PATCH_IF( (notexist=1) AND (offset>0) ) BEGIN
       WRITE_SHORT (abil_off+0x1e)  eff_number+1
       WRITE_SHORT (abil_off+0x20)  eff_idx
       INSERT_FILE offset ~NeJE\bdash\BIN\SPCL907.SP_~
       eff_extra = eff_extra + 1
     END
   END
 END
BUT_ONLY

COPY_EXISTING ~SPCL913.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 SET eff_extra=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     eff_idx = eff_idx+eff_extra
     SET offset = 0
     SET notexist = 1
     SET abil_off=0
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14) "sp_name"
       PATCH_IF( "%eff_type%" = 206 ) BEGIN   //already exists?
         PATCH_IF( NOT("%sp_name%" STRING_COMPARE_CASE "SPCL913") ) BEGIN
           notexist = 0
         END
       END
       PATCH_IF( "%eff_type%" = 142 ) BEGIN                       //Display portr. icon
         offset = "%eff_offset%"+0x30*(cnt2+eff_idx+1)            //insert right after it
         abil_off = "%ability_offset%"+0x28*cnt
       END
     END

     PATCH_IF( (notexist=1) AND (offset>0) ) BEGIN
       WRITE_SHORT (abil_off+0x1e)  eff_number+1
       WRITE_SHORT (abil_off+0x20)  eff_idx
       INSERT_FILE offset ~NeJE\bdash\BIN\SPCL913.SP_~
       eff_extra = eff_extra + 1
     END
   END
 END
BUT_ONLY

COPY_EXISTING ~SPCL914.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 SET eff_extra=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     eff_idx = eff_idx+eff_extra
     SET offset = 0
     SET notexist = 1
     SET abil_off=0
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14) "sp_name"
       PATCH_IF( "%eff_type%" = 206 ) BEGIN   //already exists?
         PATCH_IF( NOT("%sp_name%" STRING_COMPARE_CASE "SPCL914") ) BEGIN
           notexist = 0
         END
       END
       PATCH_IF( "%eff_type%" = 83 ) BEGIN                       //Imm. to projectile
         offset = "%eff_offset%"+0x30*(cnt2+eff_idx+1)           //insert right after the last one
         abil_off = "%ability_offset%"+0x28*cnt
       END
     END

     PATCH_IF( (notexist=1) AND (offset>0) ) BEGIN
       WRITE_SHORT (abil_off+0x1e)  eff_number+1
       WRITE_SHORT (abil_off+0x20)  eff_idx
       INSERT_FILE offset ~NeJE\bdash\BIN\SPCL914.SP_~
       eff_extra = eff_extra + 1
     END
   END
 END
BUT_ONLY

COPY_EXISTING ~SPCL917.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 SET eff_extra=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     eff_idx = eff_idx+eff_extra
     SET offset = 0
     SET notexist = 1
     SET abil_off=0
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14) "sp_name"
       PATCH_IF( "%eff_type%" = 206 ) BEGIN   //already exists?
         PATCH_IF( NOT("%sp_name%" STRING_COMPARE_CASE "SPCL917") ) BEGIN
           notexist = 0
         END
       END
       PATCH_IF( "%eff_type%" = 142 ) BEGIN                       //Display portr. icon
         offset = "%eff_offset%"+0x30*(cnt2+eff_idx+1)            //insert right after it
         abil_off = "%ability_offset%"+0x28*cnt
       END
     END

     PATCH_IF( (notexist=1) AND (offset>0) ) BEGIN
       WRITE_SHORT (abil_off+0x1e)  eff_number+1
       WRITE_SHORT (abil_off+0x20)  eff_idx
       INSERT_FILE offset ~NeJE\bdash\BIN\SPCL917.SP_~
       eff_extra = eff_extra + 1
     END
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Chromatic Orb Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~SPDR101.SPL~ ~override~
              ~SPWI118.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE  ("%ability_offset%"+cnt*0x28)  "type"
   READ_SHORT ("%ability_offset%"+cnt*0x28+0x10)  "level"

   PATCH_IF( ("%type%"=2) AND ("%level%")=1 ) BEGIN        //ranged 1st level
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( "%eff_type%" = 0 ) BEGIN                      //bonus to AC
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+2) 2   //targetpresettimer
       END
     END
   END

   PATCH_IF( ("%type%"=2) AND ("%level%")=10 ) BEGIN        //ranged 10th level
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( "%eff_type%" = 134 ) BEGIN  //Petrification
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0d) 1   //dispell\not bypass resistance
       END
     END
   END

   PATCH_IF( ("%type%"=2) AND ("%level%")=12 ) BEGIN        //ranged 12th level
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( "%eff_type%" = 55 ) BEGIN  //Slay
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0d) 1   //dispell\not bypass resistance
       END
     END
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Improved Invisibility AC\Save Bonus Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SPDR401.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 SET eff_extra=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     eff_idx = eff_idx+eff_extra
     SET offset = 0
     SET notexist = 1
     SET abil_off=0
     SET time=0
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14) "sp_name"
       PATCH_IF( "%eff_type%" = 206 ) BEGIN   //already exists?
         PATCH_IF( NOT("%sp_name%" STRING_COMPARE_CASE "SPDR401") ) BEGIN
           notexist = 0
         END
       END
       PATCH_IF( "%eff_type%" = 174 ) BEGIN                    //Play sound
         offset = "%eff_offset%"+0x30*(cnt2+eff_idx+1)         //insert right after the last one
         abil_off = "%ability_offset%"+0x28*cnt
       END
       PATCH_IF( "%eff_type%" = 20 ) BEGIN   //Invisibility
         READ_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+14) time
       END
     END

     PATCH_IF( (notexist=1) AND (offset>0) ) BEGIN
       WRITE_SHORT (abil_off+0x1e)  eff_number+7
       WRITE_SHORT (abil_off+0x20)  eff_idx
       INSERT_FILE offset ~NeJE\bdash\BIN\SPDR401.SP_~
       eff_extra = eff_extra + 7

       FOR( cnt2=0; cnt2<7; cnt2=cnt2+1 ) BEGIN
         WRITE_LONG (offset+0x30*cnt2+14) time
       END
     END
   END
 END
BUT_ONLY

COPY_EXISTING ~SPWI405.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 SET eff_extra=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     eff_idx = eff_idx+eff_extra
     SET offset = 0
     SET notexist = 1
     SET abil_off=0
     SET time=0
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14) "sp_name"
       PATCH_IF( "%eff_type%" = 206 ) BEGIN   //already exists?
         PATCH_IF( NOT("%sp_name%" STRING_COMPARE_CASE "SPWI405") ) BEGIN
           notexist = 0
         END
       END
       PATCH_IF( "%eff_type%" = 174 ) BEGIN                    //Play sound
         offset = "%eff_offset%"+0x30*(cnt2+eff_idx+1)         //insert right after the last one
         abil_off = "%ability_offset%"+0x28*cnt
       END
       PATCH_IF( "%eff_type%" = 20 ) BEGIN   //Invisibility
         READ_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+14) time
       END
     END

     PATCH_IF( (notexist=1) AND (offset>0) ) BEGIN
       WRITE_SHORT (abil_off+0x1e)  eff_number+7
       WRITE_SHORT (abil_off+0x20)  eff_idx
       INSERT_FILE offset ~NeJE\bdash\BIN\SPWI405.SP_~
       eff_extra = eff_extra + 7

       FOR( cnt2=0; cnt2<7; cnt2=cnt2+1 ) BEGIN
         WRITE_LONG (offset+0x30*cnt2+14) time
       END
     END
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Necromantic Spell Hit Point Bonus Magic Resistance Failure
//-------------------------------------------------------------------------
COPY_EXISTING ~SPIN104.SPL~ ~override~   //Larloch's Minor Drain spell
              ~SPWI119.SPL~ ~override~   //
 WRITE_SHORT 0x1e 9216  //Necromancy school
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+2)  "ooo"
       PATCH_IF( "%eff_type%" = 18 ) BEGIN                        //max HP bonus
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0d) 3   //dispell\bypass resistance
       END
       PATCH_IF( ("%eff_type%" = 174) AND ("%ooo%"=1) ) BEGIN     //play sound\ targetSelf
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0d) 3   //dispell\bypass resistance
       END
     END
   END
 END
BUT_ONLY

COPY_EXISTING ~SPIN106.SPL~ ~override~   //Vampiric Touch spell
              ~SPWI314.SPL~ ~override~   //
 WRITE_SHORT 0x1e 9216  //Necromancy school
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( "%eff_type%" = 18 OR "%eff_type%" = 206 ) BEGIN  //max HP bonus and Prot. From itself
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0d) 3   //dispell\bypass resistance
       END
     END
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Deck Of Many Things Moon Spell Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SPIN618.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( "%eff_type%" = 18 ) BEGIN  //max HP bonus
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+8) 0   //Inc\Dec
       END
     END
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Deck Of Many Things Emperor Spell Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SPIN632.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     SET charm=0
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+8)  "effect"
       PATCH_IF( "%eff_type%" = 101 ) BEGIN  //immun to effect
         PATCH_IF( ("%effect%"=5) AND (charm=0) ) BEGIN
           SET charm=1
           WRITE_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+8) 24   //2nd charm -> panic
         END
         WRITE_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0e) 50400   //time
       END
       PATCH_IF( "%eff_type%" = 174 ) BEGIN  //sound
         WRITE_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0e) 50400   //time
       END
     END
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Tears Of Bhaal Stat. Bonuses Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~SPIN750.SPL~ ~override~
              ~SPIN749.SPL~ ~override~
              ~SPIN753.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( ("%eff_type%" = 49) OR ("%eff_type%" = 6) OR ("%eff_type%" = 44) OR ("%eff_type%" = 10) ) BEGIN
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0c)  1 //instant\permanent
       END
     END
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//City-Of-Caverns Heal Party Magic Resistance Failure Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SPIN923.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0d) 0   //no dispell\bypass resistance
     END
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Illithid Healing Magic Resistance Failure Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SPIN958.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0d) 3   //dispell\bypass resistance
     END
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Cumulative Effect Spells and Abilities Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~SPPR113.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 SET eff_extra=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=2) BEGIN        //Ranged
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     eff_idx = eff_idx+eff_extra
     SET offset = 0
     SET notexist = 1
     SET abil_off=0
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14) "sp_name"
       PATCH_IF( "%eff_type%" = 206 ) BEGIN   //already exists?
         PATCH_IF( NOT("%sp_name%" STRING_COMPARE_CASE "SPPR113") ) BEGIN
           notexist = 0
         END
       END
       PATCH_IF( "%eff_type%" = 142 ) BEGIN                       //Display portr. icon
         offset = "%eff_offset%"+0x30*(cnt2+eff_idx+1)            //insert right after it
         abil_off = "%ability_offset%"+0x28*cnt
       END
     END

     PATCH_IF( (notexist=1) AND (offset>0) ) BEGIN
       WRITE_SHORT (abil_off+0x1e)  eff_number+1
       WRITE_SHORT (abil_off+0x20)  eff_idx
       INSERT_FILE offset ~NeJE\bdash\BIN\SPPR113.SP_~
       eff_extra = eff_extra + 1
     END
   END
 END
BUT_ONLY


COPY_EXISTING ~SPPR210.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 SET eff_extra=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     eff_idx = eff_idx+eff_extra
     SET offset = 0
     SET notexist = 1
     SET abil_off=0
     SET time=0
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14) "sp_name"
       PATCH_IF( "%eff_type%" = 206 ) BEGIN   //already exists?
         PATCH_IF( NOT("%sp_name%" STRING_COMPARE_CASE "SPPR210") ) BEGIN
           notexist = 0
         END
       END
       PATCH_IF( "%eff_type%" = 215 ) BEGIN                       //3D eff
         offset = "%eff_offset%"+0x30*(cnt2+eff_idx+1)            //insert right after it
         abil_off = "%ability_offset%"+0x28*cnt
       END
       PATCH_IF( "%eff_type%" = 30 ) BEGIN   //fire resistance
         READ_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+14) time
       END
     END

     PATCH_IF( (notexist=1) AND (offset>0) ) BEGIN
       WRITE_SHORT (abil_off+0x1e)  eff_number+1
       WRITE_SHORT (abil_off+0x20)  eff_idx
       INSERT_FILE offset ~NeJE\bdash\BIN\SPPR210.SP_~
       WRITE_LONG (offset+14) time
       eff_extra = eff_extra + 1
     END

     READ_SHORT ("%ability_offset%"+0x28*cnt+0x10)  level
     PATCH_IF( level=20 ) BEGIN
       READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
       READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
       FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
         READ_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+14) time
         PATCH_IF( time=200 ) BEGIN
           WRITE_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+14) 120  //time for 20th lvl
         END
       END
     END

   END
 END
BUT_ONLY


COPY_EXISTING ~SPPR306.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 SET eff_extra=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     eff_idx = eff_idx+eff_extra
     SET offset = 0
     SET notexist = 1
     SET abil_off=0
     SET time=0
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14) "sp_name"
       PATCH_IF( "%eff_type%" = 206 ) BEGIN   //already exists?
         PATCH_IF( NOT("%sp_name%" STRING_COMPARE_CASE "SPPR306") ) BEGIN
           notexist = 0
         END
       END
       PATCH_IF( "%eff_type%" = 215 ) BEGIN                       //3D eff
         offset = "%eff_offset%"+0x30*(cnt2+eff_idx+1)            //insert right after it
         abil_off = "%ability_offset%"+0x28*cnt
       END
       PATCH_IF( "%eff_type%" = 84 ) BEGIN   //magic fire resistance
         READ_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+14) time
       END
     END

     PATCH_IF( (notexist=1) AND (offset>0) ) BEGIN
       WRITE_SHORT (abil_off+0x1e)  eff_number+1
       WRITE_SHORT (abil_off+0x20)  eff_idx
       INSERT_FILE offset ~NeJE\bdash\BIN\SPPR306.SP_~
       WRITE_LONG (offset+14) time
       eff_extra = eff_extra + 1
     END
   END
 END
BUT_ONLY


COPY_EXISTING ~SPPR513.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 SET eff_extra=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     eff_idx = eff_idx+eff_extra
     SET offset = 0
     SET notexist = 1
     SET abil_off=0
     SET time=0
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14) "sp_name"
       PATCH_IF( "%eff_type%" = 206 ) BEGIN   //already exists?
         PATCH_IF( NOT("%sp_name%" STRING_COMPARE_CASE "SPPR513") ) BEGIN
           notexist = 0
         END
       END
       PATCH_IF( "%eff_type%" = 174 ) BEGIN                       //play snd
         offset = "%eff_offset%"+0x30*(cnt2+eff_idx+1)            //insert right after last one
         abil_off = "%ability_offset%"+0x28*cnt
       END
       PATCH_IF( "%eff_type%" = 44 ) BEGIN   //STR bonus
         READ_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+14) time
       END
     END

     PATCH_IF( (notexist=1) AND (offset>0) ) BEGIN
       WRITE_SHORT (abil_off+0x1e)  eff_number+1
       WRITE_SHORT (abil_off+0x20)  eff_idx
       INSERT_FILE offset ~NeJE\bdash\BIN\SPPR513.SP_~
       WRITE_LONG (offset+14) time
       eff_extra = eff_extra + 1
     END

     READ_SHORT ("%ability_offset%"+0x28*cnt+0x10)  level
     PATCH_IF( level=10 ) BEGIN
       READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
       READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
       FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
         READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
         PATCH_IF( "%eff_type%"=250 ) BEGIN
           WRITE_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+14) 60  //time
         END
       END
     END
     PATCH_IF( level=20 ) BEGIN
       READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
       READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
       FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
         READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
         PATCH_IF( "%eff_type%"=142 ) BEGIN
           WRITE_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+14) 120  //time
         END
       END
     END

   END
 END
BUT_ONLY


COPY_EXISTING ~SPWI107.SPL~ ~override~  //new effects
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 SET eff_extra=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     eff_idx = eff_idx+eff_extra
     SET offset = 0
     SET notexist = 1
     SET abil_off=0
     SET time=0
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14) "sp_name"
       PATCH_IF( "%eff_type%" = 206 ) BEGIN   //already exists?
         PATCH_IF( NOT("%sp_name%" STRING_COMPARE_CASE "SPWI107") ) BEGIN
           notexist = 0
         END
       END
       PATCH_IF( "%eff_type%" = 174 ) BEGIN                       //play snd
         offset = "%eff_offset%"+0x30*(cnt2+eff_idx+1)            //insert right after last one
         abil_off = "%ability_offset%"+0x28*cnt
       END
       PATCH_IF( "%eff_type%" = 6 ) BEGIN   //CHA bonus
         READ_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+14) time
       END
     END

     PATCH_IF( (notexist=1) AND (offset>0) ) BEGIN
       WRITE_SHORT (abil_off+0x1e)  eff_number+1
       WRITE_SHORT (abil_off+0x20)  eff_idx
       INSERT_FILE offset ~NeJE\bdash\BIN\SPWI107.SP_~
       WRITE_LONG (offset+14) time
       eff_extra = eff_extra + 1
     END
   END
 END
BUT_ONLY


COPY_EXISTING ~SPWI201.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 SET eff_extra=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     eff_idx = eff_idx+eff_extra
     SET offset = 0
     SET notexist = 1
     SET abil_off=0
     SET time=0
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14) "sp_name"
       PATCH_IF( "%eff_type%" = 206 ) BEGIN   //already exists?
         PATCH_IF( NOT("%sp_name%" STRING_COMPARE_CASE "SPWI201") ) BEGIN
           notexist = 0
         END
       END
       PATCH_IF( "%eff_type%" = 174 ) BEGIN                       //play snd
         offset = "%eff_offset%"+0x30*(cnt2+eff_idx+1)            //insert right after last one
         abil_off = "%ability_offset%"+0x28*cnt
       END
       PATCH_IF( "%eff_type%" = 65 ) BEGIN   //Blur
         READ_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+14) time
       END
     END

     PATCH_IF( (notexist=1) AND (offset>0) ) BEGIN
       WRITE_SHORT (abil_off+0x1e)  eff_number+1
       WRITE_SHORT (abil_off+0x20)  eff_idx
       INSERT_FILE offset ~NeJE\bdash\BIN\SPWI201.SP_~
       WRITE_LONG (offset+14) time
       eff_extra = eff_extra + 1
     END
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Holy Smite Permanent Blindness Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SPPR313.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x10)  level

     PATCH_IF( (level=6) OR (level=7) ) BEGIN
       FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
         READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
         READ_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14)  "name"

         PATCH_IF( NOT("%name%" STRING_COMPARE_CASE "HITINVWA") ) BEGIN
           WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0c)  1  //instant\permanent
         END

         PATCH_IF( NOT("%name%" STRING_COMPARE_CASE "BLIND") ) BEGIN
           WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0c)  0  //instant\limited
         END
       END
     END

   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Globes Of Invulnerability Skull Trap Protection
//-------------------------------------------------------------------------
COPY_EXISTING ~SPWI406.SPL~ ~override~
              ~SPWI602.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 SET eff_extra=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     eff_idx = eff_idx+eff_extra
     SET offset = 0
     SET notexist = 1
     SET abil_off=0
     SET time=0
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14) "sp_name"
       PATCH_IF( "%eff_type%" = 206 ) BEGIN   //already exists?
         PATCH_IF( NOT("%sp_name%" STRING_COMPARE_CASE "SPWI313") ) BEGIN
           notexist = 0
         END
       END
       PATCH_IF( "%eff_type%" = 174 ) BEGIN                       //play snd
         offset = "%eff_offset%"+0x30*(cnt2+eff_idx+1)            //insert right after last one
         abil_off = "%ability_offset%"+0x28*cnt
       END
       PATCH_IF( "%eff_type%" = 155 ) BEGIN   //Minor globe overlay
         READ_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+14) time
       END
     END

     PATCH_IF( (notexist=1) AND (offset>0) ) BEGIN
       WRITE_SHORT (abil_off+0x1e)  eff_number+1
       WRITE_SHORT (abil_off+0x20)  eff_idx
       INSERT_FILE offset ~NeJE\bdash\BIN\SPWI406.SP_~
       WRITE_LONG (offset+14) time
       eff_extra = eff_extra + 1
     END
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Protection From Acid Casting Time Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SPWI517.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     WRITE_SHORT ("%ability_offset%"+0x28*cnt+0x12)  6  //casting time
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Mordenkainen's Sword Invisibility Exploit Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SPWI716.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     WRITE_SHORT ("%ability_offset%"+0x28*cnt+12)  4    //any point within range
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Absolute Immunity Duration Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SPWI907.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0e)  "time"
       PATCH_IF( "%time%"=28 ) BEGIN
         WRITE_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0e)  24
       END
     END
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Wild Surge #17 Target Gold Destruction Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SPWM117.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+2) 1   //target self
     END
   END
 END
BUT_ONLY


////////////////////////////////////////////////////////////////////////////////
//Detectable spells compatibility related
////////////////////////////////////////////////////////////////////////////////

//******************************************************************************
//******************* SPCL321.SPL **********************************************
//******************************************************************************
//-------------------------------------------------------------------------
//Berserker Enrage Stun Immunity Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SPCL321.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 SET haste_offset=0
 SET eff_num_offset=0
 SET eff_nnn=0
 SET exist=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+8)  "eff"
       PATCH_IF( ("%eff_type%"=101) AND ("%eff%"=5) ) BEGIN  //prot. from Charm
         haste_offset = ("%eff_offset%"+0x30*(cnt2+eff_idx))
         eff_num_offset = ("%ability_offset%"+0x28*cnt+0x1e)
         eff_nnn = eff_number
       END
       PATCH_IF( ("%eff_type%"=101) AND ("%eff%"=45) ) BEGIN  //prot. from Stun
         exist=1
       END
     END
   END
 END
 PATCH_IF( (haste_offset>0) AND (exist=0) ) BEGIN
   WRITE_SHORT eff_num_offset (eff_nnn+1)
   INSERT_FILE haste_offset ~NeJE\bdash\BIN\SPCL321.SP_~ //insert prot. from Stun
 END

 SET mmm=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx

     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       SET numm = eff_number+((cnt2+1)*0xffffffff) //eff_number-cnt2-1
       READ_SHORT ("%eff_offset%"+0x30*numm) "eff_type"
       PATCH_IF( "%eff_type%"=267 ) BEGIN  //Display string - need to remove it
         DELETE_BYTES ("%eff_offset%"+0x30*numm)  0x30
         mmm = mmm+1
       END
     END
     WRITE_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number+(mmm*0xffffffff)// eff_number-mmm
   END
 END
BUT_ONLY

//******************************************************************************
//******************* SPCL423.SPL **********************************************
//******************************************************************************
//-------------------------------------------------------------------------
//Cumulative Effect Spells and Abilities Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~SPCL423.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     SET notexist=1
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14) "sp_name"
       PATCH_IF( "%eff_type%" = 206 ) BEGIN  //Protection from spell
         PATCH_IF( NOT("%sp_name%" STRING_COMPARE_CASE "SPCL423") ) BEGIN
           notexist = 0
         END
       END
     END
     PATCH_IF( notexist=1 ) BEGIN
         WRITE_SHORT ("%ability_offset%"+0x28*cnt+0x1e) (eff_number+1)
         APPEND_FILE ~NeJE\bdash\BIN\Spcl423.sp_~ //add Protection from spell with this spell dispelling
     END
   END
 END
BUT_ONLY


//******************************************************************************
//******************* SPIN117.SPL **********************************************
//******************************************************************************
//-------------------------------------------------------------------------
//Minsc Enrage Stun Immunity Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SPIN117.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 SET haste_offset=0
 SET eff_num_offset=0
 SET eff_nnn=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+8)  "eff"
       PATCH_IF( ("%eff_type%"=101) AND ("%eff%"=5) ) BEGIN  //prot. from Charm
         haste_offset = ("%eff_offset%"+0x30*(cnt2+eff_idx))
         eff_num_offset = ("%ability_offset%"+0x28*cnt+0x1e)
         eff_nnn = eff_number
       END
     END
   END
 END
 PATCH_IF( haste_offset>0 ) BEGIN
   WRITE_SHORT eff_num_offset (eff_nnn+1)
   INSERT_FILE haste_offset ~NeJE\bdash\BIN\SPIN117.SP_~ //insert prot. from Stun
 END
BUT_ONLY

//******************************************************************************
//******************* SPPR111.SPL **********************************************
//******************************************************************************
//-------------------------------------------------------------------------
//Cumulative Effect Spells and Abilities Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~SPPR111.SPL~ ~override~  //tricky patching for every melee(20pcs) ability ;)
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     SET missile_offset=0
     SET plsnd_offset=0
     SET time=0
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( "%eff_type%"=89 ) BEGIN  //missile resistance
         missile_offset = ("%eff_offset%"+0x30*(cnt2+eff_idx))
       END
       PATCH_IF( "%eff_type%"=174 ) BEGIN  //play sound
         plsnd_offset = ("%eff_offset%"+0x30*(cnt2+eff_idx))
         READ_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+14) time
       END
     END
     PATCH_IF( (missile_offset>0) AND (plsnd_offset>0) ) BEGIN
       DELETE_BYTES missile_offset  0x30                 //delete duplicated missile resistance
       INSERT_FILE plsnd_offset ~NeJE\bdash\BIN\SPPR111.SP_~  //insert prot from spell
       WRITE_LONG (plsnd_offset+14) time                 //set proper time
     END
   END
 END
 BUT_ONLY


//******************************************************************************
//******************* SPPR406.SPL **********************************************
//******************************************************************************
//-------------------------------------------------------------------------
//Cumulative Effect Spells and Abilities Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~SPPR406.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     SET notexist=1
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14) "sp_name"
       PATCH_IF( "%eff_type%" = 206 ) BEGIN  //Protection from spell
         PATCH_IF( NOT("%sp_name%" STRING_COMPARE_CASE "SPPR406") ) BEGIN
           notexist = 0
         END
       END
     END
     PATCH_IF( notexist=1 ) BEGIN
         WRITE_SHORT ("%ability_offset%"+0x28*cnt+0x1e) (eff_number+1)
         APPEND_FILE ~NeJE\bdash\BIN\SPPR406.sp_~ //add Protection from spell with this spell dispelling
     END
   END
 END
 BUT_ONLY


//******************************************************************************
//******************* SPPR412.SPL **********************************************
//******************************************************************************
//-------------------------------------------------------------------------
//Cumulative Effect Spells and Abilities Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~SPPR412.SPL~ ~override~  //most complicated one
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"

 SET eff_idx_inc = 0
 SET eff_num_offset=0
 SET eff_nnn=0
 SET eff_idd=0
 SET last_level=0
 SET eff_number=0
 SET bp=0

 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"

   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x10)  last_level
     eff_num_offset = ("%ability_offset%"+0x28*cnt+0x1e)
     eff_nnn = eff_number
     eff_idd = eff_idx+eff_idx_inc
     SET plsnd_offset=0
     SET time=0

     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx+eff_idx_inc))  "eff_type"
       PATCH_IF( "%eff_type%"=174 ) BEGIN  //play sound
         plsnd_offset = ("%eff_offset%"+0x30*(cnt2+eff_idx+eff_idx_inc+1))  //right after it
         READ_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx+eff_idx_inc)+14) time
       END
       PATCH_IF( "%eff_type%"=282 ) BEGIN
         bp = 1          //possible BP presence flag
       END
     END

     PATCH_IF( plsnd_offset>0 ) BEGIN
       WRITE_SHORT eff_num_offset   (eff_nnn+1)
       WRITE_SHORT eff_num_offset+2 (eff_idd)
       eff_idx_inc = eff_idx_inc+1
       INSERT_FILE plsnd_offset ~NeJE\bdash\BIN\SPPR412.SP_~  //insert prot from spell
       WRITE_LONG (plsnd_offset+14) time                 //set proper time
     END
   END
 END

 eff_idx_inc = 0
 PATCH_IF( last_level=18 ) BEGIN
   WRITE_LONG 0x6a ("%eff_offset%"+0x28*2) //we'll add 2 more spell abilities for 19-20 levels
   WRITE_SHORT 0x68 ("%abil_cnt%"+2)
   INSERT_FILE ("%ability_offset%"+0x28*"%abil_cnt%") ~NeJE\bdash\BIN\SPPR412.SP2~
   APPEND_FILE ~NeJE\bdash\BIN\SPPR412.sp3~

   WRITE_SHORT ("%ability_offset%"+0x28*"%abil_cnt%"+0x20)     eff_number+1+eff_idd
   WRITE_SHORT ("%ability_offset%"+0x28*("%abil_cnt%"+1)+0x20) eff_number+1+eff_idd+9

   PATCH_IF( bp=1 ) BEGIN        //we need to add (282) effect there
     READ_LONG  0x6a "eff_offset"
     READ_SHORT  ("%ability_offset%"+0x28*"%abil_cnt%"+0x1e)  eff_number
     WRITE_SHORT ("%ability_offset%"+0x28*"%abil_cnt%"+0x1e)  eff_number+1
     READ_SHORT ("%ability_offset%"+0x28*"%abil_cnt%"+0x20)  eff_idx
     READ_LONG  ("%eff_offset%"+0x30*(eff_idx)+14)  time
     plsnd_offset = ("%eff_offset%"+0x30*(eff_idx+eff_number))   //right after it
     INSERT_FILE plsnd_offset ~NeJE\bdash\BIN\SPPR412.SP4~            //for level 19
     WRITE_LONG (plsnd_offset+14) time

     READ_SHORT ("%ability_offset%"+0x28*("%abil_cnt%"+1)+0x1e)  eff_number
     WRITE_SHORT ("%ability_offset%"+0x28*("%abil_cnt%"+1)+0x1e)  eff_number+1
     READ_SHORT ("%ability_offset%"+0x28*("%abil_cnt%"+1)+0x20)  eff_idx
     WRITE_SHORT ("%ability_offset%"+0x28*("%abil_cnt%"+1)+0x20)  eff_idx+1
     READ_LONG ("%eff_offset%"+0x30*(eff_idx+1)+14)  time
     plsnd_offset = ("%eff_offset%"+0x30*(eff_idx+1+eff_number))  //right after it
     INSERT_FILE plsnd_offset ~NeJE\bdash\BIN\SPPR412.SP4~             //for level 20
     WRITE_LONG (plsnd_offset+14) time
   END
 END
 BUT_ONLY

//******************************************************************************
//******************* SPWI702.SPL **********************************************
//******************************************************************************
//-------------------------------------------------------------------------
//Cumulative Effect Spells and Abilities Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~SPWI702.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 SET eff_extra=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     eff_idx = eff_idx+eff_extra
     SET offset = 0
     SET time = 0
     SET notexist = 1
     SET abil_off=0
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( "%eff_type%" = 142 ) BEGIN
         READ_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+14)  time
       END
       READ_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14) "sp_name"
       PATCH_IF( "%eff_type%" = 206 ) BEGIN   //already exists?
         PATCH_IF( NOT("%sp_name%" STRING_COMPARE_CASE "SPWI702") ) BEGIN
           notexist = 0
         END
       END
       PATCH_IF( "%eff_type%" = 215 ) BEGIN                       //play 3D effect
         offset = "%eff_offset%"+0x30*(cnt2+eff_idx+1)            //insert right after it
         abil_off = "%ability_offset%"+0x28*cnt
       END
     END

     PATCH_IF( (notexist=1) AND (offset>0) ) BEGIN
       WRITE_SHORT (abil_off+0x1e)  eff_number+1
       WRITE_SHORT (abil_off+0x20)  eff_idx
       INSERT_FILE offset ~NeJE\bdash\BIN\SPWI702.SP_~
       eff_extra = eff_extra + 1
       WRITE_LONG (offset+14)  time
     END
   END
 END
 BUT_ONLY


//******************************************************************************
//******************* SPWI803.SPL **********************************************
//******************************************************************************
//-------------------------------------------------------------------------
//Cumulative Effect Spells and Abilities Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~SPWI803.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 SET eff_extra=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     eff_idx = eff_idx+eff_extra
     SET offset = 0
     SET time = 0
     SET notexist = 1
     SET abil_off=0
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( "%eff_type%" = 142 ) BEGIN
         READ_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+14)  time
       END
       READ_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14) "sp_name"
       PATCH_IF( "%eff_type%" = 206 ) BEGIN   //already exists?
         PATCH_IF( NOT("%sp_name%" STRING_COMPARE_CASE "SPWI803") ) BEGIN
           notexist = 0
         END
       END
       PATCH_IF( "%eff_type%" = 215 ) BEGIN                       //play 3D effect
         offset = "%eff_offset%"+0x30*(cnt2+eff_idx+1)            //insert right after it
         abil_off = "%ability_offset%"+0x28*cnt
       END
     END

     PATCH_IF( (notexist=1) AND (offset>0) ) BEGIN
       WRITE_SHORT (abil_off+0x1e)  eff_number+1
       WRITE_SHORT (abil_off+0x20)  eff_idx
       INSERT_FILE offset ~NeJE\bdash\BIN\SPWI803.SP_~
       eff_extra = eff_extra + 1
       WRITE_LONG (offset+14)  time
     END
   END
 END
 BUT_ONLY


//******************************************************************************
//******************* SPWI804.SPL **********************************************
//******************************************************************************
//-------------------------------------------------------------------------
//Simulacrum Invisibility Exploit Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SPWI804.SPL~ ~override~  //again complicated one
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"

 SET eff_idx_inc = 0
 SET eff_num_offset=0
 SET eff_nnn=0
 SET eff_idd=0
 SET last_level=0
 SET eff_number=0
 SET bp=0

 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"

   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x10)  last_level
     eff_num_offset = ("%ability_offset%"+0x28*cnt+0x1e)
     eff_nnn = eff_number
     eff_idd = eff_idx

     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx+eff_idx_inc))  "eff_type"
       PATCH_IF( "%eff_type%"=233 ) BEGIN
         bp = 1          //possible BP presence flag
       END
     END

     WRITE_SHORT ("%ability_offset%"+0x28*cnt+12)  4    //any point within range
   END
 END

 eff_idx_inc = 0
 PATCH_IF( last_level=20 ) BEGIN
   WRITE_LONG 0x6a ("%eff_offset%"+0x28*2) //we'll add 2 more spell abilities for 21-22 levels
   WRITE_SHORT 0x68 ("%abil_cnt%"+2)
   INSERT_FILE ("%ability_offset%"+0x28*"%abil_cnt%") ~NeJE\bdash\BIN\SPWI804.SP_~
   APPEND_FILE ~NeJE\bdash\BIN\SPWI804.sp2~

   WRITE_SHORT ("%ability_offset%"+0x28*"%abil_cnt%"+0x20)     eff_number+eff_idd
   WRITE_SHORT ("%ability_offset%"+0x28*("%abil_cnt%"+1)+0x20) eff_number+eff_idd+3
   WRITE_SHORT ("%ability_offset%"+0x28*"%abil_cnt%"+12)  4
   WRITE_SHORT ("%ability_offset%"+0x28*("%abil_cnt%"+1)+12)  4

   PATCH_IF( bp=1 ) BEGIN        //we need to add (233) effect there
     READ_LONG  0x6a "eff_offset"
     READ_SHORT  ("%ability_offset%"+0x28*"%abil_cnt%"+0x1e)  eff_number
     WRITE_SHORT ("%ability_offset%"+0x28*"%abil_cnt%"+0x1e)  eff_number+1
     READ_SHORT ("%ability_offset%"+0x28*"%abil_cnt%"+0x20)  eff_idx
     READ_LONG  ("%eff_offset%"+0x30*(eff_idx)+14)  time
     plsnd_offset = ("%eff_offset%"+0x30*(eff_idx+eff_number))   //right after it
     INSERT_FILE plsnd_offset ~NeJE\bdash\BIN\SPWI804.SP3~            //for level 21
     WRITE_LONG (plsnd_offset+14) time

     READ_SHORT ("%ability_offset%"+0x28*("%abil_cnt%"+1)+0x1e)  eff_number
     WRITE_SHORT ("%ability_offset%"+0x28*("%abil_cnt%"+1)+0x1e)  eff_number+1
     READ_SHORT ("%ability_offset%"+0x28*("%abil_cnt%"+1)+0x20)  eff_idx
     WRITE_SHORT ("%ability_offset%"+0x28*("%abil_cnt%"+1)+0x20)  eff_idx+1
     READ_LONG ("%eff_offset%"+0x30*(eff_idx+1)+14)  time
     plsnd_offset = ("%eff_offset%"+0x30*(eff_idx+1+eff_number))  //right after it
     INSERT_FILE plsnd_offset ~NeJE\bdash\BIN\SPWI804.SP3~             //for level 22
     WRITE_LONG (plsnd_offset+14) time
   END
 END
 BUT_ONLY
//**************************************************************************************************
//Detectable spells END
//**************************************************************************************************

//-------------------------------------------------------------------------
//Magic Missile Damage Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SPWI003.SPL~ ~override~
              ~SPWI112.SPL~ ~override~
              ~SPIN685.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=2) BEGIN        //found Ranged ability
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( "%eff_type%" = 12 ) BEGIN  //Damage ability effect
         WRITE_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x1c) 1   //#dice\Max level
         WRITE_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x1c+4) 4   //dice size\Min level
         //1D4 + 1 damage
       END
     END
   END
 END
BUT_ONLY


//////////////////////////////////////////////////////////////\
//   Custom fixes, not included in the original Baldurdash
//////////////////////////////////////////////////////////////\
PRINT ~Non-original Baldurdash patches...~

PRINT ~Patching items...~

//********************
// Books
//********************
COPY_EXISTING ~BOOK05.ITM~ ~override~
              ~BOOK07.ITM~ ~override~
              ~BOOK08.ITM~ ~override~
 WRITE_SHORT 0x1c  0  //Category : Misc instead of Books
 BUT_ONLY

COPY_EXISTING ~BOOK32.ITM~ ~override~
              ~BOOK94.ITM~ ~override~
              ~BOOK95.ITM~ ~override~
              ~BOOK96.ITM~ ~override~
 WRITE_SHORT 0x1c  37  //Category : Books instead of Misc
 BUT_ONLY

//********************
// Weapons
//********************
COPY_EXISTING ~BOW07.ITM~ ~override~
 WRITE_BYTE 0x31 104  //Proficiency - Long Bow
 BUT_ONLY

COPY_EXISTING ~BRUENAXE.ITM~ ~override~
 WRITE_BYTE 0x31 92  //Proficiency - Axe
 BUT_ONLY

COPY_EXISTING ~CHEVIL10.ITM~ ~override~
 WRITE_SHORT 0x1c  20  //Category : Long Swords instead of Short Swords
 BUT_ONLY

COPY_EXISTING ~DAGG10.ITM~ ~override~
 WRITE_SHORT 0x1c  16  //Category : Daggers instead of Misc
 BUT_ONLY

COPY_EXISTING ~MISC5T.ITM~ ~override~
 WRITE_BYTE 0x31 102  //Proficiency - quarterstaff
 BUT_ONLY

COPY_EXISTING ~MISC72.ITM~ ~override~
 WRITE_BYTE 0x2f 0x02  //not usable by Wizardslayer
 BUT_ONLY

COPY_EXISTING ~MISC73.ITM~ ~override~
 WRITE_BYTE 0x2f 0x02  //not usable by Wizardslayer
 BUT_ONLY

COPY_EXISTING ~MISC9Q.ITM~ ~override~
 WRITE_BYTE 0x2b 0x02  //not usable by Beastmaster
 BUT_ONLY

COPY_EXISTING ~MISC9W.ITM~ ~override~
 WRITE_BYTE 0x2f 0x02  //not usable by Wizardslayer
 BUT_ONLY

COPY_EXISTING ~PLAT05.ITM~ ~override~
 WRITE_BYTE 0x26 15  //min STR
 BUT_ONLY

COPY_EXISTING ~POTN56.ITM~ ~override~
 WRITE_LONG 0x1e 0x603cfd80  //usability - add Cleric-Thief
 BUT_ONLY

COPY_EXISTING ~RING08.ITM~ ~override~
 WRITE_LONG 0x1e 0x60725ec0
 READ_LONG  0x6a  "eff_offset"
 READ_SHORT 0x70  "glob_eff_cnt"
 FOR( cnt=0; cnt<"%glob_eff_cnt%"; cnt=cnt+1 ) BEGIN
   WRITE_LONG ("%eff_offset%"+0x30*cnt+0x0d)  0   //Not dispel\Bypass resistance
 END
BUT_ONLY

COPY_EXISTING ~RING22.ITM~ ~override~
 WRITE_LONG 0x1e 0x207f2840
 BUT_ONLY

COPY_EXISTING ~RING35.ITM~ ~override~
 WRITE_LONG 0x1e 0x6034fd80
 BUT_ONLY

COPY_EXISTING ~RING36.ITM~ ~override~
 WRITE_LONG 0x1e 0x4034fdc0
 BUT_ONLY

COPY_EXISTING ~RING40.ITM~ ~override~
 WRITE_LONG 0x1e 0x60725ec0  //usability - remove Monk
 BUT_ONLY

COPY_EXISTING ~RODS01.ITM~ ~override~
 WRITE_LONG 0x1e 0x60721840
 BUT_ONLY

COPY_EXISTING ~RODS05.ITM~ ~override~
 WRITE_LONG 0x1e 0x20000000
 BUT_ONLY

COPY_EXISTING ~RODS06.ITM~ ~override~
 WRITE_LONG 0x1e 0x604c07c0
 BUT_ONLY

COPY_EXISTING ~SENDAI.ITM~ ~override~
 WRITE_BYTE 0x2b 0x02    //not by beastmaster
 BUT_ONLY

COPY_EXISTING ~WA2RING.ITM~ ~override~
 WRITE_LONG 0x1e 0x6034fdc0
 BUT_ONLY

////////////////////////////////////
//   Scripts fixes : version 1.2
////////////////////////////////////
PRINT ~Patching scripts...~

COMPILE ~NeJE\bdash\baf~

COPY_EXISTING ~APPRENTI.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~CreateVisualEffectObject("ANCALL",Myself)~ ~CreateVisualEffectObject("AMCALL",Myself)~
 END
 REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xAPPRENT.BAF~ ~NeJE\bdash\BAF_r\rAPPRENT.BAF~
 BUT_ONLY

COPY_EXISTING ~AR2200.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~jeloli01~ ~jelgre01~
 END
 BUT_ONLY

COPY_EXISTING ~AR3020.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~ChangeAIScript("one",OVERRIDE)~ ~ChangeAIScript("",OVERRIDE)~
 END
 BUT_ONLY

COPY_EXISTING ~AR4000.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~DWCSW1H01~ ~DWSW1H01~
 END
 BUT_ONLY

COPY_EXISTING ~CAULDRON.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~PlaySound("EFF_38")~ ~PlaySound("EFF_M38")~
 END
 BUT_ONLY

COPY_EXISTING ~CUT01.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~None~ ~~
 END
 BUT_ONLY

COPY_EXISTING ~CUT215A.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~SPDOOR~ ~SPDIMNDR~
 END
 BUT_ONLY

COPY_EXISTING ~CUT31Q.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~bdcoun04~ ~bdcoun03~
 END
 BUT_ONLY

COPY_EXISTING ~CUT49E.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~PlaySound("ISC_03A")~ ~PlaySound("MISC_03A")~ //exists in BGT
 END
 BUT_ONLY

COPY_EXISTING ~CUT57C.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~CreateVisualEffectObject("SPOWWRD",Player1)~ ~CreateVisualEffectObject("SPPOWWRD",Player1)~
 END
 BUT_ONLY

COPY_EXISTING ~CUTD1.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~None~ ~~
 END
 BUT_ONLY

COPY_EXISTING ~DDGUARD7.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~CreateVisualEffectObject("yself","SPFLESHS")~ ~CreateVisualEffectObject("SPFLESHS","DDGUARD7")~
 END
 BUT_ONLY

COPY_EXISTING ~FINSOL04.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~SPPLOYMP~ ~SPPOLYMP~
 END
 BUT_ONLY

COPY_EXISTING ~IDIOT01.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~OR(31)~ ~OR(30)~
 END
 BUT_ONLY

COPY_EXISTING ~KILLGOOD.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~ChangeAIScript("DEATHK",OVERRIDE)~ ~ChangeAIScript("DEATHKNI",OVERRIDE)~
 END
 BUT_ONLY

COPY_EXISTING ~PIPE04.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~PlaySound("MISC_02A")~ ~PlaySound("MISC_01A")~ //exists in BGT
 END
 BUT_ONLY

COPY_EXISTING ~PPSHAD01.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~PlaySound("ISC_15B")~ ~PlaySound("MISC_03B")~ //exists in BGT
 END
 BUT_ONLY

COPY_EXISTING ~PPSHAD02.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~PlaySound("ISC_15A")~ ~PlaySound("MISC_03A")~ //exists in BGT
 END
 BUT_ONLY

COPY_EXISTING ~PPSHAD03.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~PlaySound("ISC_15A")~ ~PlaySound("MISC_03A")~ //exists in BGT
 END
 BUT_ONLY

COPY_EXISTING ~PPSHAD04.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~PlaySound("ISC_15A")~ ~PlaySound("MISC_03A")~ //exists in BGT
 END
 BUT_ONLY

COPY_EXISTING ~PPSHAD05.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~PlaySound("ISC_15A")~ ~PlaySound("MISC_03A")~ //exists in BGT
 END
 BUT_ONLY

COPY_EXISTING ~PPSHAD06.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~PlaySound("ISC_15A")~ ~PlaySound("MISC_03A")~ //exists in BGT
 END
 BUT_ONLY

COPY_EXISTING ~SPWNRAK.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~dogre01~ ~ogre01~
 END
 BUT_ONLY

COPY_EXISTING ~VICG.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~OR(4)~ ~OR(2)~
 END
 BUT_ONLY

COPY_EXISTING ~VICG1.BCS~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~OR(4)~ ~OR(2)~
 END
 BUT_ONLY

//////////////////////////////////////////////////////
//Custom fixes for BG1 - invalid resources references
//////////////////////////////////////////////////////
PRINT ~Custom fixes - fixing invalid resources references...~

COPY_EXISTING ~AMCARRAS.CRE~ ~override~
 READ_LONG 0x2a0 "known_spell_off"
 READ_LONG 0x2a4 "known_spell_cnt"
 READ_LONG 0x2b0 "mem_spell_off"
 READ_LONG 0x2b4 "mem_spell_cnt"
 FOR( cnt=0; cnt<"%known_spell_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%known_spell_off%"+0x0c*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "SPW205")=0) BEGIN
     WRITE_ASCII ("%known_spell_off%"+0x0c*cnt) "SPWI205"
     WRITE_BYTE ("%known_spell_off%"+0x0c*cnt+7) 0
   END
   PATCH_IF (("%name%" STRING_COMPARE_CASE "SPW306")=0) BEGIN
     WRITE_ASCII ("%known_spell_off%"+0x0c*cnt) "SPWI306"
     WRITE_BYTE ("%known_spell_off%"+0x0c*cnt+7) 0
   END
   PATCH_IF (("%name%" STRING_COMPARE_CASE "SPW623")=0) BEGIN
     WRITE_ASCII ("%known_spell_off%"+0x0c*cnt) "SPWI623"
     WRITE_BYTE ("%known_spell_off%"+0x0c*cnt+7) 0
   END
   PATCH_IF (("%name%" STRING_COMPARE_CASE "SPW505")=0) BEGIN
     WRITE_ASCII ("%known_spell_off%"+0x0c*cnt) "SPWI505"
     WRITE_BYTE ("%known_spell_off%"+0x0c*cnt+7) 0
   END
 END
 FOR( cnt=0; cnt<"%mem_spell_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%mem_spell_off%"+0x0c*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "SPW205")=0) BEGIN
     WRITE_ASCII ("%mem_spell_off%"+0x0c*cnt) "SPWI205"
     WRITE_BYTE ("%mem_spell_off%"+0x0c*cnt+7) 0
   END
   PATCH_IF (("%name%" STRING_COMPARE_CASE "SPW306")=0) BEGIN
     WRITE_ASCII ("%mem_spell_off%"+0x0c*cnt) "SPWI306"
     WRITE_BYTE ("%mem_spell_off%"+0x0c*cnt+7) 0
   END
   PATCH_IF (("%name%" STRING_COMPARE_CASE "SPW623")=0) BEGIN
     WRITE_ASCII ("%mem_spell_off%"+0x0c*cnt) "SPWI623"
     WRITE_BYTE ("%mem_spell_off%"+0x0c*cnt+7) 0
   END
   PATCH_IF (("%name%" STRING_COMPARE_CASE "SPW505")=0) BEGIN
     WRITE_ASCII ("%mem_spell_off%"+0x0c*cnt) "SPWI505"
     WRITE_BYTE ("%mem_spell_off%"+0x0c*cnt+7) 0
   END
 END
 BUT_ONLY

COPY_EXISTING ~AMUL15.ITM~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=3) BEGIN        //Magical
     READ_SHORT ("%ability_offset%"+0x38*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x38*cnt+0x20)  eff_idx
     abil_off = "%ability_offset%"+0x38*cnt
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14)  "eff_name"
       PATCH_IF (("%eff_name%" STRING_COMPARE_CASE "SPARMORI")=0) BEGIN
         WRITE_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14)  "SPARMOUR"
       END
     END
   END
 END
 BUT_ONLY

COPY_EXISTING ~ARNTRA01.CRE~ ~override~
 READ_LONG 0x2bc "it_off"
 READ_LONG 0x2c0 "it_cnt"
 FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%it_off%"+0x14*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "SH1H04")=0) BEGIN
     WRITE_ASCII ("%it_off%"+0x14*cnt) "SW1H04"
     WRITE_BYTE ("%it_off%"+0x14*cnt+6) 0
   END
 END
 BUT_ONLY

COPY_EXISTING ~AROW1A.ITM~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x38)  "type"
   PATCH_IF("%type%"=2) BEGIN        //Ranged
     READ_ASCII ("%ability_offset%"+0x38*cnt+4)  "name"
     PATCH_IF (("%name%" STRING_COMPARE_CASE "IAROW1A")=0) BEGIN
       WRITE_ASCII ("%ability_offset%"+0x38*cnt+4)  "IAROW01"
     END
   END
 END
 BUT_ONLY

COPY_EXISTING ~BAZPAT03.CRE~ ~override~
 WRITE_ASCII 0x268 "WTASIGHT"
 BUT_ONLY

COPY_EXISTING ~BHELM.CRE~ ~override~
 READ_LONG 0x2bc "it_off"
 READ_LONG 0x2c0 "it_cnt"
 FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%it_off%"+0x14*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "SCRL25")=0) BEGIN
     WRITE_ASCII ("%it_off%"+0x14*cnt) "SCRL61"
   END
 END
 BUT_ONLY

COPY_EXISTING ~BHGHOUL5.CRE~ ~override~
 READ_LONG 0x2bc "it_off"
 READ_LONG 0x2c0 "it_cnt"
 FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%it_off%"+0x14*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "ARRW01")=0) BEGIN
     WRITE_ASCII ("%it_off%"+0x14*cnt) "AROW01"
   END
 END
 BUT_ONLY

COPY_EXISTING ~BOY1.CRE~ ~override~
 WRITE_ASCII 0x258 "RUNENEMY"
 BUT_ONLY

COPY_EXISTING ~COR.CRE~ ~override~
 READ_LONG 0x2bc "it_off"
 READ_LONG 0x2c0 "it_cnt"
 FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%it_off%"+0x14*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "2HSW02")=0) BEGIN
     WRITE_ASCII ("%it_off%"+0x14*cnt) "SW2H02"
   END
 END
 BUT_ONLY

COPY_EXISTING ~DADROW10.CRE~ ~override~
 WRITE_ASCII 0x250 "PRIES10B"
 BUT_ONLY

COPY_EXISTING ~DADROW12.CRE~ ~override~
 WRITE_ASCII 0x250 "PRIES14T"
 BUT_ONLY

COPY_EXISTING ~DADROW15.CRE~ ~override~
              ~DADROW9.CRE~ ~override~
 WRITE_ASCII 0x258 "MAGE8A"
 BUT_ONLY

COPY_EXISTING ~DAGHAUN1.CRE~ ~override~
 WRITE_ASCII 0x258 "PRIES14T"
 BUT_ONLY

COPY_EXISTING ~CULTIST1.CRE~ ~override~
              ~EXCULT1.CRE~ ~override~
              ~EXCULT2.CRE~ ~override~
 READ_LONG 0x2bc "it_off"
 READ_LONG 0x2c0 "it_cnt"
 FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%it_off%"+0x14*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "LEATH04")=0) BEGIN
     WRITE_ASCII ("%it_off%"+0x14*cnt) "LEAT04"
     WRITE_BYTE ("%it_off%"+0x14*cnt+6) 0
   END
 END
 BUT_ONLY

COPY_EXISTING ~GORJE.CRE~ ~override~
 READ_LONG 0x2bc "it_off"
 READ_LONG 0x2c0 "it_cnt"
 FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%it_off%"+0x14*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "CHAM01")=0) BEGIN
     WRITE_ASCII ("%it_off%"+0x14*cnt) "CHAN01"
   END
 END
 BUT_ONLY


COPY_EXISTING ~GORSTA10.CRE~ ~override~
 READ_LONG 0x2bc "it_off"
 READ_LONG 0x2c0 "it_cnt"
 FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%it_off%"+0x14*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "UMBER1")=0) BEGIN
     WRITE_ASCII ("%it_off%"+0x14*cnt) "UMBER01"
     WRITE_BYTE ("%it_off%"+0x14*cnt+7) 0
   END
 END
 BUT_ONLY

COPY_EXISTING ~GORWOM01.CRE~ ~override~
 READ_LONG 0x2bc "it_off"
 READ_LONG 0x2c0 "it_cnt"
 FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%it_off%"+0x14*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "RDNTRE04")=0) BEGIN
     WRITE_ASCII ("%it_off%"+0x14*cnt) "RNDTRE04"
   END
   PATCH_IF (("%name%" STRING_COMPARE_CASE "RDNTRE03")=0) BEGIN
     WRITE_ASCII ("%it_off%"+0x14*cnt) "RNDTRE03"
   END
 END
 BUT_ONLY

COPY_EXISTING ~KILLSW01.ITM~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x38)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_ASCII ("%ability_offset%"+0x38*cnt+4)  "name"
     PATCH_IF (("%name%" STRING_COMPARE_CASE "SW1H41")=0) BEGIN
       WRITE_ASCII ("%ability_offset%"+0x38*cnt+4)  "ISW1H41"
       WRITE_BYTE ("%ability_offset%"+0x38*cnt+4+7)  0
     END
   END
 END
 BUT_ONLY

COPY_EXISTING ~LAUNE.CRE~ ~override~
 READ_LONG 0x2bc "it_off"
 READ_LONG 0x2c0 "it_cnt"
 FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%it_off%"+0x14*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "VAMP01")=0) BEGIN
     WRITE_ASCII ("%it_off%"+0x14*cnt) "VAMP1"
     WRITE_BYTE ("%it_off%"+0x14*cnt+5) 0
   END
 END
 BUT_ONLY

COPY_EXISTING ~MISC1H.ITM~ ~override~
 WRITE_ASCII 0x44 "CBLUN06"   //ground icon
 BUT_ONLY

COPY_EXISTING ~MISC66.ITM~ ~override~
 WRITE_ASCII 0x44 "GMISC13"   //ground icon
 WRITE_BYTE 0x44+7 0
 WRITE_ASCII 0x58 "CMISC80"   //carried icon
 BUT_ONLY

COPY_EXISTING ~MISC9S.ITM~ ~override~
 WRITE_ASCII 0x58 "IMISC9S"   //carried icon
 BUT_ONLY

COPY_EXISTING ~MISCA4.ITM~ ~override~
 WRITE_ASCII 0x44 "GPOTN01"   //ground icon
 BUT_ONLY

COPY_EXISTING ~MISCAV.ITM~ ~override~
 WRITE_ASCII 0x3a "IMISCAJ"   //icon
 WRITE_ASCII 0x58 "CMISC50"   //carried icon
 BUT_ONLY


COPY_EXISTING ~PIREXE01.CRE~ ~override~
 READ_LONG 0x2bc "it_off"
 READ_LONG 0x2c0 "it_cnt"
 FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%it_off%"+0x14*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "BLUNT06")=0) BEGIN
     WRITE_ASCII ("%it_off%"+0x14*cnt) "BLUN06"
     WRITE_BYTE ("%it_off%"+0x14*cnt+6) 0
   END
 END
 BUT_ONLY

COPY_EXISTING ~PIRSEA01.CRE~ ~override~
 READ_LONG 0x2bc "it_off"
 READ_LONG 0x2c0 "it_cnt"
 FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%it_off%"+0x14*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "LEATH01")=0) BEGIN
     WRITE_ASCII ("%it_off%"+0x14*cnt) "LEAT01"
     WRITE_BYTE ("%it_off%"+0x14*cnt+6) 0
   END
 END
 BUT_ONLY

COPY_EXISTING ~JAEL01.CRE~ ~override~
              ~PPUMB01.CRE~ ~override~
              ~PRIES18B.CRE~ ~override~
 READ_LONG 0x2a0 "known_spell_off"
 READ_LONG 0x2a4 "known_spell_cnt"
 READ_LONG 0x2b0 "mem_spell_off"
 READ_LONG 0x2b4 "mem_spell_cnt"
 FOR( cnt=0; cnt<"%known_spell_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%known_spell_off%"+0x0c*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "SPPR714")=0) BEGIN
     WRITE_ASCII ("%known_spell_off%"+0x0c*cnt) "SPPR715"
     WRITE_BYTE ("%known_spell_off%"+0x0c*cnt+7) 0
   END
 END
 FOR( cnt=0; cnt<"%mem_spell_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%mem_spell_off%"+0x0c*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "SPPR714")=0) BEGIN
     WRITE_ASCII ("%mem_spell_off%"+0x0c*cnt) "SPPR715"
     WRITE_BYTE ("%mem_spell_off%"+0x0c*cnt+7) 0
   END
 END
 BUT_ONLY

COPY_EXISTING ~MUMGRE01.CRE~ ~override~
              ~RIFTCR03.CRE~ ~override~
 WRITE_ASCII 0x248 "MUMMY01"           //script
 WRITE_BYTE 0x248+7 0
 BUT_ONLY

COPY_EXISTING ~SCRLADJ.ITM~ ~override~
              ~SCRLZY.ITM~ ~override~
              ~SCRLZZ.ITM~ ~override~
 WRITE_ASCII 0x58 "CSCRL01"   //carried icon
 BUT_ONLY

COPY_EXISTING ~SENDRO03.CRE~ ~override~
 READ_LONG 0x2bc "it_off"
 READ_LONG 0x2c0 "it_cnt"
 FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%it_off%"+0x14*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "BWBOLT01")=0) BEGIN
     WRITE_ASCII ("%it_off%"+0x14*cnt) "DWBOLT01"
   END
 END
 BUT_ONLY

COPY_EXISTING ~SLMAGE2.CRE~ ~override~
 READ_LONG 0x2a0 "known_spell_off"
 READ_LONG 0x2a4 "known_spell_cnt"
 READ_LONG 0x2b0 "mem_spell_off"
 READ_LONG 0x2b4 "mem_spell_cnt"
 FOR( cnt=0; cnt<"%known_spell_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%known_spell_off%"+0x0c*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "SPWI422")=0) BEGIN
     WRITE_ASCII ("%known_spell_off%"+0x0c*cnt) "SPWI423"
     WRITE_BYTE ("%known_spell_off%"+0x0c*cnt+7) 0
   END
 END
 FOR( cnt=0; cnt<"%mem_spell_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%mem_spell_off%"+0x0c*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "SPWI422")=0) BEGIN
     WRITE_ASCII ("%mem_spell_off%"+0x0c*cnt) "SPWI423"
     WRITE_BYTE ("%mem_spell_off%"+0x0c*cnt+7) 0
   END
 END
 BUT_ONLY

COPY_EXISTING ~SLNG03.ITM~ ~override~
 WRITE_ASCII 0x58 "ISLNG03"   //carried icon
 BUT_ONLY

COPY_EXISTING ~SPCL900.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL900B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL901.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL901B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL902.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL902B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL903.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL903B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL904.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL904B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL905.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL905B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL906.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL906B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL907.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL907B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL908.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL908B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL909.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL909B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL910.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL910B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL911.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL911B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL912.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL912B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL913.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL913B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL914.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL914B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL915.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL915B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL916.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL916B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL917.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL917B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL918.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL918B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL919.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL919B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL921.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL921B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPCL922.SPL~ ~override~
 WRITE_ASCII 0x3a "SPCL920B"   //spell icon
 BUT_ONLY

COPY_EXISTING ~SPWI995.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( "%eff_type%" = 174 ) BEGIN
         WRITE_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14) "EFF_M09"
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14+7) 0
       END
     END
   END
 END
 BUT_ONLY

COPY_EXISTING ~DEMOSUM4.CRE~ ~override~
              ~GORCAMB.CRE~ ~override~
              ~GORCAMB6.CRE~ ~override~
              ~GORCAMB7.CRE~ ~override~
              ~HGFEL01.CRE~ ~override~
              ~TELIMP1.CRE~ ~override~
 READ_LONG 0x2bc "it_off"
 READ_LONG 0x2c0 "it_cnt"
 FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%it_off%"+0x14*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "RNGDEMN")=0) BEGIN
     WRITE_ASCII ("%it_off%"+0x14*cnt) "RINGDEMN"
   END
 END
 BUT_ONLY

COPY_EXISTING ~TIRTHOLD.CRE~ ~override~
 READ_LONG 0x2bc "it_off"
 READ_LONG 0x2c0 "it_cnt"
 FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%it_off%"+0x14*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "STAFF01")=0) BEGIN
     WRITE_ASCII ("%it_off%"+0x14*cnt) "STAF01"
     WRITE_BYTE ("%it_off%"+0x14*cnt+6) 0
   END
 END
 BUT_ONLY

COPY_EXISTING ~DDGUARD3.CRE~ ~override~
              ~GENIE01.CRE~ ~override~
              ~GENIE02.CRE~ ~override~
              ~GENIE03.CRE~ ~override~
              ~GENIE04.CRE~ ~override~
              ~GENIE1.CRE~ ~override~
              ~IDJINNI.CRE~ ~override~
              ~KGENIE1.CRE~ ~override~
              ~KGENIE2.CRE~ ~override~
              ~PPDJINN.CRE~ ~override~
              ~TRGENI01.CRE~ ~override~
              ~TRGENI02.CRE~ ~override~
              ~TRGENI03.CRE~ ~override~
 READ_LONG 0x2bc "it_off"
 READ_LONG 0x2c0 "it_cnt"
 FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%it_off%"+0x14*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "B3-18")=0) BEGIN
     WRITE_ASCII ("%it_off%"+0x14*cnt) "B3-18M3"
   END
 END
 BUT_ONLY

COPY_EXISTING ~CUPHAER.CRE~ ~override~
              ~DROW05.CRE~ ~override~
              ~UDCHAL.CRE~ ~override~
              ~UDPHAE02.CRE~ ~override~
 READ_LONG 0x2bc "it_off"
 READ_LONG 0x2c0 "it_cnt"
 FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%it_off%"+0x14*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "DWCHA01")=0) BEGIN
     WRITE_ASCII ("%it_off%"+0x14*cnt) "DWCHAN01"
   END
 END
 BUT_ONLY

COPY_EXISTING ~VVSTAND3.CRE~ ~override~
 WRITE_ASCII 0x258 "RUNENEMY"
 BUT_ONLY


//////////////////////////////////////////////////////////////////////////
//13-04-2005 - fixing invalid Dead("...") triggers in 164 ToB scripts
//////////////////////////////////////////////////////////////////////////\
PRINT ~Fixing invalid Dead("...") triggers ...~

COPY_EXISTING_REGEXP GLOB ~.+\.bcs$~ ~override~
 DECOMPILE_AND_PATCH BEGIN
 REPLACE_TEXTUALLY ~!Dead("astSeenBy())")~ ~HPGT(LastSeenBy(),0)~
 REPLACE_TEXTUALLY ~!Dead("astSeenBy(Myself))")~ ~HPGT(LastSeenBy(Myself),0)~
 REPLACE_TEXTUALLY ~!Dead("astHeardBy())")~ ~HPGT(LastHeardBy(),0)~
 REPLACE_TEXTUALLY ~!Dead("astHeardBy(Myself))")~ ~HPGT(LastHeardBy(Myself),0)~
 REPLACE_TEXTUALLY ~!Dead("yself)")~ ~HPGT(Myself,0)~
 REPLACE_TEXTUALLY ~!Dead("astAttackerOf(")~ ~HPGT(LastAttackerOf(),0)~
 REPLACE_TEXTUALLY ~!Dead("astAttackerOf(LastSeenBy(Myself)))")~ ~HPGT(LastAttackerOf(LastSeenBy(Myself)),0)~
 REPLACE_TEXTUALLY ~!Dead("astTrigger)")~ ~HPGT(LastTrigger,0)~
 REPLACE_TEXTUALLY ~Dead("astTrigger)")~ ~HPLT(LastTrigger,1)~
 END
 BUT_ONLY


//////////////////////////////////////////////////////////////////////////
//22-05-2005
//////////////////////////////////////////////////////////////////////////\
COPY_EXISTING ~IGIBBER.CRE~ ~override~
 WRITE_BYTE 0x23f  10   //Morale was 1

COPY_EXISTING ~MISC4G.ITM~ ~override~  //Irenicus' Portal Key
 WRITE_LONG 0x18 0x0000002d   //add Droppable flag

//////////////////////////////////////////////////////////////////////////
//24-05-2005
//////////////////////////////////////////////////////////////////////////\
COPY_EXISTING ~AERIE10.CRE~ ~override~
 WRITE_SHORT 0xe5c 0xffff   //move Studded Leather from quick slot to inventory slot
 WRITE_SHORT 0xe62 4

//////////////////////////////////////////////////////////////////////////
//23-06-2005
//////////////////////////////////////////////////////////////////////////\
COPY_EXISTING ~JAHEIR12.CRE~ ~override~
 WRITE_BYTE 0x23c 17       //only this Jaheira has DEX=14, all others - 17


//////////////////////////////////////////////////////////////////////////
//06-08-2005 - working on TDD
//////////////////////////////////////////////////////////////////////////\
COPY_EXISTING ~AR1303.are~ ~override~
 READ_LONG  0x70  "cont_offset"
 READ_SHORT 0x74  "cont_num"
 READ_SHORT 0x76  "items_num"
 READ_LONG  0x78  "items_offset"
 SET "first_item"=0
 SET "items"=0
 FOR( cnt=0; cnt<"%cont_num%"; cnt=cnt+1 ) BEGIN  //containers loop
   READ_ASCII ("%cont_offset%"+0xc0*cnt)       "cont_name" (11)
   PATCH_IF (("%cont_name%" STRING_COMPARE_CASE "Container 9")=0) BEGIN
     READ_LONG ("%cont_offset%"+0xc0*cnt+0x40)  "first_item"
     READ_LONG ("%cont_offset%"+0xc0*cnt+0x44)  "items"
   END
 END
 PATCH_IF ("%items%">0 ) BEGIN
   FOR( cnt=0; cnt<"%items%"; cnt=cnt+1 ) BEGIN       //items loop
     READ_ASCII ("%items_offset%"+0x14*(cnt+"%first_item%")) "name"
     PATCH_IF (("%name%" STRING_COMPARE_CASE "None")=0) BEGIN
       WRITE_ASCII ("%items_offset%"+0x14*(cnt+"%first_item%"))     "AROW01"  //replacing item
       WRITE_SHORT ("%items_offset%"+0x14*(cnt+"%first_item%")+0xa) 20
     END
   END
 END
BUT_ONLY  //********************************************************  ~AR1303.are~

COPY_EXISTING ~AR2812.are~ ~override~
 READ_SHORT 0x5a  "infotrig_num"
 READ_LONG  0x5c  "infotrig_offset"
 FOR( cnt=0; cnt<"%infotrig_num%"; cnt=cnt+1 ) BEGIN  //info\triggers loop
   READ_ASCII ("%infotrig_offset%"+0xc4*cnt)       "info_name"
   PATCH_IF (("%info_name%" STRING_COMPARE_CASE "Tran2800")=0) BEGIN
     WRITE_LONG ("%infotrig_offset%"+0xc4*cnt+0x60) 4  //party required flag
   END
 END
BUT_ONLY //********************************************************  ~AR2812.are~


//-------------------------------------------------------------------------
//Silver Dragon Adalon Pickpocket Exploit Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~UDSILVER.CRE~ ~override~
 READ_LONG 0x2b8 "slots_off"
 READ_LONG 0x2bc "it_off"
 READ_LONG 0x2c0 "it_cnt"
 SET index1=0
 SET index2=0
 FOR( cnt=0; cnt<"%it_cnt%"; cnt=cnt+1 ) BEGIN
   READ_ASCII ("%it_off%"+0x14*cnt) "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "MISC8H")=0) BEGIN
     SET index1=cnt                            //find Blood of a Silver Dragon's index in items list
   END
   PATCH_IF (("%name%" STRING_COMPARE_CASE "MISCCC")=0) BEGIN
     SET index2=cnt                            //find Note's index in items list
   END
 END
 FOR( cnt=0; cnt<38; cnt=cnt+1 ) BEGIN
   READ_SHORT ("%slots_off%"+2*cnt) nnn
   PATCH_IF (nnn=index1 OR nnn=index2) BEGIN
     WRITE_SHORT ("%slots_off%"+2*cnt) 0xffff //remove above items from any slot
   END
 END
 WRITE_SHORT ("%slots_off%"+2*3) index1        //put Blood to Gloves slot to avoid pickpocketing
 WRITE_SHORT ("%slots_off%"+2*6) index2        //put Note to Amulet slot to avoid pickpocketing
BUT_ONLY



COPY_EXISTING ~SPWI608.spl~ ~override~  //Pierce Magic
              ~SPWI322.spl~ ~override~  //Detect Illusion
              ~SPWI513.spl~ ~override~  //Breach
              ~SPWI514.spl~ ~override~  //Lower Resistance
              ~SPWI903.spl~ ~override~  //Spellstrike
              ~SPWISH26.spl~ ~override~
              ~SPWISH38.spl~ ~override~
 READ_LONG  0x64  "ability_offset"
 READ_SHORT 0x68  "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1 OR "%type%"=2) BEGIN        //Melee or Ranged
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0xD)  0   //No dispell\Bypass resistance - was Not Bypass Resistance
     END
   END
 END
BUT_ONLY


COPY_EXISTING ~SPWI423.spl~ ~override~    //Spider Spawn
 READ_LONG  0x64  "ability_offset"
 READ_SHORT 0x68  "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1 ) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0xD)  0   //No dispell\Bypass resistance
     END
   END
 END
BUT_ONLY


COPY_EXISTING ~SPPR317.spl~ ~override~    //Cure Disease
              ~SPIN201.spl~ ~override~    //Neutralize Poison
              ~SPPR404.spl~ ~override~    //Neutralize Poison
              ~DEVAHEAL.spl~ ~override~    //Heal
              ~SENSPIHE.spl~ ~override~    //Heal
              ~SPIN679.spl~ ~override~    //Heal
              ~SPPR607.spl~ ~override~    //Heal
 READ_LONG  0x64  "ability_offset"
 READ_SHORT 0x68  "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1 ) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0xD)  3   //Dispell\Bypass resistance - was Not dispell\Not Bypass Resistance
     END
   END
 END
BUT_ONLY


COPY_EXISTING ~SPWI103.spl~ ~override~    //Burning Hands
 READ_LONG  0x64  "ability_offset"
 READ_SHORT 0x68  "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1 ) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx)) eff_type
       PATCH_IF( eff_type=165 ) THEN BEGIN   //Pause caster effect
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0xD)  0   //No dispell\Bypass resistance
       END
     END
   END
 END
BUT_ONLY


COPY_EXISTING ~SPWI408.spl~ ~override~    //Stoneskin
              ~SPWI512.spl~ ~override~    //Prot. from Electricity
 READ_LONG  0x64  "ability_offset"
 READ_SHORT 0x68  "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1 ) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0xD)  3   //Dispell\Bypass resistance
     END
   END
 END
BUT_ONLY


COPY_EXISTING ~MISC2A.ITM~ ~override~
 WRITE_ASCII 0x58 "CMISC8V"  #8 //carried icon
 BUT_ONLY


COPY_EXISTING ~UNDHIT2.EFF~ ~override~
 WRITE_LONG 0x60 2   //effect parameter
 BUT_ONLY


COPY_EXISTING ~RING97.ITM~ ~override~
 READ_LONG  0x6a "eff_offset"
 READ_SHORT 0x70 "eff_cnt"
 FOR( cnt2=0; cnt2<"%eff_cnt%"; cnt2=cnt2+1 ) BEGIN
  WRITE_BYTE ("%eff_offset%"+0x30*cnt2+0xD)  0   //no Dispell\Bypass resistance
 END
BUT_ONLY


COPY_EXISTING ~SPCL122.SPL~ ~override~
              ~SPCL131.SPL~ ~override~
              ~SPCL133.SPL~ ~override~
              ~SPCL141.SPL~ ~override~
              ~SPCL142.SPL~ ~override~
              ~SPCL143.SPL~ ~override~
              ~SPCL144.SPL~ ~override~
              ~SPCL151.SPL~ ~override~
              ~SPCL152.SPL~ ~override~
              ~SPCL153.SPL~ ~override~
              ~SPCL154.SPL~ ~override~
              ~SPCL221.SPL~ ~override~
              ~SPCL233b.SPL~ ~override~
              ~SPCL234.SPL~ ~override~
              ~SPCL235.SPL~ ~override~
              ~SPCL241.SPL~ ~override~
              ~SPCL242.SPL~ ~override~
              ~SPCL321.SPL~ ~override~
              ~SPCL331.SPL~ ~override~
              ~SPCL332.SPL~ ~override~
              ~SPCL341.SPL~ ~override~
              ~SPCL351.SPL~ ~override~
              ~SPCL417.SPL~ ~override~
              ~SPCL421.SPL~ ~override~
              ~SPCL423.SPL~ ~override~
              ~SPCL441.SPL~ ~override~
              ~SPCL541.SPL~ ~override~
              ~SPCL611.SPL~ ~override~
              ~SPCL612.SPL~ ~override~
              ~SPCL613.SPL~ ~override~
              ~SPCL621.SPL~ ~override~
              ~SPCL632.SPL~ ~override~
              ~SPCL633.SPL~ ~override~
              ~SPCL634.SPL~ ~override~
              ~SPCL643.SPL~ ~override~
              ~SPCL644.SPL~ ~override~
              ~SPCL812.SPL~ ~override~
              ~SPCL813.SPL~ ~override~
              ~SPCL814.SPL~ ~override~
              ~SPCL816.SPL~ ~override~
              ~SPCL817.SPL~ ~override~
              ~SPCL818.SPL~ ~override~
              ~SPCL819.SPL~ ~override~
              ~SPCL821.SPL~ ~override~
              ~SPCL924.SPL~ ~override~
              ~SPCL925.SPL~ ~override~
              ~SPCL926.SPL~ ~override~
              ~SPCL927.SPL~ ~override~
              ~SPCL931.SPL~ ~override~
              ~SPCL932.SPL~ ~override~
              ~SPCL933.SPL~ ~override~
              ~SPCL934.SPL~ ~override~
              ~SPCL900.SPL~ ~override~
              ~SPCL901.SPL~ ~override~
              ~SPCL902.SPL~ ~override~
              ~SPCL903.SPL~ ~override~
              ~SPCL904.SPL~ ~override~
              ~SPCL905.SPL~ ~override~
              ~SPCL906.SPL~ ~override~
              ~SPCL907.SPL~ ~override~
              ~SPCL909.SPL~ ~override~
              ~SPCL913.SPL~ ~override~
              ~SPCL914.SPL~ ~override~
              ~SPCL915.SPL~ ~override~
              ~SPCL916.SPL~ ~override~
              ~SPCL917.SPL~ ~override~
              ~SPCL918.SPL~ ~override~
              ~SPCL919.SPL~ ~override~
              ~SPCL920.SPL~ ~override~
              ~SPCL921.SPL~ ~override~
              ~SPCL922.SPL~ ~override~
              ~SPCL928.SPL~ ~override~
              ~SPCL929.SPL~ ~override~
              ~SPCL930.SPL~ ~override~

              ~SPWI522.SPL~ ~override~  //Minor Spell Turning
              ~SPWI701.SPL~ ~override~  //Spell Turning
              ~SPWI425.SPL~ ~override~  //Wizard Eye

              ~SPIN107.SPL~ ~override~
              ~SPIN110.SPL~ ~override~
              ~SPIN111.SPL~ ~override~
              ~SPIN122.SPL~ ~override~
              ~SPIN123.SPL~ ~override~
              ~SPIN124.SPL~ ~override~
              ~SPIN125.SPL~ ~override~
              ~SPIN126.SPL~ ~override~
              ~SPIN127.SPL~ ~override~
              ~SPIN150.SPL~ ~override~
              ~SPIN151.SPL~ ~override~
              ~SPIN152.SPL~ ~override~
              ~SPIN153.SPL~ ~override~
              ~SPIN154.SPL~ ~override~
              ~SPIN155.SPL~ ~override~
              ~SPIN156.SPL~ ~override~
              ~SPIN157.SPL~ ~override~
              ~SPIN529.SPL~ ~override~  //?
              ~SPIN667.SPL~ ~override~  //?
              ~SPIN717.SPL~ ~override~
              ~SPIN718.SPL~ ~override~  //?
              ~SPIN783.SPL~ ~override~
              ~SPIN823.SPL~ ~override~
              ~SPIN830.SPL~ ~override~  //?
              ~SPIN852.SPL~ ~override~
              ~SPIN868.SPL~ ~override~
              ~SPIN869.SPL~ ~override~
              ~SPINHUM.SPL~ ~override~
              ~SPMDSLAY.SPL~ ~override~
              ~SPPR731.SPL~ ~override~
              ~SPPR732.SPL~ ~override~
              ~SPWI489.SPL~ ~override~
              ~SPWI490.SPL~ ~override~
              ~SPWI491.SPL~ ~override~
              ~SPWI493.SPL~ ~override~
              ~SPWI494.SPL~ ~override~
              ~SPWI495.SPL~ ~override~
              ~SPWI496.SPL~ ~override~
              ~SPWI497.SPL~ ~override~
              ~SPWI498.SPL~ ~override~
              ~SPWI499.SPL~ ~override~

              ~SPPR207.SPL~ ~override~  //Good Berries

 READ_LONG  0x64  "ability_offset"
 READ_SHORT 0x68  "abil_cnt"
 READ_LONG  0x6a  "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1 ) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0xD)  0   //Not Dispell\Bypass resistance
     END
   END
 END
BUT_ONLY


COPY_EXISTING ~SPCL642.SPL~ ~override~
 READ_LONG  0x64  "ability_offset"
 READ_SHORT 0x68  "abil_cnt"
 READ_LONG  0x6a  "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1 ) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       WRITE_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+4)  0xfffffffe  //-2 value to STR and CON as AVENGER kit must have
     END
   END
 END
BUT_ONLY


COPY_EXISTING ~SPCL908.SPL~ ~override~
 READ_LONG  0x64  "ability_offset"
 READ_SHORT 0x68  "abil_cnt"
 READ_LONG  0x6a  "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1 ) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx

     WRITE_SHORT ("%ability_offset%"+0x28*cnt+0x0e)  30 //30 feet

     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+2)  target
       PATCH_IF( target=1 ) BEGIN
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0xD)  0   //Not Dispell\Bypass resistance
       END
       PATCH_IF( target=2 ) BEGIN
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+2)  5 //global target excluding party
       END
     END
   END
 END
BUT_ONLY


COPY_EXISTING ~SPWI505.SPL~ ~override~  //Shadow Door
              ~SPPR505.SPL~ ~override~  //True Seeing
              ~SPPR505D.SPL~ ~override~  //True Seeing
              ~SPCL232.SPL~ ~override~  //True Sight
              ~SPCL232D.SPL~ ~override~  //True Sight
              ~SPCL732.SPL~ ~override~  //True Sight
              ~SPIN633.SPL~ ~override~  //True Seeing
              ~SPIN684.SPL~ ~override~  //True Sight
              ~SPPR950.SPL~ ~override~  //True Sight
              ~SPWI609.SPL~ ~override~  //True Sight
              ~SPWI609D.SPL~ ~override~  //True Sight

              ~SPPR508.SPL~ ~override~  //Chaotic commands
 READ_LONG  0x64  "ability_offset"
 READ_SHORT 0x68  "abil_cnt"
 READ_LONG  0x6a  "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1 ) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0xD)  3   //Dispell\Bypass resistance
     END
   END
 END
BUT_ONLY


COPY_EXISTING ~SPWI211.spl~ ~override~  //Melf's Acid Arrow
 READ_LONG  0x64  "ability_offset"
 READ_SHORT 0x68  "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1 OR "%type%"=2) BEGIN        //Melee or Ranged
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0xD)  1   //Dispell\Not Bypass resistance
     END
   END
 END
BUT_ONLY


COPY_EXISTING ~SPPR610.SPL~ ~override~
 READ_LONG  0x64  "ability_offset"
 READ_SHORT 0x68  "abil_cnt"
 READ_LONG  0x6a  "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=2 ) BEGIN        //ranged
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx

     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "type2"
       PATCH_IF( "%type2%"=142 ) BEGIN
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0xD)  1   //Dispell\Not Bypass resistance
       END
     END
   END
 END
BUT_ONLY


COPY_EXISTING ~SPIN114.SPL~ ~override~
 READ_LONG  0x64  "ability_offset"
 READ_SHORT 0x68  "abil_cnt"
 READ_LONG  0x6a  "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1 ) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "type2"
       PATCH_IF( "%type2%"=67 ) BEGIN
         WRITE_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14)  ~WOLFDR01~
       END
     END
   END
 END
BUT_ONLY

//Extremist Fixes

//-------------------------------------------------------------------------
//Improved Mace Of Disruption Fix by Extremist
//-------------------------------------------------------------------------
COPY ~NeJE\bdash\extrem\BLUN25.ITM~ ~override~  //effects added
COPY_EXISTING ~MACEDISR.EFF~ ~override\MACEDIS1.EFF~
    WRITE_BYTE 0x60   0x01

//-------------------------------------------------------------------------
//Azuredge Axe Fixes by Extremist
//-------------------------------------------------------------------------
COPY_EXISTING ~AX1H10.ITM~ ~override~  //effects added
COPY_EXISTING ~MACEDISR.EFF~ ~override\MACEDIS4.EFF~
    WRITE_BYTE 0x60   0x04

//Other weapon fixes by Extremist

COPY_EXISTING ~BLUN03.ITM~ ~override\BLUN03.ITM~
    WRITE_BYTE 0x4C   0x0C

//-------------------------------------------------------------------------
//Mace Of Disruption Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~BLUN12.ITM~ ~override~
 READ_LONG 0x64 "ability_offset"
 READ_SHORT 0x68 "ability_cnt"
 READ_LONG 0x6a "eff_offset"
 SET eff_number=0
 SET eff_idx=0
 FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
   PATCH_IF ("%type%"=1) BEGIN      //Melee
     READ_SHORT ("%ability_offset%"+0x38*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x38*cnt+0x20)  eff_idx
   END
 END
 PATCH_IF( eff_number>0 ) BEGIN
  FOR( cnt=0; cnt<eff_number; cnt=cnt+1 ) BEGIN
    READ_ASCII ("%eff_offset%"+0x30*(cnt+eff_idx)+0x14) "eff_name"
    PATCH_IF( ("%eff_name%" STRING_COMPARE_CASE "DIE")=0 ) BEGIN
      WRITE_LONG ("%eff_offset%"+0x30*(cnt+eff_idx)+0x24) 0x04         //save vs. death\poison
      WRITE_LONG ("%eff_offset%"+0x30*(cnt+eff_idx)+0x28) 0xfffffffc   //save bonus
    END
  END
 END
BUT_ONLY

COPY_EXISTING ~BLUN12.ITM~ ~override\BLUN12.ITM~
    WRITE_BYTE 0x1EE  0x04
    WRITE_LONG  0x1F2  0xFFFFFFFC

COPY_EXISTING ~BLUN13.ITM~ ~override\BLUN13.ITM~
    WRITE_BYTE 0x8C   0x02
COPY_EXISTING ~BLUN20.ITM~ ~override\BLUN20.ITM~
    DELETE_BYTES 0x19A 96
    WRITE_BYTE  144   0x06
    WRITE_BYTE  0x21E 0x01
    WRITE_BYTE  0x222 0x03

//-------------------------------------------------------------------------
//Short Bow +1 Graphics Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~BOW06.ITM~ ~override~
 WRITE_ASCII 0x3a "IBOW06"     //icon
 WRITE_BYTE (0x3a+6) 0
 WRITE_ASCII 0x58 "CBOW06"     //icon
 WRITE_BYTE (0x58+6) 0
 READ_LONG   0x64 "ability_offset"
 READ_SHORT  0x68 "ability_cnt"
 FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
   PATCH_IF ("%type%"=4) BEGIN      //Launcher
     WRITE_ASCII ("%ability_offset%"+0x38*cnt+4) "IBOW06" //icon
     WRITE_BYTE ("%ability_offset%"+0x38*cnt+4+6) 0
   END
 END
 WRITE_BYTE 0x31 105  //Proficiency - ShortBow
BUT_ONLY

COPY_EXISTING ~BOW06.ITM~ ~override\BOW06.ITM~
    WRITE_BYTE 0x4C   0x02

COPY_EXISTING ~BOW11.ITM~ ~override\BOW11.ITM~
    WRITE_BYTE 0x4C   0x07
    WRITE_BYTE 0x84   0x04
COPY_EXISTING ~DAGG13.ITM~ ~override\DAGG13.ITM~
    WRITE_BYTE 0x162  0x00
    WRITE_BYTE 0x192  0x00
    WRITE_BYTE 0x1C2  0x00
    WRITE_BYTE 0x1F2  0x00

COPY_EXISTING ~DWSW1H01.ITM~ ~override~
 WRITE_BYTE 0x2b 0x02     //setting unusable beastmaster
 READ_LONG  0x1e "unus"
 WRITE_LONG 0x1e ("%unus%" BAND 0xdfffffff)  //resetting unusable flag for monks
 READ_SHORT 0x70 "eff_cnt"
 PATCH_IF( "%eff_cnt%"=4 ) BEGIN
   WRITE_SHORT 0x70 3     //make 4th effect (Vocalize) unusable
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Dwarven Thrower Usability\Damage Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~HAMM06.ITM~ ~override~
 WRITE_LONG 0x1e 0xfefdb740     //unusability
 READ_LONG 0x64 "ability_offset"
 READ_SHORT 0x68 "ability_cnt"
 FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
   PATCH_IF ("%type%"=2) BEGIN      //Ranged
     WRITE_ASCII ("%ability_offset%"+0x38*cnt+4) "IHAMM05" #8 //thrown icon
   END
   PATCH_IF ("%type%"=1) BEGIN      //Melee
     WRITE_SHORT ("%ability_offset%"+0x38*cnt+0x1a) 3 //damage bonus
   END
 END
BUT_ONLY

COPY_EXISTING ~HAMM06.ITM~ ~override\HAMM06.ITM~
    WRITE_LONG  0x1E   0xFEFDB740
    WRITE_BYTE 0x7C   0x35
    WRITE_BYTE 0xC4   0x03

COPY_EXISTING ~SLNG06.ITM~ ~override\SLNG06.ITM~
    WRITE_BYTE 0x7C   0x36
COPY_EXISTING ~SPER06.ITM~ ~override\SPER06.ITM~
    WRITE_BYTE 0x4C   0x03
COPY_EXISTING ~STAF05.ITM~ ~override\STAF05.ITM~
    WRITE_LONG  0x84   0x00000001


COPY_EXISTING ~STAF16.ITM~ ~override\STAF16.ITM~
    WRITE_SHORT 0x34   0x09C4
    WRITE_BYTE 0x1B7  0x02
    WRITE_BYTE 0x1CE  0x01

//-------------------------------------------------------------------------
//Scimitar Usability Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~SW1H20.ITM~ ~override~
              ~SW1H22.ITM~ ~override~
              ~SW1H23.ITM~ ~override~
              ~SW1H30.ITM~ ~override~
              ~SW1H52.ITM~ ~override~
              ~SW1H56.ITM~ ~override~
 WRITE_BYTE 0x2b 0x02   //beastmaster
BUT_ONLY

COPY_EXISTING ~SW1H40.ITM~ ~override\SW1H40.ITM~
    WRITE_BYTE 0x88   0x04
    WRITE_BYTE 0x8A   0x02

//***************************************************************************
COPY_EXISTING ~SW2H12.ITM~ ~override~
 READ_LONG  0x6a  "eff_offset"
 READ_SHORT 0x70  "glob_eff_cnt"
 SET ccc=0
 FOR( cnt=0; cnt<"%glob_eff_cnt%"; cnt=cnt+1 ) BEGIN
   READ_SHORT ("%eff_offset%"+0x30*cnt)  "type"
   PATCH_IF( "%type%"=177 ) BEGIN              //Use EFF file
     WRITE_LONG ("%eff_offset%"+0x30*cnt+4)  2 //MASK_GENEUTRAL
   END
 END
BUT_ONLY

COPY_EXISTING ~FLAMENOR.EFF~ ~override~
  WRITE_LONG 0x1c   51        //CHAOTIC_EVIL
BUT_ONLY

COPY_EXISTING ~SW2H12.ITM~ ~override\SW2H12.ITM~
    WRITE_BYTE 0x1A2  0x02
COPY_EXISTING ~FLAMENOR.EFF~ ~override\FLAMENOR.EFF~
    WRITE_BYTE 0x1C   0x33
//***************************************************************************

COPY_EXISTING ~RODS04.ITM~ ~override\RODS04.ITM~
    WRITE_LONG  0x1E   0x60721840
    WRITE_LONG  0xAC   0x00000001
    WRITE_BYTE 0xB2   0x02
    WRITE_BYTE 0xB6   0x02
COPY_EXISTING ~HAMM04.ITM~ ~override\HAMM04.ITM~
    WRITE_BYTE 0x13E  0x00
    WRITE_BYTE 0x142  0x02
    WRITE_BYTE 0x16E  0x00
    WRITE_BYTE 0x172  0x02

COPY_EXISTING ~SCRL03.ITM~ ~override\SCRL03.ITM~
    WRITE_BYTE 0xB7   0x00
    WRITE_BYTE 0xE7   0x00
    WRITE_BYTE 0x117  0x00
    WRITE_BYTE 0x147  0x00
    WRITE_BYTE 0x177  0x00
    WRITE_BYTE 0x1A7  0x00
COPY_EXISTING ~SCRL04.ITM~ ~override\SCRL04.ITM~
    WRITE_BYTE 0xB7   0x00
    WRITE_BYTE 0xE7   0x00
    WRITE_BYTE 0x117  0x00
    WRITE_BYTE 0x147  0x00
    WRITE_BYTE 0x177  0x00
    WRITE_BYTE 0x1A7  0x00
COPY_EXISTING ~SCRL05.ITM~ ~override\SCRL05.ITM~
    WRITE_BYTE 0xB7   0x00
    WRITE_BYTE 0xE7   0x00
    WRITE_BYTE 0x117  0x00
    WRITE_BYTE 0x147  0x00
    WRITE_BYTE 0x177  0x00
    WRITE_BYTE 0x1A7  0x00
COPY_EXISTING ~SCRL06.ITM~ ~override\SCRL06.ITM~
    WRITE_BYTE 0xB7   0x00
    WRITE_BYTE 0xE7   0x00
    WRITE_BYTE 0x117  0x00
    WRITE_BYTE 0x147  0x00
    WRITE_BYTE 0x177  0x00
    WRITE_BYTE 0x1A7  0x00
COPY_EXISTING ~SCRL08.ITM~ ~override\SCRL08.ITM~
    WRITE_BYTE 0xB7   0x00
    WRITE_BYTE 0xE7   0x00
    WRITE_BYTE 0x117  0x00
    WRITE_BYTE 0x147  0x00
    WRITE_BYTE 0x177  0x00
    WRITE_BYTE 0x1A7  0x00
    WRITE_BYTE 0x1D7  0x00
    WRITE_BYTE 0x207  0x00
    WRITE_BYTE 0x237  0x00
    WRITE_BYTE 0x267  0x00
COPY_EXISTING ~SCRL09.ITM~ ~override\SCRL09.ITM~
    WRITE_BYTE 0xB7   0x00
    WRITE_BYTE 0xE7   0x00
    WRITE_BYTE 0x117  0x00
    WRITE_BYTE 0x147  0x00
    WRITE_BYTE 0x177  0x00
    WRITE_BYTE 0x1A7  0x00
COPY_EXISTING ~SCRL15.ITM~ ~override\SCRL15.ITM~
    WRITE_BYTE 0xB7   0x00
    WRITE_BYTE 0xE7   0x00
    WRITE_BYTE 0x117  0x00
    WRITE_BYTE 0x147  0x00
    WRITE_BYTE 0x177  0x00
    WRITE_BYTE 0x1A7  0x00

COPY_EXISTING ~SCRLA7.ITM~ ~override\SCRLA7.ITM~
    WRITE_SHORT 0x3F   0x3632
    WRITE_SHORT 0x7B   0x3632
    WRITE_SHORT 0xB3   0x3632

COPY_EXISTING ~AMUL22.ITM~ ~override\AMUL22.ITM~
    WRITE_BYTE 0x147  0x02
    WRITE_BYTE 0x177  0x02
    WRITE_BYTE 0x1A7  0x02
    WRITE_BYTE 0x1D7  0x02

//-------------------------------------------------------------------------
//Ring Of Free Action Fix
//-------------------------------------------------------------------------

/*COPY ~NeJE\bdash\extrem\RING09.ITM~ ~override~
COPY_EXISTING ~RING09.ITM~ ~override~
 READ_LONG  0x6a "eff_offset"
 READ_SHORT 0x70 "eff_cnt"
 FOR( cnt=0; cnt<"%eff_cnt%"; cnt=cnt+1 ) BEGIN
   READ_SHORT ("%eff_offset%"+0x30*cnt) "type"
   PATCH_IF( "%type%" = 163 ) BEGIN               //free action
     WRITE_BYTE ("%eff_offset%"+0x30*cnt+0xc) 2   //while equipped
   END
   WRITE_BYTE ("%eff_offset%"+0x30*cnt+0xd) 0   //Not dispel\Bypass rsistance
 END
BUT_ONLY*/

COPY_EXISTING ~BRAC18.ITM~ ~override\BRAC18.ITM~
    WRITE_LONG  0x1E   0x00000000
    WRITE_BYTE 0x72   0x03
//COPY_EXISTING ~PLAT06.ITM~ ~override\PLAT06.ITM~ //Druids can wear ankheg plate
//    WRITE_BYTE 0x21   0x60
COPY_EXISTING ~PLAT11.ITM~ ~override\PLAT11.ITM~
    DELETE_BYTES 0x1F2 48
    WRITE_BYTE  112   0x08

COPY_EXISTING ~SHLD07.ITM~ ~override\SHLD07.ITM~
    WRITE_BYTE 0x76   0x01
COPY_EXISTING ~SHLD28.ITM~ ~override\SHLD28.ITM~
    WRITE_BYTE 118    0xFD
COPY_EXISTING ~RODS02.ITM~ ~override\RODS02.ITM~
    WRITE_BYTE 0x1F   0x03
    WRITE_BYTE 0x21   0x60
COPY_EXISTING ~RODSPEAR.ITM~ ~override\RODSPEAR.ITM~
    WRITE_BYTE 0x16A  0x06
COPY_EXISTING ~POTN09.ITM~ ~override\POTN09.ITM~
    WRITE_BYTE 0xDC   0x01
COPY_EXISTING ~POTN13.ITM~ ~override\POTN13.ITM~
    WRITE_BYTE 0xC6   0x05
    WRITE_BYTE 0xCA   0x03
    WRITE_BYTE 0x126  0x05
    WRITE_BYTE 0x12A  0x03
COPY_EXISTING ~POTN34.ITM~ ~override\POTN34.ITM~
    WRITE_BYTE 0xE2   0x3F

//-------------------------------------------------------------------------
//Rings Of Air & Fire Control Saving Throws Fixes
//-------------------------------------------------------------------------
COPY_EXISTING ~RING27.ITM~ ~override~
              ~RING28.ITM~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "ability_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
   PATCH_IF ("%type%"=3) BEGIN      //Magical
     READ_SHORT ("%ability_offset%"+0x38*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x38*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( "%eff_type%" = 5 ) BEGIN  //charm creature
         WRITE_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x24) 1   //Save vs spells
         WRITE_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x28) 2   //Save bonus
       END
     END
   END
 END
BUT_ONLY

//-------------------------------------------------------------------------
//Ring Of Earth Control Fix
//-------------------------------------------------------------------------

COPY ~NeJE\bdash\extrem\CHRMSPEC.EFF~ ~override~

COPY_EXISTING ~RING27.ITM~ ~override\RING27.ITM~
    WRITE_BYTE 0x80   0x02
    WRITE_BYTE 0x99   0x08
    WRITE_BYTE 0x17A  0xB1
    WRITE_BYTE 0x17E  0xBB
    WRITE_BYTE 0x182  0x05
    WRITE_ASCII 0x18E  ~CHRMSPEC~
    WRITE_BYTE 0x19E  0x01
    WRITE_BYTE 0x1A2  0x02
COPY_EXISTING ~RING28.ITM~ ~override\RING28.ITM~
    WRITE_BYTE 0x80   0x02
    WRITE_BYTE 0x99   0x08
    WRITE_BYTE 0xE2   0xB1
    WRITE_BYTE 0xE6   0xBA
    WRITE_BYTE 0xEA   0x05
    WRITE_BYTE 0xEF   0x02
    WRITE_ASCII 0xF6   ~CHRMSPEC~
    WRITE_BYTE 0x106  0x01
    WRITE_BYTE 0x10A  0x02

COPY_EXISTING ~MISC9O.ITM~ ~override\MISC9O.ITM~
    WRITE_BYTE 33    0x20

//-------------------------------------------------------------------------
//Hostile authorities fix by Extremist
//-------------------------------------------------------------------------

COPY_EXISTING ~AMNTRP01.BCS~ ~override\AMNTRP01.BCS~
    REPLACE_BCS_BLOCK ~NeJE\bdash\extrem\sfixes\oamntrp.BCS~ ~NeJE\bdash\extrem\sfixes\namntrp.BCS~
COPY_EXISTING ~AMNTRP02.BCS~ ~override\AMNTRP02.BCS~
    REPLACE_BCS_BLOCK ~NeJE\bdash\extrem\sfixes\oamntrp.BCS~ ~NeJE\bdash\extrem\sfixes\namntrp.BCS~
COPY_EXISTING ~AMNTRP03.BCS~ ~override\AMNTRP03.BCS~
    REPLACE_BCS_BLOCK ~NeJE\bdash\extrem\sfixes\oamntrp.BCS~ ~NeJE\bdash\extrem\sfixes\namntrp.BCS~

//-------------------------------------------------------------------------
//Glaicas fix by Extremist
//-------------------------------------------------------------------------

COPY_EXISTING ~AR1303.BCS~ ~override\AR1303.BCS~
    REPLACE_TEXTUALLY ~2326~ ~3866~

//-------------------------------------------------------------------------
//Open the chest in Aran's guild fix by Extremist
//-------------------------------------------------------------------------

COPY_EXISTING ~AR0327.ARE~ ~override\AR0327.ARE~
    WRITE_BYTE 0x15D6  0x5A

//-------------------------------------------------------------------------
//Major fixes in Slums by Extremist
//-------------------------------------------------------------------------

COPY_EXISTING ~AR0400.BCS~ ~override\AR0400.BCS~
    REPLACE_BCS_BLOCK ~NeJE\bdash\extrem\sfixes\ovAR0400.BCS~ ~NeJE\bdash\extrem\sfixes\nvAR0400.BCS~
    REPLACE_BCS_BLOCK ~NeJE\bdash\extrem\sfixes\opAR0400.BCS~ ~NeJE\bdash\extrem\sfixes\npAR0400.BCS~
EXTEND_BOTTOM ~AR0400.BCS~ ~NeJE\bdash\extrem\sfixes\eAR0400.BCS~

//Creature fixes by Extremist

COPY_EXISTING ~BODTAN.CRE~ ~override\BODTAN.CRE~
    WRITE_BYTE 0x271   0x04
COPY_EXISTING ~DDGUARD2.CRE~ ~override\DDGUARD3.CRE~
    WRITE_BYTE 0x287   0x33
    WRITE_BYTE 0x2D3   0x33
    WRITE_BYTE 0x5D0   0x36
COPY_EXISTING ~DGTROL01.CRE~ ~override\DGTROL01.CRE~
    WRITE_BYTE 0x273   0xA7
COPY_EXISTING ~SAHOTY01.CRE~ ~override\SAHOTY01.CRE~
    WRITE_BYTE 0x271   0x05

COPY ~NeJE\bdash\extrem\sfixes\GRAE.BCS~ ~override~

//Greater Wolfwere regeneration fix by Cirneth

COPY_EXISTING ~RINGWOLF.ITM~ ~override\RINGWOLF.ITM~
    WRITE_BYTE 0x7E    0x02

//Jon Irenicus as Slayer in Hell regeneration fix by Extremist

COPY_EXISTING ~HSLAYWPN.ITM~ ~override\HSLAYWPN.ITM~
    WRITE_BYTE 0x4D6   0x02

//Miscellaneous fixes by Extremist

COPY ~NeJE\bdash\extrem\MINHP1.ITM~ ~override~

COPY_EXISTING ~KPSOLD01.CRE~ ~override\KPSOLD01.CRE~
    WRITE_ASCII 0x254 ~MCUT~

COPY_EXISTING ~FIGSPID.ITM~ ~override\FIGSPID.ITM~
    WRITE_BYTE 232 0x0E
COPY_EXISTING ~SPIN683.SPL~ ~override\SPIN683.SPL~
    WRITE_BYTE 312 0x15
COPY_EXISTING ~SPIN699.SPL~ ~override\SPIN699.SPL~
    WRITE_BYTE 300 0x02

//-------------------------------------------------------------------------
//Mordenkainen's Sword Amulets & Mind-Control Magic Susceptbility Fixes
//-------------------------------------------------------------------------

COPY ~NeJE\bdash\extrem\IPSION.ITM~ ~override~
 READ_LONG  0x18 "flags"
 WRITE_LONG 0x18 ("%flags%" BOR 0x00000004)  //make it droppable
BUT_ONLY

//******************************************************************************
//******************* SPCL521.SPL **********************************************
//******************************************************************************
//-------------------------------------------------------------------------
//Blade Offensive Spin Ability Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~SPCL521.SPL~ ~override~
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 SET haste_offset=0
 SET eff_num_offset=0
 SET eff_nnn=0
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN        //Melee
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x28*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       PATCH_IF( "%eff_type%" = 16 ) BEGIN  //search for Haste
         haste_offset = ("%eff_offset%"+0x30*(cnt2+eff_idx))
         eff_num_offset = ("%ability_offset%"+0x28*cnt+0x1e)
         eff_nnn = eff_number
       END
     END
   END
 END
 PATCH_IF( haste_offset>0 ) BEGIN
   WRITE_SHORT eff_num_offset (eff_nnn+1)
   DELETE_BYTES haste_offset  0x30*2
   INSERT_FILE haste_offset ~NeJE\bdash\BIN\SPCL521.SP_~
 END
BUT_ONLY

COPY_EXISTING ~SPCL321D.SPL~ ~override\SPCL321D.SPL~
    WRITE_SHORT 0xCA   0x0116
    WRITE_LONG  0xCE   0xFFFFFFFE
    WRITE_BYTE 0xD2   0x00
    WRITE_LONG  0xDE   0x70784500
    WRITE_LONG  0xE2   0x74617269
COPY_EXISTING ~SPCL521.SPL~ ~override\SPCL521.SPL~
    WRITE_SHORT 0xFA   0x0116
    WRITE_BYTE 0xFE   0x02
    WRITE_BYTE 0x102  0x00
    WRITE_LONG  0x10E  0x70784500
    WRITE_LONG  0x112  0x74617269
COPY_EXISTING ~HITPLUS1.EFF~ ~override\HITPLUS1.EFF~
    WRITE_SHORT 0x10   0x0116
    WRITE_BYTE 0x1C   0x01
    WRITE_BYTE 0x20   0x00
    WRITE_BYTE 0x60   0x00

COPY_EXISTING ~SW1HSEEK.ITM~ ~override\SW1HSEEK.ITM~
    WRITE_BYTE 0x88   0x04
    WRITE_BYTE 0x8A   0x02

COPY_EXISTING ~SPCL741.SPL~ ~override\SPCL741.SPL~
    WRITE_SHORT 0x31A  0x0116
    WRITE_SHORT 0x70A  0x0116
    WRITE_SHORT 0xAFA  0x0116
    WRITE_SHORT 0xEEA  0x0116
    WRITE_SHORT 0x12DA 0x0116
    WRITE_SHORT 0x16CA 0x0116
    WRITE_SHORT 0x1ABA 0x0116
    WRITE_SHORT 0x1EAA 0x0116
    WRITE_SHORT 0x22CA 0x0116
    WRITE_SHORT 0x26BA 0x0116
    WRITE_SHORT 0x2AAA 0x0116

COPY_EXISTING ~SPCL222.SPL~ ~override\SPCL222.SPL~
    WRITE_SHORT 0xA7   0x2803
    WRITE_BYTE 0xD7   0x03
    WRITE_BYTE 0x107  0x03
    WRITE_BYTE 0x137  0x03
    WRITE_BYTE 0x167  0x03
    WRITE_BYTE 0x197  0x03
    WRITE_BYTE 0x1C7  0x03
    WRITE_BYTE 0x1F7  0x03

COPY_EXISTING ~SPWI114.SPL~ ~override\SPWI114.SPL~
    WRITE_LONG  0x196  0x012C0300

COPY_EXISTING ~UDDROW23.STO~ ~override\UDDROW23.STO~
    WRITE_BYTE 0x2D0  0x00

COPY_EXISTING ~HELM06.ITM~ ~override\HELM06.ITM~
    DELETE_BYTES 0x1C2 48
    WRITE_BYTE  112   0x08
    WRITE_BYTE  144   0x00

COPY_EXISTING ~MOOND2.EFF~ ~override\SPECHOIC.EFF~
    WRITE_SHORT 0X1C   0x0000
    WRITE_BYTE 0X20   0x0D
    WRITE_BYTE 0X24   0x01
    WRITE_BYTE 0X60   0x00
COPY_EXISTING ~MOOND4.EFF~ ~override\SPECHOLD.EFF~
    WRITE_SHORT 0X1C   0x0000
    WRITE_BYTE 0X24   0x01
    WRITE_BYTE 0X28   0x09
    WRITE_BYTE 0X60   0x00

//-------------------------------------------------------------------------
//Potion Of Freedom Fix
//-------------------------------------------------------------------------
COPY_EXISTING ~POTN45.ITM~ ~override~
 READ_LONG 0x64 "ability_offset"
 READ_SHORT 0x68 "ability_cnt"
 READ_LONG 0x6a "eff_offset"
 FOR( cnt=0; cnt<"%ability_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+0x38*cnt) "type"
   PATCH_IF ("%type%"=3) BEGIN      //Magical
     READ_SHORT ("%ability_offset%"+0x38*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x38*cnt+0x20)  eff_idx
     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "eff_type"
       READ_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+8) "eff"
       PATCH_IF( "%eff_type%" = 142 ) BEGIN                         //display portrait icon
         WRITE_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0e) 600   //Duration
       END
       PATCH_IF( "%eff_type%" = 163 ) BEGIN                         //free action
         WRITE_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x0e) 600   //Duration
       END
       PATCH_IF( ("%eff_type%" = 101) AND ("%eff%"=5) ) BEGIN    //Charm -> prot from Haste
         WRITE_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  206   //prot from spell
         WRITE_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+4) 0
         WRITE_ASCII ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14) "SPIN828"
         WRITE_BYTE ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x14+7) 0
       END
     END
   END
 END
BUT_ONLY

COPY_EXISTING ~TOMEGOL4.cre~ ~override~
 READ_LONG  0x2b8  "item_slots_offset"
 READ_LONG  0x2bc  "items_offset"
 READ_LONG  0x2c0  "items_num"
 SET idx=0xffffffff
 FOR( cnt=0; cnt<"%items_num%"; cnt=cnt+1 ) BEGIN       //items loop
   READ_ASCII ("%items_offset%"+0x14*cnt)  "name"
   PATCH_IF ( ("%name%" STRING_COMPARE_CASE "GOLTOME4")=0 ) BEGIN
     SET idx=cnt
   END
 END
 SET offset = "%item_slots_offset%" + 2*9    //weapon slot
 WRITE_SHORT offset "%idx%"
BUT_ONLY

//BALDUR.BCS fixes by Extremist
COPY_EXISTING ~BALDUR.BCS~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\extrem\sfixes\oBALDUR.BCS~ ~NeJE\bdash\extrem\sfixes\nBALDUR.BCS~
EXTEND_BOTTOM ~BALDUR.BCS~ ~NeJE\bdash\extrem\sfixes\eBALDUR.BCS~

// Stop Anomen's LT if Valygar speaks
COPY_EXISTING ~Anomen.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\BAF_x\xAnomen.BAF~ ~NeJE\bdash\BAF_r\rAnomen.BAF~

// Prevent NPCs from leaving the party because of the unfavourable reputation changes
COPY_EXISTING ~happy.2da~ ~override~
  SET_2DA_ENTRY  0 1 4 ~-160~
  SET_2DA_ENTRY  1 1 4 ~-160~
  SET_2DA_ENTRY  0 2 4 ~-160~
  SET_2DA_ENTRY 18 3 4 ~-160~
  SET_2DA_ENTRY 19 3 4 ~-160~
  BUT_ONLY

//Minsc Ever Stutter Fix - 04.08.2017
COPY_EXISTING ~Minsc.bcs~ ~override~
 DECOMPILE_AND_PATCH BEGIN
  REPLACE_TEXTUALLY
~GlobalLT("MinscReminder","LOCALS",2)~
~OR(2)
    Global("MinscReminder","LOCALS",1)
    Global("MinscReminder","LOCALS",2)~
END

///////////////////////////////////////////////
//   Essential ToB fixes by David Gaider
///////////////////////////////////////////////

//Imoen fixes
COPY_EXISTING ~Imoe25.bcs~ ~override~
    EXTEND_BOTTOM ~Imoe25.bcs~ ~NeJE\bdash\BAF_b\eImoe25.BAF~

//Sarevok fixes
ACTION_IF FILE_EXISTS ~Sarev25.bcs~
 THEN BEGIN
    COPY_EXISTING ~Sarev25.bcs~ ~override~
    EXTEND_BOTTOM ~Sarev25.bcs~ ~NeJE\bdash\BAF_b\Sarev25.BAF~
END
 ELSE BEGIN
        COMPILE ~NeJE\bdash\BAF_b\Sarev25.BAF~
END

//KIT.IDS (by Idobek - thanks!!!)

COPY_EXISTING ~kit.ids~ ~override\kit.ids~
  REPLACE_TEXTUALLY ~0x00004000~ ~0x4000~ // TRUECLASS_MAGESCHOOL_GENERALIST
  REPLACE_TEXTUALLY ~0x00000040~ ~0x0040~ // MAGESCHOOL_ABJURER
  REPLACE_TEXTUALLY ~0x00000080~ ~0x0080~ // MAGESCHOOL_CONJURER
  REPLACE_TEXTUALLY ~0x00000100~ ~0x0100~ // MAGESCHOOL_DIVINER
  REPLACE_TEXTUALLY ~0x00000200~ ~0x0200~ // MAGESCHOOL_ENCHANTER
  REPLACE_TEXTUALLY ~0x00000400~ ~0x0400~ // MAGESCHOOL_ILLUSIONIST
  REPLACE_TEXTUALLY ~0x00000800~ ~0x0800~ // MAGESCHOOL_INVOKER
  REPLACE_TEXTUALLY ~0x00001000~ ~0x1000~ // MAGESCHOOL_NECROMANCER
  REPLACE_TEXTUALLY ~0x00002000~ ~0x2000~ // MAGESCHOOL_TRANSMUTER
  REPLACE_TEXTUALLY ~0x00000001~ ~0x4001~ // BERSERKER
  REPLACE_TEXTUALLY ~0x00000002~ ~0x4002~ // WIZARDSLAYER
  REPLACE_TEXTUALLY ~0x00000004~ ~0x4003~ // KENSAI
  REPLACE_TEXTUALLY ~0x00000008~ ~0x4004~ // CAVALIER
  REPLACE_TEXTUALLY ~0x00000010~ ~0x4005~ // INQUISITOR
  REPLACE_TEXTUALLY ~0x00000020~ ~0x4006~ // UNDEADHUNTER
  REPLACE_TEXTUALLY ~0x00008000~ ~0x4007~ // FERALAN
  REPLACE_TEXTUALLY ~0x00010000~ ~0x4008~ // STALKER
  REPLACE_TEXTUALLY ~0x00020000~ ~0x4009~ // BEASTMASTER
  REPLACE_TEXTUALLY ~0x00040000~ ~0x400A~ // ASSASIN
  REPLACE_TEXTUALLY ~0x00080000~ ~0x400B~ // BOUNTYHUNTER
  REPLACE_TEXTUALLY ~0x00100000~ ~0x400C~ // SWASHBUCKLER
  REPLACE_TEXTUALLY ~0x00200000~ ~0x400D~ // BLADE
  REPLACE_TEXTUALLY ~0x00400000~ ~0x400E~ // JESTER
  REPLACE_TEXTUALLY ~0x00800000~ ~0x400F~ // SKALD
  REPLACE_TEXTUALLY ~0x01000000~ ~0x4013~ // GODTALOS
  REPLACE_TEXTUALLY ~0x02000000~ ~0x4014~ // GODHELM
  REPLACE_TEXTUALLY ~0x04000000~ ~0x4015~ // GODLATHANDER
  REPLACE_TEXTUALLY ~0x08000000~ ~0x4010~ // TOTEMIC
  REPLACE_TEXTUALLY ~0x10000000~ ~0x4011~ // SHAPESHIFTER
  REPLACE_TEXTUALLY ~0x20000000~ ~0x4012~ // BEASTFRIEND
  REPLACE_TEXTUALLY ~0x40000000~ ~0x401F~ // BARBARIAN
BUT_ONLY

ACTION_IF FILE_EXISTS ~script compiler/AICOMPILE.exe~
    THEN BEGIN
        COPY_EXISTING   ~KIT.IDS~ ~script compiler~
END


//////////////////////////////////////////////////////////////////////\
// Messengers Fix
//////////////////////////////////////////////////////////////////////\

PRINT ~Messengers Fix (by Vlad)~

COPY_EXISTING ~Baldur.bcs~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY
~!Global("Chapter","GLOBAL",7)~
~!Global("Chapter","GLOBAL",7)
Global("VP_OnIsland","GLOBAL",0)
Global("VP_On_Island","GLOBAL",0)
Global("VP_InHalruaa","GLOBAL",0)
Global("VP_In_Halruaa","GLOBAL",0)~
        REPLACE_TEXTUALLY
~AreaType(OUTDOOR)~
~!AreaType(DUNGEON)~
        REPLACE_TEXTUALLY
~GlobalTimerExpired("MakeBrusWait","GLOBAL")~
~GlobalTimerExpired("MakeBrusWait","GLOBAL")
Global("VP_StopBrusSpawn","GLOBAL",0)~
        REPLACE_TEXTUALLY
~CreateCreatureObjectOffScreen("BRUS3",Player1,0,0,0)~
~SetGlobal("VP_StopBrusSpawn","GLOBAL",1)
CreateCreatureObjectOffScreen("BRUS3",Player1,0,0,0)~
   END

COPY_EXISTING ~Aerie.bcs~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY
~!Global("Chapter","GLOBAL",7)~
~!Global("Chapter","GLOBAL",7)
Global("VP_OnIsland","GLOBAL",0)
Global("VP_On_Island","GLOBAL",0)
Global("VP_InHalruaa","GLOBAL",0)
Global("VP_In_Halruaa","GLOBAL",0)~
        REPLACE_TEXTUALLY
~AreaType(CITY)[^!]*AreaType(OUTDOOR)~
~!AreaType(DUNGEON)~
    END

COPY_EXISTING ~Anomen.bcs~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY
~!Global("Chapter","GLOBAL",7)~
~!Global("Chapter","GLOBAL",7)
Global("VP_OnIsland","GLOBAL",0)
Global("VP_On_Island","GLOBAL",0)
Global("VP_InHalruaa","GLOBAL",0)
Global("VP_In_Halruaa","GLOBAL",0)~
        REPLACE_TEXTUALLY
~AreaType(OUTDOOR)[^!]*AreaType(CITY)~
~!AreaCheck("AR1900")
!AreaCheck("AR1400")
!AreaCheck("AR1404")
!AreaCheck("AR2500")
!AreaCheck("AR2600")
!AreaCheck("TT9000")
!AreaType(DUNGEON)
CombatCounter(0)~
        REPLACE_TEXTUALLY
~AreaType(OUTDOOR)~
~!AreaType(DUNGEON)
CombatCounter(0)~
        REPLACE_TEXTUALLY
~Global("LoveTalk","LOCALS",27)~
~Global("LoveTalk","LOCALS",27)
CombatCounter(0)
    OR(23)
        AreaCheck("AR0020")
        AreaCheck("AR0021")
        AreaCheck("AR0022")
        AreaCheck("AR0300")
        AreaCheck("AR0313")
        AreaCheck("AR0314")
        AreaCheck("AR0319")
        AreaCheck("AR0400")
        AreaCheck("AR0408")
        AreaCheck("AR0500")
        AreaCheck("AR0700")
        AreaCheck("AR0702")
        AreaCheck("AR0703")
        AreaCheck("AR0704")
        AreaCheck("AR0706")
        AreaCheck("AR0709")
        AreaCheck("AR0713")
        AreaCheck("AR0900")
        AreaCheck("AR1002")
        AreaCheck("AR1010")
        AreaCheck("AR1100")
        AreaCheck("AR1200")
        AreaCheck("AR2000")~
    END

COPY_EXISTING ~Jaheira.bcs~ ~override~
   DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY
~!Global("Chapter","GLOBAL",7)~
~!Global("Chapter","GLOBAL",7)
Global("VP_OnIsland","GLOBAL",0)
Global("VP_On_Island","GLOBAL",0)
Global("VP_InHalruaa","GLOBAL",0)
Global("VP_In_Halruaa","GLOBAL",0)~
        REPLACE_TEXTUALLY
~!AreaType(CITY)[^!]*AreaType(OUTDOOR)~
~!AreaType(DUNGEON)
CombatCounter(0)~
        REPLACE_TEXTUALLY
~AreaType(OUTDOOR)~
~!AreaType(DUNGEON)~
        REPLACE_TEXTUALLY
~CreateCreatureObjectOffScreen("JAERTO1","Jaheira",0,0,0)[^!]*CreateCreatureObjectOffScreen("JAERTO2","Jaheira",0,0,0)[^!]*CreateCreatureObjectOffScreen("JAERTO3","Jaheira",0,0,0)[^!]*CreateCreatureObjectOffScreen("JAERTO4","Jaheira",0,0,0)[^!]*CreateCreatureObject("JAERTOF","Jaheira",0,0,0)[^!]*ActionOverride("Ertof",Wait(3))~
~CreateCreatureObject("JAERTO1","Jaheira",0,0,0)
CreateCreatureObject("JAERTO2","Jaheira",0,0,0)
CreateCreatureObject("JAERTO3","Jaheira",0,0,0)
CreateCreatureObject("JAERTO4","Jaheira",0,0,0)
CreateCreatureObject("JAERTOF","Jaheira",0,0,0)~
    END

 COPY_EXISTING ~Minsc.bcs~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY
~!Global("Chapter","GLOBAL",7)~
~!Global("Chapter","GLOBAL",7)
Global("VP_OnIsland","GLOBAL",0)
Global("VP_On_Island","GLOBAL",0)
Global("VP_InHalruaa","GLOBAL",0)
Global("VP_In_Halruaa","GLOBAL",0)~
        REPLACE_TEXTUALLY
~AreaType(CITY)[^!]* AreaType(OUTDOOR)~
~!AreaType(DUNGEON)~
        REPLACE_TEXTUALLY
~AreaType(OUTDOOR)~
~!AreaType(DUNGEON)~
    END

COPY_EXISTING ~Edwin.bcs~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY
~!Global("Chapter","GLOBAL",7)~
~!Global("Chapter","GLOBAL",7)
Global("VP_OnIsland","GLOBAL",0)
Global("VP_On_Island","GLOBAL",0)
Global("VP_InHalruaa","GLOBAL",0)
Global("VP_In_Halruaa","GLOBAL",0)~
        REPLACE_TEXTUALLY
~AreaType(OUTDOOR)~
~!AreaType(DUNGEON)~
   END

COPY_EXISTING ~Mazzy.bcs~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY
~!Global("Chapter","GLOBAL",7)~
~!Global("Chapter","GLOBAL",7)
Global("VP_OnIsland","GLOBAL",0)
Global("VP_On_Island","GLOBAL",0)
Global("VP_InHalruaa","GLOBAL",0)
Global("VP_In_Halruaa","GLOBAL",0)~
        REPLACE_TEXTUALLY
~AreaType(OUTDOOR)~
~!AreaType(DUNGEON)~
   END

COPY_EXISTING ~Jan.bcs~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY
~!Global("Chapter","GLOBAL",7)~
~!Global("Chapter","GLOBAL",7)
Global("VP_OnIsland","GLOBAL",0)
Global("VP_On_Island","GLOBAL",0)
Global("VP_InHalruaa","GLOBAL",0)
Global("VP_In_Halruaa","GLOBAL",0)~
        REPLACE_TEXTUALLY
~AreaType(OUTDOOR)~
~!AreaType(DUNGEON)~
   END

//Bodhi in Asylum Fix - 15.12.2017
COPY_EXISTING ~PPBODHI4.BCS~ ~override~
       DECOMPILE_AND_PATCH BEGIN
            REPLACE_TEXTUALLY
~Detect([PC])~
~OR(2)
        Detect([PC])
        See([PC])~
    END
BUT_ONLY

COPY_EXISTING ~PPBODHI4.CRE~ ~override~
 READ_LONG  0x2bc  "items_offset"
 READ_LONG  0x2c0  "items_num"
 FOR (cnt=0; cnt<"%items_num%"; cnt=cnt+1) BEGIN       //items loop
   READ_ASCII ("%items_offset%"+0x14*cnt)  "name"
   PATCH_IF (("%name%" STRING_COMPARE_CASE "MINHP20")=0) BEGIN
     WRITE_ASCII ("%items_offset%"+0x14*cnt)  "MINHPBOD"
   END
 END
BUT_ONLY

//Slayer transformations in Asylum Fix - 20.03.2018
/*COPY_EXISTING ~AR1514.BCS~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY
~GlobalTimerExpired("SlayerTimer","GLOBAL")~
~RealGlobalTimerExpired("SlayerTimer","GLOBAL")~
        REPLACE_TEXTUALLY
~Global("change","AR1514",0)~
~Global("VP_Into_Slayer_Fix","GLOBAL",0)~
        REPLACE_TEXTUALLY
~Global("change","AR1514",1)~
~Global("VP_Into_Slayer_Fix","GLOBAL",1)~
        REPLACE_TEXTUALLY
~SetGlobal("change","AR1514",1)~
~SetGlobal("VP_Into_Slayer_Fix","GLOBAL",1)~
        REPLACE_TEXTUALLY
~SetGlobal("change","AR1514",2)~
~SetGlobal("VP_Into_Slayer_Fix","GLOBAL",2)~
        REPLACE_TEXTUALLY
~SetGlobalTimer("SlayerTimer","GLOBAL",6)~
~RealSetGlobalTimer("SlayerTimer","GLOBAL",5)~
    END
BUT_ONLY*/

COPY_EXISTING ~BALDUR.BCS~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY
~SetGlobalTimer("SlayerTimer2","GLOBAL",25)~
~RealSetGlobalTimer("SlayerTimer2","GLOBAL",5)~
        REPLACE_TEXTUALLY
~GlobalTimerExpired("SlayerTimer2","GLOBAL")~
~RealGlobalTimerExpired("SlayerTimer2","GLOBAL")~
    END
BUT_ONLY


//**********************************************************************************
// From Baldurdash
//**********************************************************************************
COPY_EXISTING ~SPWI953.SPL~ ~override~
 WRITE_ASCII 0x3a ~SPPR608C~   //spell icon
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN                                  //Melee
     WRITE_ASCII ("%ability_offset%"+cnt*0x28+4)  ~SPPR608B~   //spell icon
   END
 END
BUT_ONLY


COPY_EXISTING ~SPWI954.SPL~ ~override~
 WRITE_ASCII 0x3a ~SPPR101C~   //spell icon
 READ_LONG  0x64 "ability_offset"
 READ_SHORT 0x68 "abil_cnt"
 READ_LONG  0x6a "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x28)  "type"
   PATCH_IF("%type%"=1) BEGIN                                  //Melee
     WRITE_ASCII ("%ability_offset%"+cnt*0x28+4)  ~SPPR101B~   //spell icon
   END
 END
BUT_ONLY


COPY_EXISTING ~HAKSU.CRE~ ~override~
              ~NISHRUSU.CRE~ ~override~
 WRITE_BYTE 0x271   255    //monster
 WRITE_BYTE 0x272   136    //mist
 WRITE_BYTE 0x273   174    //mist
BUT_ONLY

COPY_EXISTING ~BASILG1.ITM~ ~override~
 READ_LONG  0x64  "ability_offset"
 READ_SHORT 0x68  "abil_cnt"
 READ_LONG  0x6a  "eff_offset"
 FOR( cnt=0; cnt<"%abil_cnt%"; cnt=cnt+1 ) BEGIN
   READ_BYTE ("%ability_offset%"+cnt*0x38)  "type"
   PATCH_IF("%type%"=2 ) BEGIN        //ranged
     READ_SHORT ("%ability_offset%"+0x38*cnt+0x1e)  eff_number
     READ_SHORT ("%ability_offset%"+0x38*cnt+0x20)  eff_idx

     FOR( cnt2=0; cnt2<eff_number; cnt2=cnt2+1 ) BEGIN
       READ_SHORT ("%eff_offset%"+0x30*(cnt2+eff_idx))  "type2"
       PATCH_IF( "%type2%"=134 ) BEGIN                            //Petrification
         WRITE_LONG ("%eff_offset%"+0x30*(cnt2+eff_idx)+0x24)  0x00000010 //save vs petrification, was vs death
       END
     END
   END
 END
BUT_ONLY

COPY_EXISTING ~NPSHLD.ITM~ ~override~
    READ_LONG  0x6a  "eff_offset"
    READ_SHORT 0x70  "glob_eff_cnt"
    FOR( cnt=0; cnt<"%glob_eff_cnt%"; cnt=cnt+1 ) BEGIN
        WRITE_BYTE ("%eff_offset%"+cnt*0x30)+13  0   //Not dispell\Bypass resistance
        WRITE_LONG ("%eff_offset%"+cnt*0x30)+32  0   //dice size
    END
BUT_ONLY

COPY_EXISTING ~PLAT14.ITM~ ~override~
    READ_LONG  0x6a  "eff_offset"
    READ_SHORT 0x70  "glob_eff_cnt"
    SET ccc=0
    FOR( cnt=0; cnt<"%glob_eff_cnt%"; cnt=cnt+1 ) BEGIN
        READ_SHORT ("%eff_offset%"+0x30*cnt)  "type"
        PATCH_IF( "%type%"=144 ) BEGIN                 //Petrification
            READ_LONG ("%eff_offset%"+0x30*cnt+8)  button
                PATCH_IF( button=0 ) BEGIN
                SET ccc = ccc+1
                PATCH_IF( ccc=2 ) BEGIN
                    WRITE_LONG ("%eff_offset%"+0x30*cnt+8)  1 //thieving skill
                END
            END
        END
    END
BUT_ONLY

COPY_EXISTING ~UNDHIT1.EFF~ ~override~
    WRITE_LONG 0x1c+4 3 //GENERAL.IDS
BUT_ONLY

//-------------------------------------------------------------------------
//Valygar Missing Spells Onjoin Fix - (Baldurdash)
//-------------------------------------------------------------------------

COPY_EXISTING ~VALYG8.CRE~ ~override~
    READ_LONG 0x2a4 "known_spells_num"
    PATCH_IF ("%known_spells_num%" = 0) BEGIN    //adding new known spells  *******************************
        ADD_KNOWN_SPELL ~SPPR111~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR101~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR103~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR104~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR113~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR105~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR110~ #0 ~priest~
        READ_LONG 0x2a0  "known_spells_offset"
        READ_LONG 0x2a4  "known_spells_num"
        READ_LONG 0x2a8  "spell_memorization_offset"
        READ_LONG 0x2ac  "spell_memorization_num"
        READ_LONG 0x2b0  "spell_memorized_offset"
        READ_LONG 0x2b4  "spell_memorized_num"
        READ_LONG 0x2b8  "item_slots_offset"
        READ_LONG 0x2bc  "items_offset"
        READ_LONG 0x2c0  "items_num"
        READ_LONG 0x2c4  "effects_offset"
        READ_LONG 0x2c8  "effects_num"
        WRITE_SHORT ("%spell_memorization_offset%"+0*16+2) 1   //memorizable spells count
        WRITE_SHORT ("%spell_memorization_offset%"+0*16+4) 1

        SET offset = "%spell_memorized_offset%"
        INSERT_BYTES offset        0x0c
        WRITE_ASCII offset        ~SPPR113~
        WRITE_SHORT offset+8      1                  //spell memorized
        WRITE_LONG 0x2b4  "%spell_memorized_num%"+1
        WRITE_SHORT ("%spell_memorization_offset%"+0*16+12) 1

        SET "info_ext"=0x0c
        PATCH_IF ("%known_spells_offset%">="%spell_memorized_offset%") BEGIN
            "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
            WRITE_LONG 0x2a0 "%known_spells_offset%"
        END
        PATCH_IF ("%spell_memorization_offset%">="%spell_memorized_offset%") BEGIN
            "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
            WRITE_LONG 0x2a8  "%spell_memorization_offset%"
        END
        PATCH_IF ("%item_slots_offset%">="%spell_memorized_offset%") BEGIN
            "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
            WRITE_LONG 0x2b8  "%item_slots_offset%"
        END
        PATCH_IF ("%items_offset%">="%spell_memorized_offset%") BEGIN
            "items_offset"="%items_offset%"+"%info_ext%"
            WRITE_LONG 0x2bc  "%items_offset%"
        END
        PATCH_IF ("%effects_offset%">="%spell_memorized_offset%") BEGIN
            "effects_offset"="%effects_offset%"+"%info_ext%"
            WRITE_LONG 0x2c4  "%effects_offset%"
        END
    END
BUT_ONLY

COPY_EXISTING ~VALYG9.CRE~ ~override~
    READ_LONG 0x2a4  "known_spells_num"
    PATCH_IF( "%known_spells_num%"=0 ) BEGIN    //adding new known spells  *******************************
        ADD_KNOWN_SPELL ~SPPR111~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR101~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR103~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR104~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR113~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR105~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR110~ #0 ~priest~
        READ_LONG 0x2a0  "known_spells_offset"
        READ_LONG 0x2a4  "known_spells_num"
        READ_LONG 0x2a8  "spell_memorization_offset"
        READ_LONG 0x2ac  "spell_memorization_num"
        READ_LONG 0x2b0  "spell_memorized_offset"
        READ_LONG 0x2b4  "spell_memorized_num"
        READ_LONG 0x2b8  "item_slots_offset"
        READ_LONG 0x2bc  "items_offset"
        READ_LONG 0x2c0  "items_num"
        READ_LONG 0x2c4  "effects_offset"
        READ_LONG 0x2c8  "effects_num"
        WRITE_SHORT ("%spell_memorization_offset%"+0*16+2) 2   //memorizable spells count
        WRITE_SHORT ("%spell_memorization_offset%"+0*16+4) 2

        SET offset = "%spell_memorized_offset%"
        INSERT_BYTES offset        0x0c*2
        WRITE_ASCII offset        ~SPPR113~
        WRITE_SHORT offset+8      1                  //spell memorized
        WRITE_ASCII offset+0x0c   ~SPPR103~
        WRITE_SHORT offset+0x0c+8 1                  //spell memorized
        WRITE_LONG 0x2b4  "%spell_memorized_num%"+2
        WRITE_SHORT ("%spell_memorization_offset%"+0*16+12) 2

        SET "info_ext"=0x0c*2
        PATCH_IF ("%known_spells_offset%">="%spell_memorized_offset%") BEGIN
            "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
            WRITE_LONG 0x2a0 "%known_spells_offset%"
        END
        PATCH_IF ("%spell_memorization_offset%">="%spell_memorized_offset%") BEGIN
            "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
            WRITE_LONG 0x2a8  "%spell_memorization_offset%"
        END
        PATCH_IF ("%item_slots_offset%">="%spell_memorized_offset%") BEGIN
            "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
            WRITE_LONG 0x2b8  "%item_slots_offset%"
        END
        PATCH_IF ("%items_offset%">="%spell_memorized_offset%") BEGIN
            "items_offset"="%items_offset%"+"%info_ext%"
            WRITE_LONG 0x2bc  "%items_offset%"
        END
        PATCH_IF ("%effects_offset%">="%spell_memorized_offset%") BEGIN
            "effects_offset"="%effects_offset%"+"%info_ext%"
            WRITE_LONG 0x2c4  "%effects_offset%"
        END
    END
BUT_ONLY

COPY_EXISTING ~VALYG11.CRE~ ~override~
    READ_LONG 0x2a4  "known_spells_num"
    PATCH_IF( "%known_spells_num%"=0 ) BEGIN    //adding new known spells  *******************************
        ADD_KNOWN_SPELL ~SPPR111~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR101~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR103~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR104~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR113~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR105~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR110~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR202~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR204~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR205~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR206~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR207~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR209~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR210~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR212~ #1 ~priest~
        READ_LONG 0x2a0  "known_spells_offset"
        READ_LONG 0x2a4  "known_spells_num"
        READ_LONG 0x2a8  "spell_memorization_offset"
        READ_LONG 0x2ac  "spell_memorization_num"
        READ_LONG 0x2b0  "spell_memorized_offset"
        READ_LONG 0x2b4  "spell_memorized_num"
        READ_LONG 0x2b8  "item_slots_offset"
        READ_LONG 0x2bc  "items_offset"
        READ_LONG 0x2c0  "items_num"
        READ_LONG 0x2c4  "effects_offset"
        READ_LONG 0x2c8  "effects_num"
        WRITE_SHORT ("%spell_memorization_offset%"+0*16+2) 2   //memorizable spells count
        WRITE_SHORT ("%spell_memorization_offset%"+0*16+4) 2
        WRITE_SHORT ("%spell_memorization_offset%"+1*16+2) 2   //memorizable spells count
        WRITE_SHORT ("%spell_memorization_offset%"+1*16+4) 2
        WRITE_SHORT ("%spell_memorization_offset%"+1*16+8) 2   //idx

        SET offset = "%spell_memorized_offset%"
        INSERT_BYTES offset          0x0c*4
        WRITE_ASCII offset          ~SPPR103~
        WRITE_SHORT offset+8        1                  //spell memorized
        WRITE_ASCII offset+0x0c     ~SPPR113~
        WRITE_SHORT offset+0x0c+8   1                  //spell memorized
        WRITE_ASCII offset+0x0c*2   ~SPPR204~
        WRITE_SHORT offset+0x0c*2+8 1                  //spell memorized
        WRITE_ASCII offset+0x0c*3   ~SPPR212~
        WRITE_SHORT offset+0x0c*3+8 1                  //spell memorized
        WRITE_LONG 0x2b4  "%spell_memorized_num%"+4
        WRITE_SHORT ("%spell_memorization_offset%"+0*16+12) 2
        WRITE_SHORT ("%spell_memorization_offset%"+1*16+12) 2

        SET "info_ext"=0x0c*4
        PATCH_IF ("%known_spells_offset%">="%spell_memorized_offset%") BEGIN
            "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
            WRITE_LONG 0x2a0 "%known_spells_offset%"
        END
        PATCH_IF ("%spell_memorization_offset%">="%spell_memorized_offset%") BEGIN
            "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
            WRITE_LONG  0x2a8  "%spell_memorization_offset%"
        END
        PATCH_IF ("%item_slots_offset%">="%spell_memorized_offset%") BEGIN
            "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
            WRITE_LONG  0x2b8  "%item_slots_offset%"
        END
        PATCH_IF ("%items_offset%">="%spell_memorized_offset%") BEGIN
            "items_offset"="%items_offset%"+"%info_ext%"
            WRITE_LONG  0x2bc  "%items_offset%"
        END
        PATCH_IF ("%effects_offset%">="%spell_memorized_offset%") BEGIN
            "effects_offset"="%effects_offset%"+"%info_ext%"
            WRITE_LONG  0x2c4  "%effects_offset%"
        END
    END
BUT_ONLY

COPY_EXISTING ~VALYG12.CRE~ ~override~
    READ_LONG  0x2a4  "known_spells_num"
    PATCH_IF( "%known_spells_num%"=0 ) BEGIN    //adding new known spells  *******************************
        ADD_KNOWN_SPELL ~SPPR111~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR101~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR103~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR104~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR113~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR105~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR110~ #0 ~priest~
        ADD_KNOWN_SPELL ~SPPR202~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR204~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR205~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR206~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR207~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR209~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR210~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR212~ #1 ~priest~
        ADD_KNOWN_SPELL ~SPPR302~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR317~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR315~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR303~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR305~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR309~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR310~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR306~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR311~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR312~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPPR319~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPRA301~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPRA302~ #2 ~priest~
        ADD_KNOWN_SPELL ~SPRA303~ #2 ~priest~
        READ_LONG  0x2a0  "known_spells_offset"
        READ_LONG  0x2a4  "known_spells_num"
        READ_LONG  0x2a8  "spell_memorization_offset"
        READ_LONG  0x2ac  "spell_memorization_num"
        READ_LONG  0x2b0  "spell_memorized_offset"
        READ_LONG  0x2b4  "spell_memorized_num"
        READ_LONG  0x2b8  "item_slots_offset"
        READ_LONG  0x2bc  "items_offset"
        READ_LONG  0x2c0  "items_num"
        READ_LONG  0x2c4  "effects_offset"
        READ_LONG  0x2c8  "effects_num"
        WRITE_SHORT ("%spell_memorization_offset%"+0*16+2) 2   //memorizable spells count
        WRITE_SHORT ("%spell_memorization_offset%"+0*16+4) 2
        WRITE_SHORT ("%spell_memorization_offset%"+1*16+2) 2   //memorizable spells count
        WRITE_SHORT ("%spell_memorization_offset%"+1*16+4) 2
        WRITE_SHORT ("%spell_memorization_offset%"+1*16+8) 2   //idx
        WRITE_SHORT ("%spell_memorization_offset%"+2*16+2) 1   //memorizable spells count
        WRITE_SHORT ("%spell_memorization_offset%"+2*16+4) 1
        WRITE_SHORT ("%spell_memorization_offset%"+2*16+8) 4   //idx

        SET offset = "%spell_memorized_offset%"
        INSERT_BYTES offset          0x0c*5
        WRITE_ASCII offset          ~SPPR103~
        WRITE_SHORT offset+8        1                  //spell memorized
        WRITE_ASCII offset+0x0c     ~SPPR113~
        WRITE_SHORT offset+0x0c+8   1                  //spell memorized
        WRITE_ASCII offset+0x0c*2   ~SPPR204~
        WRITE_SHORT offset+0x0c*2+8 1                  //spell memorized
        WRITE_ASCII offset+0x0c*3   ~SPPR212~
        WRITE_SHORT offset+0x0c*3+8 1                  //spell memorized
        WRITE_ASCII offset+0x0c*4   ~SPPR310~
        WRITE_SHORT offset+0x0c*4+8 1                  //spell memorized
        WRITE_LONG  0x2b4  "%spell_memorized_num%"+5
        WRITE_SHORT ("%spell_memorization_offset%"+0*16+12) 2
        WRITE_SHORT ("%spell_memorization_offset%"+1*16+12) 2
        WRITE_SHORT ("%spell_memorization_offset%"+2*16+12) 1

        SET "info_ext"=0x0c*5
        PATCH_IF ("%known_spells_offset%">="%spell_memorized_offset%") BEGIN
            "known_spells_offset"="%known_spells_offset%"+"%info_ext%"
            WRITE_LONG  0x2a0 "%known_spells_offset%"
        END
        PATCH_IF ("%spell_memorization_offset%">="%spell_memorized_offset%") BEGIN
            "spell_memorization_offset"="%spell_memorization_offset%"+"%info_ext%"
            WRITE_LONG  0x2a8  "%spell_memorization_offset%"
        END
        PATCH_IF ("%item_slots_offset%">="%spell_memorized_offset%") BEGIN
            "item_slots_offset"="%item_slots_offset%"+"%info_ext%"
            WRITE_LONG  0x2b8  "%item_slots_offset%"
        END
        PATCH_IF ("%items_offset%">="%spell_memorized_offset%") BEGIN
            "items_offset"="%items_offset%"+"%info_ext%"
            WRITE_LONG  0x2bc  "%items_offset%"
        END
        PATCH_IF ("%effects_offset%">="%spell_memorized_offset%") BEGIN
            "effects_offset"="%effects_offset%"+"%info_ext%"
            WRITE_LONG  0x2c4  "%effects_offset%"
        END
    END
BUT_ONLY

////////////////////////////////
// 20.05.2018 - New Fixes
////////////////////////////////

//Fix with Saemon reappearing in the Vulgar Monkey tavern
COPY_EXISTING ~ar1602.bcs~ ~override~
    EXTEND_BOTTOM ~ar1602.bcs~ ~NeJE\bdash\new_fix\exAR1602.BAF~

//Fix with EscapeAreaMove(...) - blocked exits
//1. Saemon in Brynnlaw
COPY_EXISTING ~PPSAEM3.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY
~EscapeAreaMove("AR1600",2949,2504,8)~
~SetGlobal("VP_EscapeAreaFixSm","GLOBAL",1)
EscapeAreaMove("AR1600",2949,2504,8)~
    END
BUT_ONLY

COPY_EXISTING ~ar1600.bcs~ ~override~
    EXTEND_BOTTOM ~ar1600.bcs~ ~NeJE\bdash\new_fix\exAR1600.BAF~

//2. Phaere in Underdark
COPY_EXISTING ~UDPHAE01.DLG~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY 
~EscapeAreaMove("AR2201",1014,1253,0)~
~SetGlobal("VP_EscapeAreaFixPh","GLOBAL",1)
EscapeAreaMove("AR2201",1014,1253,0)~
    END
BUT_ONLY

COPY_EXISTING ~ar2201.bcs~ ~override~
    EXTEND_BOTTOM ~ar2201.bcs~ ~NeJE\bdash\new_fix\exAR2201.BAF~

//Fixing Korgan's stutter
COPY_EXISTING ~Korgan.bcs~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~Dead("Mummy")~ ~Dead("Mummy03")~
    END

COPY_EXISTING ~AR0802.bcs~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY ~CreateCreature("Mummy",[1062.2121],3)~ ~CreateCreature("Mummy03",[1062.2121],3)~
        REPLACE_TEXTUALLY ~Dead("Mummy")~ ~Dead("Mummy03")~
    END

//////////////////////////////////////////////////////////////////////////
//09-06-2018 - Removing buggy OnCreation() triggers from scripts
//////////////////////////////////////////////////////////////////////////\
PRINT ~Fixing invalid OnCreation() triggers ...~

COPY_EXISTING ~AR0300.bcs~ ~override~
              ~AR0400.bcs~ ~override~
              ~AR0411.bcs~ ~override~
              ~AR0500.bcs~ ~override~
              ~AR0511.bcs~ ~override~
              ~AR0522.bcs~ ~override~
              ~AR0523.bcs~ ~override~
              ~AR0700.bcs~ ~override~
              ~AR0800.bcs~ ~override~
              ~AR1202.bcs~ ~override~
              ~AR1515.bcs~ ~override~
 DECOMPILE_AND_PATCH BEGIN
    REPLACE_TEXTUALLY ~OnCreation()~ ~~
 END
BUT_ONLY

//Fixing Nalia original script and dialogue
//Fixing Nalia's bug when not commenting on Torgal being dead
COPY_EXISTING ~Nalia.bcs~ ~override~
    REPLACE_BCS_BLOCK ~NeJE\bdash\Nalia\baf\xNalia.BAF~ ~NeJE\bdash\Nalia\baf\rNalia.BAF~
    REPLACE_BCS_BLOCK ~NeJE\bdash\Nalia\baf\yNalia.BAF~ ~NeJE\bdash\Nalia\baf\sNalia.BAF~
    REPLACE_BCS_BLOCK ~NeJE\bdash\Nalia\baf\zNalia.BAF~ ~NeJE\bdash\Nalia\baf\tNalia.BAF~

COPY_EXISTING ~Nalia.bcs~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY
~!Global("Chapter","GLOBAL",7)~
~!Global("Chapter","GLOBAL",7)
Global("VP_OnIsland","GLOBAL",0)
Global("VP_On_Island","GLOBAL",0)
Global("VP_InHalruaa","GLOBAL",0)
Global("VP_In_Halruaa","GLOBAL",0)~
        REPLACE_TEXTUALLY
~AreaType(OUTDOOR)~
~!AreaType(DUNGEON)~
        REPLACE_TEXTUALLY
~AreaType(CITY)~
~!AreaType(DUNGEON)~
        REPLACE_TEXTUALLY
~StartDialogNoSet([PC])[^!]*SetGlobal("NaliaInitKeepOnce","GLOBAL",1)~
~SetGlobal("NaliaInitKeepOnce","GLOBAL",1)
StartDialogNoSet([PC])~
        END
BUT_ONLY

//Fixing Viconia's release scene
COPY_EXISTING ~Viconia.bcs~ ~override~
    DECOMPILE_AND_PATCH BEGIN
        REPLACE_TEXTUALLY
~!Dead("victown1")[^!]*!Dead("victown4")~
~NumDead("victowna",0)~
        REPLACE_TEXTUALLY
~Dead("victown1")[^!]*Dead("victown4")~
~NumDeadGT("victowna",1)
NumDeadGT("victowna",1)~
        END
BUT_ONLY

//////////////////////////////////////////////////////////////////////////
//09-09-2018 - replacing bad triggers in dialogues
//////////////////////////////////////////////////////////////////////////

PRINT ~Fixing triggers and actions in dialogues ...~

//COMPILE ~NeJE/bdash/new_fix/fixdumb.d~
COMPILE ~NeJE/bdash/new_fix/fixglobal.d~

/*
COPY_EXISTING_REGEXP GLOB ~.+\.dlg$~ ~override~
    DECOMPILE_AND_PATCH BEGIN

        REPLACE_TEXTUALLY ~!IsValidForPartyDialog("Anomen")~ ~OR(3) !InParty("Anomen") Dead("Anomen") !See("Anomen")~
        REPLACE_TEXTUALLY ~!IsValidForPartyDialogue("Anomen")~ ~OR(3) !InParty("Anomen") Dead("Anomen") !See("Anomen")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialog("Anomen")~ ~InParty("Anomen") !Dead("Anomen") See("Anomen")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialogue("Anomen")~ ~InParty("Anomen") !Dead("Anomen") See("Anomen")~
        REPLACE_TEXTUALLY ~!IfValidForPartyDialogue("Anomen")~ ~OR(3) !InParty("Anomen") Dead("Anomen") !See("Anomen")~
        REPLACE_TEXTUALLY ~IfValidForPartyDialogue("Anomen")~ ~InParty("Anomen") !Dead("Anomen") See("Anomen")~

        REPLACE_TEXTUALLY ~!IsValidForPartyDialog("Aerie")~ ~OR(3) !InParty("Aerie") Dead("Aerie") !See("Aerie")~
        REPLACE_TEXTUALLY ~!IsValidForPartyDialogue("Aerie")~ ~OR(3) !InParty("Aerie") Dead("Aerie") !See("Aerie")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialog("Aerie")~ ~InParty("Aerie") !Dead("Aerie") See("Aerie")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialogue("Aerie")~ ~InParty("Aerie") !Dead("Aerie") See("Aerie")~
        REPLACE_TEXTUALLY ~!IfValidForPartyDialogue("Aerie")~ ~OR(3) !InParty("Aerie") Dead("Aerie") !See("Aerie")~
        REPLACE_TEXTUALLY ~IfValidForPartyDialogue("Aerie")~ ~InParty("Aerie") !Dead("Aerie") See("Aerie")~

        REPLACE_TEXTUALLY ~!IsValidForPartyDialog("Cernd")~ ~OR(3) !InParty("Cernd") Dead("Cernd") !See("Cernd")~
        REPLACE_TEXTUALLY ~!IsValidForPartyDialogue("Cernd")~ ~OR(3) !InParty("Cernd") Dead("Cernd") !See("Cernd")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialog("Cernd")~ ~InParty("Cernd") !Dead("Cernd") See("Cernd")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialogue("Cernd")~ ~InParty("Cernd") !Dead("Cernd") See("Cernd")~
        REPLACE_TEXTUALLY ~!IfValidForPartyDialogue("Cernd")~ ~OR(3) !InParty("Cernd") Dead("Cernd") !See("Cernd")~
        REPLACE_TEXTUALLY ~IfValidForPartyDialogue("Cernd")~ ~InParty("Cernd") !Dead("Cernd") See("Cernd")~

        REPLACE_TEXTUALLY ~!IsValidForPartyDialog("Haerdalis")~ ~OR(3) !InParty("Haerdalis") Dead("Haerdalis") !See("Haerdalis")~
        REPLACE_TEXTUALLY ~!IsValidForPartyDialogue("Haerdalis")~ ~OR(3) !InParty("Haerdalis") Dead("Haerdalis") !See("Haerdalis")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialog("Haerdalis")~ ~InParty("Haerdalis") !Dead("Haerdalis") See("Haerdalis")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialogue("Haerdalis")~ ~InParty("Haerdalis") !Dead("Haerdalis") See("Haerdalis")~
        REPLACE_TEXTUALLY ~!IfValidForPartyDialogue("Haerdalis")~ ~OR(3) !InParty("Haerdalis") Dead("Haerdalis") !See("Haerdalis")~
        REPLACE_TEXTUALLY ~IfValidForPartyDialogue("Haerdalis")~ ~InParty("Haerdalis") !Dead("Haerdalis") See("Haerdalis")~

        REPLACE_TEXTUALLY ~!IsValidForPartyDialog("Viconia")~ ~OR(3) !InParty("Viconia") Dead("Viconia") !See("Viconia")~
        REPLACE_TEXTUALLY ~!IsValidForPartyDialogue("Viconia")~ ~OR(3) !InParty("Viconia") Dead("Viconia") !See("Viconia")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialog("Viconia")~ ~InParty("Viconia") !Dead("Viconia") See("Viconia")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialogue("Viconia")~ ~InParty("Viconia") !Dead("Viconia") See("Viconia")~
        REPLACE_TEXTUALLY ~!IfValidForPartyDialogue("Viconia")~ ~OR(3) !InParty("Viconia") Dead("Viconia") !See("Viconia")~
        REPLACE_TEXTUALLY ~IfValidForPartyDialogue("Viconia")~ ~InParty("Viconia") !Dead("Viconia") See("Viconia")~

        REPLACE_TEXTUALLY ~!IsValidForPartyDialog("Jaheira")~ ~OR(3) !InParty("Jaheira") Dead("Jaheira") !See("Jaheira")~
        REPLACE_TEXTUALLY ~!IsValidForPartyDialogue("Jaheira")~ ~OR(3) !InParty("Jaheira") Dead("Jaheira") !See("Jaheira")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialog("Jaheira")~ ~InParty("Jaheira") !Dead("Jaheira") See("Jaheira")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialogue("Jaheira")~ ~InParty("Jaheira") !Dead("Jaheira") See("Jaheira")~
        REPLACE_TEXTUALLY ~!IfValidForPartyDialogue("Jaheira")~ ~OR(3) !InParty("Jaheira") Dead("Jaheira") !See("Jaheira")~
        REPLACE_TEXTUALLY ~IfValidForPartyDialogue("Jaheira")~ ~InParty("Jaheira") !Dead("Jaheira") See("Jaheira")~

        REPLACE_TEXTUALLY ~!IsValidForPartyDialog("Valygar")~ ~OR(3) !InParty("Valygar") Dead("Valygar") !See("Valygar")~
        REPLACE_TEXTUALLY ~!IsValidForPartyDialogue("Valygar")~ ~OR(3) !InParty("Valygar") Dead("Valygar") !See("Valygar")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialog("Valygar")~ ~InParty("Valygar") !Dead("Valygar") See("Valygar")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialogue("Valygar")~ ~InParty("Valygar") !Dead("Valygar") See("Valygar")~
        REPLACE_TEXTUALLY ~!IfValidForPartyDialogue("Valygar")~ ~OR(3) !InParty("Valygar") Dead("Valygar") !See("Valygar")~
        REPLACE_TEXTUALLY ~IfValidForPartyDialogue("Valygar")~ ~InParty("Valygar") !Dead("Valygar") See("Valygar")~

        REPLACE_TEXTUALLY ~!IsValidForPartyDialog("Keldorn")~ ~OR(3) !InParty("Keldorn") Dead("Keldorn") !See("Keldorn")~
        REPLACE_TEXTUALLY ~!IsValidForPartyDialogue("Keldorn")~ ~OR(3) !InParty("Keldorn") Dead("Keldorn") !See("Keldorn")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialog("Keldorn")~ ~InParty("Keldorn") !Dead("Keldorn") See("Keldorn")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialogue("Keldorn")~ ~InParty("Keldorn") !Dead("Keldorn") See("Keldorn")~
        REPLACE_TEXTUALLY ~!IfValidForPartyDialogue("Keldorn")~ ~OR(3) !InParty("Keldorn") Dead("Keldorn") !See("Keldorn")~
        REPLACE_TEXTUALLY ~IfValidForPartyDialogue("Keldorn")~ ~InParty("Keldorn") !Dead("Keldorn") See("Keldorn")~

        REPLACE_TEXTUALLY ~!IsValidForPartyDialog("Korgan")~ ~OR(3) !InParty("Korgan") Dead("Korgan") !See("Korgan")~
        REPLACE_TEXTUALLY ~!IsValidForPartyDialogue("Korgan")~ ~OR(3) !InParty("Korgan") Dead("Korgan") !See("Korgan")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialog("Korgan")~ ~InParty("Korgan") !Dead("Korgan") See("Korgan")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialogue("Korgan")~ ~InParty("Korgan") !Dead("Korgan") See("Korgan")~
        REPLACE_TEXTUALLY ~!IfValidForPartyDialogue("Korgan")~ ~OR(3) !InParty("Korgan") Dead("Korgan") !See("Korgan")~
        REPLACE_TEXTUALLY ~IfValidForPartyDialogue("Korgan")~ ~InParty("Korgan") !Dead("Korgan") See("Korgan")~

        REPLACE_TEXTUALLY ~!IsValidForPartyDialog("Jan")~ ~OR(3) !InParty("Jan") Dead("Jan") !See("Jan")~
        REPLACE_TEXTUALLY ~!IsValidForPartyDialogue("Jan")~ ~OR(3) !InParty("Jan") Dead("Jan") !See("Jan")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialog("Jan")~ ~InParty("Jan") !Dead("Jan") See("Jan")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialogue("Jan")~ ~InParty("Jan") !Dead("Jan") See("Jan")~
        REPLACE_TEXTUALLY ~!IfValidForPartyDialogue("Jan")~ ~OR(3) !InParty("Jan") Dead("Jan") !See("Jan")~
        REPLACE_TEXTUALLY ~IfValidForPartyDialogue("Jan")~ ~InParty("Jan") !Dead("Jan") See("Jan")~

        REPLACE_TEXTUALLY ~!IsValidForPartyDialog("Nalia")~ ~OR(3) !InParty("Nalia") Dead("Nalia") !See("Nalia")~
        REPLACE_TEXTUALLY ~!IsValidForPartyDialogue("Nalia")~ ~OR(3) !InParty("Nalia") Dead("Nalia") !See("Nalia")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialog("Nalia")~ ~InParty("Nalia") !Dead("Nalia") See("Nalia")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialogue("Nalia")~ ~InParty("Nalia") !Dead("Nalia") See("Nalia")~
        REPLACE_TEXTUALLY ~!IfValidForPartyDialogue("Nalia")~ ~OR(3) !InParty("Nalia") Dead("Nalia") !See("Nalia")~
        REPLACE_TEXTUALLY ~IfValidForPartyDialogue("Nalia")~ ~InParty("Nalia") !Dead("Nalia") See("Nalia")~

        REPLACE_TEXTUALLY ~!IsValidForPartyDialog("Mazzy")~ ~OR(3) !InParty("Mazzy") Dead("Mazzy") !See("Mazzy")~
        REPLACE_TEXTUALLY ~!IsValidForPartyDialogue("Mazzy")~ ~OR(3) !InParty("Mazzy") Dead("Mazzy") !See("Mazzy")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialog("Mazzy")~ ~InParty("Mazzy") !Dead("Mazzy") See("Mazzy")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialogue("Mazzy")~ ~InParty("Mazzy") !Dead("Mazzy") See("Mazzy")~
        REPLACE_TEXTUALLY ~!IfValidForPartyDialogue("Mazzy")~ ~OR(3) !InParty("Mazzy") Dead("Mazzy") !See("Mazzy")~
        REPLACE_TEXTUALLY ~IfValidForPartyDialogue("Mazzy")~ ~InParty("Mazzy") !Dead("Mazzy") See("Mazzy")~

        REPLACE_TEXTUALLY ~!IsValidForPartyDialog("Edwin")~ ~OR(3) !InParty("Edwin") Dead("Edwin") !See("Edwin")~
        REPLACE_TEXTUALLY ~!IsValidForPartyDialogue("Edwin")~ ~OR(3) !InParty("Edwin") Dead("Edwin") !See("Edwin")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialog("Edwin")~ ~InParty("Edwin") !Dead("Edwin") See("Edwin")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialogue("Edwin")~ ~InParty("Edwin") !Dead("Edwin") See("Edwin")~
        REPLACE_TEXTUALLY ~!IfValidForPartyDialogue("Edwin")~ ~OR(3) !InParty("Edwin") Dead("Edwin") !See("Edwin")~
        REPLACE_TEXTUALLY ~IfValidForPartyDialogue("Edwin")~ ~InParty("Edwin") !Dead("Edwin") See("Edwin")~

        REPLACE_TEXTUALLY ~!IsValidForPartyDialog("Imoen2")~ ~OR(3) !InParty("Imoen2") Dead("Imoen2") !See("Imoen2")~
        REPLACE_TEXTUALLY ~!IsValidForPartyDialogue("Imoen2")~ ~OR(3) !InParty("Imoen2") Dead("Imoen2") !See("Imoen2")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialog("Imoen2")~ ~InParty("Imoen2") !Dead("Imoen2") See("Imoen2")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialogue("Imoen2")~ ~InParty("Imoen2") !Dead("Imoen2") See("Imoen2")~
        REPLACE_TEXTUALLY ~!IfValidForPartyDialogue("Imoen2")~ ~OR(3) !InParty("Imoen2") Dead("Imoen2") !See("Imoen2")~
        REPLACE_TEXTUALLY ~IfValidForPartyDialogue("Imoen2")~ ~InParty("Imoen2") !Dead("Imoen2") See("Imoen2")~

        REPLACE_TEXTUALLY ~!IsValidForPartyDialog("Minsc")~ ~OR(3) !InParty("Minsc") Dead("Minsc") !See("Minsc")~
        REPLACE_TEXTUALLY ~!IsValidForPartyDialogue("Minsc")~ ~OR(3) !InParty("Minsc") Dead("Minsc") !See("Minsc")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialog("Minsc")~ ~InParty("Minsc") !Dead("Minsc") See("Minsc")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialogue("Minsc")~ ~InParty("Minsc") !Dead("Minsc") See("Minsc")~
        REPLACE_TEXTUALLY ~!IfValidForPartyDialogue("Minsc")~ ~OR(3) !InParty("Minsc") Dead("Minsc") !See("Minsc")~
        REPLACE_TEXTUALLY ~IfValidForPartyDialogue("Minsc")~ ~InParty("Minsc") !Dead("Minsc") See("Minsc")~

        REPLACE_TEXTUALLY ~!IsValidForPartyDialog("Yoshimo")~ ~OR(3) !InParty("Yoshimo") Dead("Yoshimo") !See("Yoshimo")~
        REPLACE_TEXTUALLY ~!IsValidForPartyDialogue("Yoshimo")~ ~OR(3) !InParty("Yoshimo") Dead("Yoshimo") !See("Yoshimo")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialog("Yoshimo")~ ~InParty("Yoshimo") !Dead("Yoshimo") See("Yoshimo")~
        REPLACE_TEXTUALLY ~IsValidForPartyDialogue("Yoshimo")~ ~InParty("Yoshimo") !Dead("Yoshimo") See("Yoshimo")~
        REPLACE_TEXTUALLY ~!IfValidForPartyDialogue("Yoshimo")~ ~OR(3) !InParty("Yoshimo") Dead("Yoshimo") !See("Yoshimo")~
        REPLACE_TEXTUALLY ~IfValidForPartyDialogue("Yoshimo")~ ~InParty("Yoshimo") !Dead("Yoshimo") See("Yoshimo")~
    END
BUT_ONLY
*/

COPY_EXISTING ~AR4500.ARE~ ~override~
    READ_SHORT  0x48 "flags"
    WRITE_SHORT 0x48 ("%flags%" BOR 0x0000)  //Setting Indoors flag
BUT_ONLY